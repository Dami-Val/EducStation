{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\PostEditor.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/PostEditor.jsx\nimport React, { useState, useEffect } from 'react';\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\n\n// Componentes para el editor\nimport DualModeEditor from './DualModeEditor';\nimport PostMetadata from './PostMetadata';\nimport CoverImageUploader from './CoverImageUploader';\nimport MarkdownGuide from './MarkdownGuide';\nimport StatusMessage from './StatusMessage';\nimport ImportExportActions from './ImportExportActions';\n\n// Funciones para almacenamiento local\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst savePostToLocalStorage = post => {\n  try {\n    const postToSave = {\n      ...post\n    };\n    // No guardamos la imagen como tal, sino solo la URL de vista previa\n    delete postToSave.coverImage;\n    localStorage.setItem('post_draft', JSON.stringify(postToSave));\n    console.log('Saved to localStorage:', postToSave); // Debug\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n  }\n};\nconst loadPostFromLocalStorage = () => {\n  try {\n    const savedPost = localStorage.getItem('post_draft');\n    return savedPost ? JSON.parse(savedPost) : null;\n  } catch (error) {\n    console.error('Error loading from localStorage:', error);\n    return null;\n  }\n};\nconst PostEditor = () => {\n  _s();\n  const [post, setPost] = useState({\n    title: '',\n    category: '',\n    content: '',\n    // Aseguramos que se inicie con una cadena vac√≠a\n    tags: '',\n    coverImage: null,\n    coverImagePreview: null,\n    status: 'draft',\n    // 'draft', 'published'\n    publishDate: new Date().toISOString().slice(0, 10),\n    editorMode: 'simple' // Set default mode to 'simple'\n  });\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(null);\n  const [isPublishing, setIsPublishing] = useState(false);\n\n  // Categor√≠as disponibles\n  const categories = ['Noticias', 'T√©cnicas de Estudio', 'Problem√°ticas', 'Educaci√≥n de Calidad', 'Herramientas', 'Desarrollo Docente', 'Comunidad'];\n\n  // Manejador para cambios en los campos del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Log para depuraci√≥n\n    console.log(`Changing ${name} to ${value}`);\n    setPost(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Manejador para cambios en la imagen de portada\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setPost(prev => ({\n        ...prev,\n        coverImage: file,\n        coverImagePreview: URL.createObjectURL(file)\n      }));\n    }\n  };\n\n  // Autoguardado cuando el contenido cambia\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (post.content.length > 0 || post.title.length > 0) {\n        console.log('Guardado autom√°tico...');\n        savePostToLocalStorage(post);\n      }\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [post]);\n\n  // Cargar borrador guardado al iniciar\n  useEffect(() => {\n    const savedPost = loadPostFromLocalStorage();\n    if (savedPost) {\n      // Detectamos si el contenido parece ser HTML para establecer el modo\n      const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(savedPost.content);\n      setPost({\n        ...savedPost,\n        editorMode: hasHTMLStructure ? 'html' : savedPost.editorMode || 'simple' // Ensure 'simple' is the default mode\n      });\n      console.log('Loaded post with mode:', hasHTMLStructure ? 'html' : savedPost.editorMode || 'simple');\n    }\n  }, []);\n\n  // Simular guardar como borrador\n  const saveDraft = () => {\n    setIsSaving(true);\n\n    // Guardar en localStorage\n    savePostToLocalStorage(post);\n\n    // Simulaci√≥n de guardado\n    setTimeout(() => {\n      setIsSaving(false);\n      setSaveMessage({\n        type: 'success',\n        text: 'Borrador guardado correctamente',\n        icon: '‚úì'\n      });\n\n      // Limpiar mensaje despu√©s de unos segundos\n      setTimeout(() => setSaveMessage(null), 3000);\n    }, 1000);\n  };\n\n  // Simular publicaci√≥n del post\n  const publishPost = () => {\n    // Validaci√≥n b√°sica\n    if (!post.title.trim() || !post.content.trim() || !post.category) {\n      setSaveMessage({\n        type: 'error',\n        text: 'Por favor completa al menos el t√≠tulo, categor√≠a y contenido del post',\n        icon: '‚úñ'\n      });\n      setTimeout(() => setSaveMessage(null), 3000);\n      return;\n    }\n    setIsPublishing(true);\n\n    // Simulaci√≥n de publicaci√≥n\n    setTimeout(() => {\n      setIsPublishing(false);\n      setPost(prev => ({\n        ...prev,\n        status: 'published'\n      }));\n      setSaveMessage({\n        type: 'success',\n        text: '¬°Post publicado correctamente!',\n        icon: 'üéâ'\n      });\n\n      // Limpiar mensaje despu√©s de unos segundos\n      setTimeout(() => setSaveMessage(null), 3000);\n\n      // Limpieza del borrador en localStorage despu√©s de publicar\n      localStorage.removeItem('post_draft');\n    }, 1500);\n  };\n\n  // Exportar el post a Markdown/HTML para descargar\n  const exportToFile = () => {\n    // Crear un objeto de texto para descargar\n    let content = '';\n    let fileExtension = '';\n    if (post.editorMode === 'markdown') {\n      const frontMatter = `---\ntitle: ${post.title}\ncategory: ${post.category}\ntags: ${post.tags}\ndate: ${post.publishDate}\nstatus: ${post.status}\n---\n\n`;\n      content = frontMatter + post.content;\n      fileExtension = 'md';\n    } else {\n      // HTML mode\n      content = post.content;\n      fileExtension = 'html';\n    }\n    const blob = new Blob([content], {\n      type: post.editorMode === 'markdown' ? 'text/markdown' : 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Crear un enlace de descarga y hacer clic en √©l\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${post.title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.${fileExtension}`;\n    document.body.appendChild(a);\n    a.click();\n\n    // Limpiar\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    // Mostrar mensaje de √©xito\n    setSaveMessage({\n      type: 'success',\n      text: `Archivo ${post.editorMode === 'markdown' ? 'Markdown' : 'HTML'} descargado correctamente`,\n      icon: 'üì•'\n    });\n    setTimeout(() => setSaveMessage(null), 3000);\n  };\n\n  // Importar un archivo Markdown o HTML\n  const importFile = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const content = event.target.result;\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n\n      // Detectar si es Markdown o HTML\n      const isMarkdown = fileExtension === 'md' || fileExtension === 'markdown';\n      const isHTML = fileExtension === 'html' || fileExtension === 'htm';\n      if (isMarkdown) {\n        // Parsear el frontmatter si existe\n        let postData = {\n          content,\n          editorMode: 'markdown'\n        };\n        const frontMatterRegex = /^---\\n([\\s\\S]*?)\\n---\\n/;\n        const match = content.match(frontMatterRegex);\n        if (match) {\n          const frontMatter = match[1];\n          const actualContent = content.replace(frontMatterRegex, '');\n\n          // Extraer metadatos del frontmatter\n          const titleMatch = frontMatter.match(/title:\\s*(.*)/);\n          const categoryMatch = frontMatter.match(/category:\\s*(.*)/);\n          const tagsMatch = frontMatter.match(/tags:\\s*(.*)/);\n          const dateMatch = frontMatter.match(/date:\\s*(.*)/);\n          const statusMatch = frontMatter.match(/status:\\s*(.*)/);\n          postData = {\n            title: titleMatch ? titleMatch[1] : '',\n            category: categoryMatch ? categoryMatch[1] : '',\n            tags: tagsMatch ? tagsMatch[1] : '',\n            publishDate: dateMatch ? dateMatch[1] : new Date().toISOString().slice(0, 10),\n            status: statusMatch ? statusMatch[1] : 'draft',\n            content: actualContent.trim(),\n            editorMode: 'markdown'\n          };\n        } else {\n          // Si no hay frontmatter, usar todo como contenido\n          postData.content = content;\n        }\n\n        // Actualizar el estado del post \n        setPost(prevPost => ({\n          ...prevPost,\n          ...postData\n        }));\n      } else if (isHTML) {\n        // Extraer el t√≠tulo del documento HTML si existe\n        const titleMatch = content.match(/<title>(.*?)<\\/title>/i);\n        const title = titleMatch ? titleMatch[1] : '';\n\n        // Actualizar el estado con el contenido HTML\n        setPost(prevPost => ({\n          ...prevPost,\n          title: title || prevPost.title,\n          content: content,\n          editorMode: 'html'\n        }));\n      } else {\n        // Si no es Markdown ni HTML, tratar como texto plano\n        setPost(prevPost => ({\n          ...prevPost,\n          content: content\n        }));\n      }\n\n      // Mostrar mensaje de √©xito\n      setSaveMessage({\n        type: 'success',\n        text: `Archivo ${isMarkdown ? 'Markdown' : isHTML ? 'HTML' : 'de texto'} importado correctamente`,\n        icon: 'üì§'\n      });\n      setTimeout(() => setSaveMessage(null), 3000);\n    };\n    reader.readAsText(file);\n  };\n\n  // Estilos CSS\n  const styles = {\n    container: {\n      maxWidth: \"1200px\",\n      margin: \"0 auto\",\n      padding: `${\"100px\"} ${spacing.md}`,\n      fontFamily: typography.fontFamily\n    },\n    editorContainer: {\n      display: \"grid\",\n      // Cambiado: Invertir el orden de las columnas para que la barra lateral est√© a la izquierda\n      gridTemplateColumns: \"300px 1fr\",\n      gap: spacing.xl,\n      marginBottom: spacing.xxl,\n      '@media (max-width: 768px)': {\n        gridTemplateColumns: \"1fr\"\n      }\n    },\n    mainEditor: {\n      width: \"100%\",\n      maxWidth: \"800px\" // Anchura predefinida para el contenido del post\n    },\n    sidebar: {\n      // No necesita cambios espec√≠ficos de estilo aqu√≠\n    },\n    formGroup: {\n      marginBottom: spacing.lg\n    },\n    actionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      gap: spacing.md,\n      marginTop: spacing.xl\n    },\n    actionButton: {\n      padding: `${spacing.sm} ${spacing.lg}`,\n      borderRadius: borderRadius.md,\n      fontWeight: typography.fontWeight.medium,\n      cursor: \"pointer\",\n      transition: \"all 0.3s ease\",\n      fontSize: typography.fontSize.md,\n      border: \"none\"\n      // Estilos espec√≠ficos se aplicar√°n en cada bot√≥n\n    },\n    saveButton: {\n      backgroundColor: colors.secondary,\n      color: colors.primary,\n      \"&:hover\": {\n        backgroundColor: colors.secondary + \"cc\" // A√±adir transparencia al hover\n      }\n    },\n    publishButton: {\n      backgroundColor: colors.primary,\n      color: colors.white,\n      \"&:hover\": {\n        backgroundColor: colors.primaryLight\n      }\n    }\n  };\n\n  // Log para depuraci√≥n\n  console.log('Current editor mode:', post.editorMode);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n          }\n          @keyframes slideInUp {\n            from { transform: translateY(20px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n          }\n          @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n          }\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          @keyframes shake {\n            0%, 100% { transform: translateX(0); }\n            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\n            20%, 40%, 60%, 80% { transform: translateX(5px); }\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebar,\n        children: [/*#__PURE__*/_jsxDEV(CoverImageUploader, {\n          coverImagePreview: post.coverImagePreview,\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostMetadata, {\n          post: post,\n          categories: categories,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImportExportActions, {\n          onExport: exportToFile,\n          onImport: importFile,\n          isHTML: post.editorMode === 'html'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.mainEditor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: spacing.xs,\n              marginBottom: spacing.xs,\n              fontWeight: typography.fontWeight.medium,\n              color: colors.primary\n            },\n            htmlFor: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: colors.primary,\n                fontSize: '1.1em'\n              },\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), \" T\\xEDtulo del post\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: post.title,\n            onChange: handleChange,\n            style: {\n              width: \"100%\",\n              padding: spacing.md,\n              borderRadius: borderRadius.md,\n              border: `1px solid ${colors.gray200}`,\n              fontSize: typography.fontSize.lg,\n              transition: \"all 0.3s ease\",\n              marginBottom: spacing.md,\n              fontWeight: typography.fontWeight.semiBold,\n              borderLeft: `4px solid ${colors.primary}`\n            },\n            placeholder: \"Escribe un t\\xEDtulo atractivo\",\n            onFocus: e => {\n              e.target.style.boxShadow = `0 0 0 2px ${colors.primary}30`;\n              e.target.style.borderLeft = `4px solid ${colors.secondary}`;\n            },\n            onBlur: e => {\n              e.target.style.boxShadow = 'none';\n              e.target.style.borderLeft = `4px solid ${colors.primary}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(DualModeEditor, {\n            content: post.content,\n            onChange: handleChange,\n            initialMode: post.editorMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), saveMessage && /*#__PURE__*/_jsxDEV(StatusMessage, {\n          type: saveMessage.type,\n          text: saveMessage.text,\n          icon: saveMessage.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.actionsContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveDraft,\n            disabled: isSaving,\n            style: {\n              ...styles.actionButton,\n              ...styles.saveButton\n            },\n            children: isSaving ? 'Guardando...' : 'Guardar borrador'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: publishPost,\n            disabled: isPublishing,\n            style: {\n              ...styles.actionButton,\n              ...styles.publishButton\n            },\n            children: isPublishing ? 'Publicando...' : 'Publicar post'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n_s(PostEditor, \"OuM3Jx22tZa4Gi9zjFv8ancAs8k=\");\n_c = PostEditor;\nexport default PostEditor;\nvar _c;\n$RefreshReg$(_c, \"PostEditor\");","map":{"version":3,"names":["React","useState","useEffect","colors","spacing","typography","shadows","borderRadius","DualModeEditor","PostMetadata","CoverImageUploader","MarkdownGuide","StatusMessage","ImportExportActions","jsxDEV","_jsxDEV","savePostToLocalStorage","post","postToSave","coverImage","localStorage","setItem","JSON","stringify","console","log","error","loadPostFromLocalStorage","savedPost","getItem","parse","PostEditor","_s","setPost","title","category","content","tags","coverImagePreview","status","publishDate","Date","toISOString","slice","editorMode","isSaving","setIsSaving","saveMessage","setSaveMessage","isPublishing","setIsPublishing","categories","handleChange","e","name","value","target","prev","handleImageChange","file","files","URL","createObjectURL","timer","setTimeout","length","clearTimeout","hasHTMLStructure","test","saveDraft","type","text","icon","publishPost","trim","removeItem","exportToFile","fileExtension","frontMatter","blob","Blob","url","a","document","createElement","href","download","replace","toLowerCase","body","appendChild","click","removeChild","revokeObjectURL","importFile","reader","FileReader","onload","event","result","split","pop","isMarkdown","isHTML","postData","frontMatterRegex","match","actualContent","titleMatch","categoryMatch","tagsMatch","dateMatch","statusMatch","prevPost","readAsText","styles","container","maxWidth","margin","padding","md","fontFamily","editorContainer","display","gridTemplateColumns","gap","xl","marginBottom","xxl","mainEditor","width","sidebar","formGroup","lg","actionsContainer","justifyContent","marginTop","actionButton","sm","fontWeight","medium","cursor","transition","fontSize","border","saveButton","backgroundColor","secondary","color","primary","publishButton","white","primaryLight","style","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onExport","onImport","alignItems","xs","htmlFor","id","gray200","semiBold","borderLeft","placeholder","onFocus","boxShadow","onBlur","initialMode","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/PostEditor.jsx"],"sourcesContent":["// src/components/admin/PostEditor.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\r\n\r\n// Componentes para el editor\r\nimport DualModeEditor from './DualModeEditor';\r\nimport PostMetadata from './PostMetadata';\r\nimport CoverImageUploader from './CoverImageUploader';\r\nimport MarkdownGuide from './MarkdownGuide';\r\nimport StatusMessage from './StatusMessage';\r\nimport ImportExportActions from './ImportExportActions';\r\n\r\n// Funciones para almacenamiento local\r\nconst savePostToLocalStorage = (post) => {\r\n  try {\r\n    const postToSave = { ...post };\r\n    // No guardamos la imagen como tal, sino solo la URL de vista previa\r\n    delete postToSave.coverImage;\r\n    localStorage.setItem('post_draft', JSON.stringify(postToSave));\r\n    console.log('Saved to localStorage:', postToSave); // Debug\r\n  } catch (error) {\r\n    console.error('Error saving to localStorage:', error);\r\n  }\r\n};\r\n\r\nconst loadPostFromLocalStorage = () => {\r\n  try {\r\n    const savedPost = localStorage.getItem('post_draft');\r\n    return savedPost ? JSON.parse(savedPost) : null;\r\n  } catch (error) {\r\n    console.error('Error loading from localStorage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst PostEditor = () => {\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    category: '',\r\n    content: '', // Aseguramos que se inicie con una cadena vac√≠a\r\n    tags: '',\r\n    coverImage: null,\r\n    coverImagePreview: null,\r\n    status: 'draft', // 'draft', 'published'\r\n    publishDate: new Date().toISOString().slice(0, 10),\r\n    editorMode: 'simple', // Set default mode to 'simple'\r\n  });\r\n\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveMessage, setSaveMessage] = useState(null);\r\n  const [isPublishing, setIsPublishing] = useState(false);\r\n\r\n  // Categor√≠as disponibles\r\n  const categories = [\r\n    'Noticias',\r\n    'T√©cnicas de Estudio',\r\n    'Problem√°ticas',\r\n    'Educaci√≥n de Calidad',\r\n    'Herramientas',\r\n    'Desarrollo Docente',\r\n    'Comunidad'\r\n  ];\r\n\r\n  // Manejador para cambios en los campos del formulario\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Log para depuraci√≥n\r\n    console.log(`Changing ${name} to ${value}`);\r\n    \r\n    setPost(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Manejador para cambios en la imagen de portada\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPost(prev => ({\r\n        ...prev,\r\n        coverImage: file,\r\n        coverImagePreview: URL.createObjectURL(file)\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Autoguardado cuando el contenido cambia\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (post.content.length > 0 || post.title.length > 0) {\r\n        console.log('Guardado autom√°tico...');\r\n        savePostToLocalStorage(post);\r\n      }\r\n    }, 2000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [post]);\r\n  \r\n  // Cargar borrador guardado al iniciar\r\n  useEffect(() => {\r\n    const savedPost = loadPostFromLocalStorage();\r\n    if (savedPost) {\r\n      // Detectamos si el contenido parece ser HTML para establecer el modo\r\n      const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(savedPost.content);\r\n      \r\n      setPost({\r\n        ...savedPost,\r\n        editorMode: hasHTMLStructure ? 'html' : (savedPost.editorMode || 'simple') // Ensure 'simple' is the default mode\r\n      });\r\n      \r\n      console.log('Loaded post with mode:', hasHTMLStructure ? 'html' : (savedPost.editorMode || 'simple'));\r\n    }\r\n  }, []);\r\n\r\n  // Simular guardar como borrador\r\n  const saveDraft = () => {\r\n    setIsSaving(true);\r\n    \r\n    // Guardar en localStorage\r\n    savePostToLocalStorage(post);\r\n    \r\n    // Simulaci√≥n de guardado\r\n    setTimeout(() => {\r\n      setIsSaving(false);\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: 'Borrador guardado correctamente',\r\n        icon: '‚úì'\r\n      });\r\n      \r\n      // Limpiar mensaje despu√©s de unos segundos\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    }, 1000);\r\n  };\r\n\r\n  // Simular publicaci√≥n del post\r\n  const publishPost = () => {\r\n    // Validaci√≥n b√°sica\r\n    if (!post.title.trim() || !post.content.trim() || !post.category) {\r\n      setSaveMessage({\r\n        type: 'error',\r\n        text: 'Por favor completa al menos el t√≠tulo, categor√≠a y contenido del post',\r\n        icon: '‚úñ'\r\n      });\r\n      \r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setIsPublishing(true);\r\n    \r\n    // Simulaci√≥n de publicaci√≥n\r\n    setTimeout(() => {\r\n      setIsPublishing(false);\r\n      setPost(prev => ({ ...prev, status: 'published' }));\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: '¬°Post publicado correctamente!',\r\n        icon: 'üéâ'\r\n      });\r\n      \r\n      // Limpiar mensaje despu√©s de unos segundos\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n      \r\n      // Limpieza del borrador en localStorage despu√©s de publicar\r\n      localStorage.removeItem('post_draft');\r\n    }, 1500);\r\n  };\r\n\r\n  // Exportar el post a Markdown/HTML para descargar\r\n  const exportToFile = () => {\r\n    // Crear un objeto de texto para descargar\r\n    let content = '';\r\n    let fileExtension = '';\r\n    \r\n    if (post.editorMode === 'markdown') {\r\n      const frontMatter = `---\r\ntitle: ${post.title}\r\ncategory: ${post.category}\r\ntags: ${post.tags}\r\ndate: ${post.publishDate}\r\nstatus: ${post.status}\r\n---\r\n\r\n`;\r\n      content = frontMatter + post.content;\r\n      fileExtension = 'md';\r\n    } else { // HTML mode\r\n      content = post.content;\r\n      fileExtension = 'html';\r\n    }\r\n    \r\n    const blob = new Blob([content], { \r\n      type: post.editorMode === 'markdown' ? 'text/markdown' : 'text/html' \r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // Crear un enlace de descarga y hacer clic en √©l\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${post.title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.${fileExtension}`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    \r\n    // Limpiar\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    \r\n    // Mostrar mensaje de √©xito\r\n    setSaveMessage({\r\n      type: 'success',\r\n      text: `Archivo ${post.editorMode === 'markdown' ? 'Markdown' : 'HTML'} descargado correctamente`,\r\n      icon: 'üì•'\r\n    });\r\n    \r\n    setTimeout(() => setSaveMessage(null), 3000);\r\n  };\r\n\r\n  // Importar un archivo Markdown o HTML\r\n  const importFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const content = event.target.result;\r\n      const fileExtension = file.name.split('.').pop().toLowerCase();\r\n      \r\n      // Detectar si es Markdown o HTML\r\n      const isMarkdown = fileExtension === 'md' || fileExtension === 'markdown';\r\n      const isHTML = fileExtension === 'html' || fileExtension === 'htm';\r\n      \r\n      if (isMarkdown) {\r\n        // Parsear el frontmatter si existe\r\n        let postData = { content, editorMode: 'markdown' };\r\n        \r\n        const frontMatterRegex = /^---\\n([\\s\\S]*?)\\n---\\n/;\r\n        const match = content.match(frontMatterRegex);\r\n        \r\n        if (match) {\r\n          const frontMatter = match[1];\r\n          const actualContent = content.replace(frontMatterRegex, '');\r\n          \r\n          // Extraer metadatos del frontmatter\r\n          const titleMatch = frontMatter.match(/title:\\s*(.*)/);\r\n          const categoryMatch = frontMatter.match(/category:\\s*(.*)/);\r\n          const tagsMatch = frontMatter.match(/tags:\\s*(.*)/);\r\n          const dateMatch = frontMatter.match(/date:\\s*(.*)/);\r\n          const statusMatch = frontMatter.match(/status:\\s*(.*)/);\r\n          \r\n          postData = {\r\n            title: titleMatch ? titleMatch[1] : '',\r\n            category: categoryMatch ? categoryMatch[1] : '',\r\n            tags: tagsMatch ? tagsMatch[1] : '',\r\n            publishDate: dateMatch ? dateMatch[1] : new Date().toISOString().slice(0, 10),\r\n            status: statusMatch ? statusMatch[1] : 'draft',\r\n            content: actualContent.trim(),\r\n            editorMode: 'markdown'\r\n          };\r\n        } else {\r\n          // Si no hay frontmatter, usar todo como contenido\r\n          postData.content = content;\r\n        }\r\n        \r\n        // Actualizar el estado del post \r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          ...postData\r\n        }));\r\n      } else if (isHTML) {\r\n        // Extraer el t√≠tulo del documento HTML si existe\r\n        const titleMatch = content.match(/<title>(.*?)<\\/title>/i);\r\n        const title = titleMatch ? titleMatch[1] : '';\r\n        \r\n        // Actualizar el estado con el contenido HTML\r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          title: title || prevPost.title,\r\n          content: content,\r\n          editorMode: 'html'\r\n        }));\r\n      } else {\r\n        // Si no es Markdown ni HTML, tratar como texto plano\r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          content: content\r\n        }));\r\n      }\r\n      \r\n      // Mostrar mensaje de √©xito\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: `Archivo ${isMarkdown ? 'Markdown' : (isHTML ? 'HTML' : 'de texto')} importado correctamente`,\r\n        icon: 'üì§'\r\n      });\r\n      \r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Estilos CSS\r\n  const styles = {\r\n    container: {\r\n      maxWidth: \"1200px\",\r\n      margin: \"0 auto\",\r\n      padding: `${\"100px\"} ${spacing.md}`,\r\n      fontFamily: typography.fontFamily\r\n    },\r\n    editorContainer: {\r\n      display: \"grid\",\r\n      // Cambiado: Invertir el orden de las columnas para que la barra lateral est√© a la izquierda\r\n      gridTemplateColumns: \"300px 1fr\",\r\n      gap: spacing.xl,\r\n      marginBottom: spacing.xxl,\r\n      '@media (max-width: 768px)': {\r\n        gridTemplateColumns: \"1fr\"\r\n      }\r\n    },\r\n    mainEditor: {\r\n      width: \"100%\",\r\n      maxWidth: \"800px\" // Anchura predefinida para el contenido del post\r\n    },\r\n    sidebar: {\r\n      // No necesita cambios espec√≠ficos de estilo aqu√≠\r\n    },\r\n    formGroup: {\r\n      marginBottom: spacing.lg\r\n    },\r\n    actionsContainer: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\", \r\n      gap: spacing.md,\r\n      marginTop: spacing.xl\r\n    },\r\n    actionButton: {\r\n      padding: `${spacing.sm} ${spacing.lg}`,\r\n      borderRadius: borderRadius.md,\r\n      fontWeight: typography.fontWeight.medium,\r\n      cursor: \"pointer\",\r\n      transition: \"all 0.3s ease\",\r\n      fontSize: typography.fontSize.md,\r\n      border: \"none\",\r\n      // Estilos espec√≠ficos se aplicar√°n en cada bot√≥n\r\n    },\r\n    saveButton: {\r\n      backgroundColor: colors.secondary,\r\n      color: colors.primary,\r\n      \"&:hover\": {\r\n        backgroundColor: colors.secondary + \"cc\", // A√±adir transparencia al hover\r\n      }\r\n    },\r\n    publishButton: {\r\n      backgroundColor: colors.primary,\r\n      color: colors.white,\r\n      \"&:hover\": {\r\n        backgroundColor: colors.primaryLight,\r\n      }\r\n    }\r\n  };\r\n\r\n  // Log para depuraci√≥n\r\n  console.log('Current editor mode:', post.editorMode);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* Estilos CSS en l√≠nea para animaciones */}\r\n      <style dangerouslySetInnerHTML={{\r\n        __html: `\r\n          @keyframes fadeIn {\r\n            from { opacity: 0; }\r\n            to { opacity: 1; }\r\n          }\r\n          @keyframes slideInUp {\r\n            from { transform: translateY(20px); opacity: 0; }\r\n            to { transform: translateY(0); opacity: 1; }\r\n          }\r\n          @keyframes pulse {\r\n            0% { transform: scale(1); }\r\n            50% { transform: scale(1.05); }\r\n            100% { transform: scale(1); }\r\n          }\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n          @keyframes shake {\r\n            0%, 100% { transform: translateX(0); }\r\n            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\r\n            20%, 40%, 60%, 80% { transform: translateX(5px); }\r\n          }\r\n        `\r\n      }} />\r\n\r\n\r\n      <div style={styles.editorContainer}>\r\n        {/* Sidebar - Ahora a la izquierda */}\r\n        <div style={styles.sidebar}>\r\n          <CoverImageUploader \r\n            coverImagePreview={post.coverImagePreview} \r\n            onChange={handleImageChange} \r\n          />\r\n\r\n          <PostMetadata \r\n            post={post} \r\n            categories={categories} \r\n            onChange={handleChange} \r\n          />\r\n\r\n          \r\n          \r\n          <ImportExportActions \r\n            onExport={exportToFile} \r\n            onImport={importFile}\r\n            isHTML={post.editorMode === 'html'} \r\n          />\r\n        </div>\r\n\r\n        {/* Main Editor - Ahora a la derecha */}\r\n        <div style={styles.mainEditor}>\r\n          <div style={styles.formGroup}>\r\n            <label style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: spacing.xs,\r\n              marginBottom: spacing.xs,\r\n              fontWeight: typography.fontWeight.medium,\r\n              color: colors.primary\r\n            }} htmlFor=\"title\">\r\n              <span style={{color: colors.primary, fontSize: '1.1em'}}>üìù</span> T√≠tulo del post\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={post.title}\r\n              onChange={handleChange}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: spacing.md,\r\n                borderRadius: borderRadius.md,\r\n                border: `1px solid ${colors.gray200}`,\r\n                fontSize: typography.fontSize.lg,\r\n                transition: \"all 0.3s ease\",\r\n                marginBottom: spacing.md,\r\n                fontWeight: typography.fontWeight.semiBold,\r\n                borderLeft: `4px solid ${colors.primary}`\r\n              }}\r\n              placeholder=\"Escribe un t√≠tulo atractivo\"\r\n              onFocus={(e) => {\r\n                e.target.style.boxShadow = `0 0 0 2px ${colors.primary}30`;\r\n                e.target.style.borderLeft = `4px solid ${colors.secondary}`;\r\n              }}\r\n              onBlur={(e) => {\r\n                e.target.style.boxShadow = 'none';\r\n                e.target.style.borderLeft = `4px solid ${colors.primary}`;\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <DualModeEditor \r\n              content={post.content}\r\n              onChange={handleChange}\r\n              initialMode={post.editorMode}\r\n            />\r\n          </div>\r\n\r\n          {saveMessage && (\r\n            <StatusMessage \r\n              type={saveMessage.type} \r\n              text={saveMessage.text} \r\n              icon={saveMessage.icon} \r\n            />\r\n          )}\r\n\r\n          <div style={styles.actionsContainer}>\r\n            <button \r\n              onClick={saveDraft}\r\n              disabled={isSaving}\r\n              style={{\r\n                ...styles.actionButton,\r\n                ...styles.saveButton\r\n              }}\r\n            >\r\n              {isSaving ? 'Guardando...' : 'Guardar borrador'}\r\n            </button>\r\n            \r\n            <button \r\n              onClick={publishPost}\r\n              disabled={isPublishing}\r\n              style={{\r\n                ...styles.actionButton,\r\n                ...styles.publishButton\r\n              }}\r\n            >\r\n              {isPublishing ? 'Publicando...' : 'Publicar post'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}