{"ast":null,"code":"// src/components/admin/utils/storageUtils.js\n\n/**\r\n * Guarda el estado del post en el almacenamiento local\r\n * @param {Object} post - El objeto post a guardar\r\n */\nexport const savePostToLocalStorage = post => {\n  try {\n    const postToSave = {\n      ...post\n    };\n    // No guardamos la imagen como tal, sino solo la URL de vista previa\n    delete postToSave.coverImage;\n    localStorage.setItem('post_draft', JSON.stringify(postToSave));\n  } catch (error) {\n    console.error('Error al guardar en localStorage:', error);\n  }\n};\n\n/**\r\n * Carga el estado del post desde el almacenamiento local\r\n * @returns {Object|null} - El objeto post guardado o null si no existe\r\n */\nexport const loadPostFromLocalStorage = () => {\n  try {\n    const savedPost = localStorage.getItem('post_draft');\n    return savedPost ? JSON.parse(savedPost) : null;\n  } catch (error) {\n    console.error('Error al cargar desde localStorage:', error);\n    return null;\n  }\n};","map":{"version":3,"names":["savePostToLocalStorage","post","postToSave","coverImage","localStorage","setItem","JSON","stringify","error","console","loadPostFromLocalStorage","savedPost","getItem","parse"],"sources":["C:/Users/damva/EducStation/src/components/admin/utils/storageUtils.js"],"sourcesContent":["// src/components/admin/utils/storageUtils.js\r\n\r\n/**\r\n * Guarda el estado del post en el almacenamiento local\r\n * @param {Object} post - El objeto post a guardar\r\n */\r\nexport const savePostToLocalStorage = (post) => {\r\n    try {\r\n      const postToSave = { ...post };\r\n      // No guardamos la imagen como tal, sino solo la URL de vista previa\r\n      delete postToSave.coverImage;\r\n      localStorage.setItem('post_draft', JSON.stringify(postToSave));\r\n    } catch (error) {\r\n      console.error('Error al guardar en localStorage:', error);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Carga el estado del post desde el almacenamiento local\r\n   * @returns {Object|null} - El objeto post guardado o null si no existe\r\n   */\r\n  export const loadPostFromLocalStorage = () => {\r\n    try {\r\n      const savedPost = localStorage.getItem('post_draft');\r\n      return savedPost ? JSON.parse(savedPost) : null;\r\n    } catch (error) {\r\n      console.error('Error al cargar desde localStorage:', error);\r\n      return null;\r\n    }\r\n  };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,sBAAsB,GAAIC,IAAI,IAAK;EAC5C,IAAI;IACF,MAAMC,UAAU,GAAG;MAAE,GAAGD;IAAK,CAAC;IAC9B;IACA,OAAOC,UAAU,CAACC,UAAU;IAC5BC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACL,UAAU,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;EAC3D;AACF,CAAC;;AAED;AACF;AACA;AACA;AACE,OAAO,MAAME,wBAAwB,GAAGA,CAAA,KAAM;EAC5C,IAAI;IACF,MAAMC,SAAS,GAAGP,YAAY,CAACQ,OAAO,CAAC,YAAY,CAAC;IACpD,OAAOD,SAAS,GAAGL,IAAI,CAACO,KAAK,CAACF,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC3D,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}