{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\SyntaxHighlighter.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/SyntaxHighlighter.jsx\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyntaxHighlighter = ({\n  content,\n  onChange,\n  textAreaRef\n}) => {\n  _s();\n  const highlighterRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Sincronizar scroll entre el textArea y el resaltador\n  const syncScroll = () => {\n    if (highlighterRef.current && textAreaRef.current) {\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\n    }\n  };\n\n  // Actualizar el contenido resaltado cuando cambia el contenido\n  useEffect(() => {\n    if (highlighterRef.current && textAreaRef.current) {\n      try {\n        // Aplicar resaltado pero sin modificar el código original\n        const highlightedContent = applySyntaxHighlightingHTML(content);\n        highlighterRef.current.innerHTML = highlightedContent;\n\n        // Configurar event listeners\n        textAreaRef.current.addEventListener('scroll', syncScroll);\n      } catch (error) {\n        console.error(\"Error applying syntax highlighting:\", error);\n      }\n\n      // Limpiar event listeners\n      return () => {\n        if (textAreaRef.current) {\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\n        }\n      };\n    }\n  }, [content]);\n\n  // Función para escapar HTML de forma segura\n  const escapeHtml = unsafe => {\n    return unsafe.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#039;\");\n  };\n\n  // Función para aplicar colores al HTML sin modificar el código\n  const applySyntaxHighlightingHTML = html => {\n    if (!html) return \"<div>&nbsp;</div>\"; // Devuelve al menos una línea vacía\n\n    // Escapar el HTML primero\n    const escapedContent = escapeHtml(html);\n\n    // Dividir en líneas para procesar\n    const lines = escapedContent.split('\\n');\n\n    // Aplicar colores a cada línea\n    const coloredLines = lines.map(line => {\n      // Aplicar colores sin alterar el texto\n      let coloredLine = line;\n\n      // 1. Etiquetas HTML (apertura y cierre)\n      coloredLine = coloredLine.replace(/(&lt;\\/?[a-zA-Z0-9_-]+)(&gt;|[\\s\\w=\"'.:;,])/g, '<span style=\"color:#E34C26\">$1</span>$2');\n\n      // 2. Cierre de etiquetas\n      coloredLine = coloredLine.replace(/(&gt;)/g, '<span style=\"color:#E34C26\">$1</span>');\n\n      // 3. Atributos HTML\n      coloredLine = coloredLine.replace(/(\\s+)([a-zA-Z0-9_-]+)(=)/g, '$1<span style=\"color:#A6E22E\">$2</span>$3');\n\n      // 4. Valores de atributos\n      coloredLine = coloredLine.replace(/(=)(&quot;[^&]*&quot;|&#039;[^&]*&#039;)/g, '$1<span style=\"color:#E6DB74\">$2</span>');\n\n      // 5. Doctype\n      coloredLine = coloredLine.replace(/(&lt;!DOCTYPE\\s+[^&]*&gt;)/g, '<span style=\"color:#75715E\">$1</span>');\n\n      // 6. Comentarios HTML\n      coloredLine = coloredLine.replace(/(&lt;!--[^>]*--&gt;)/g, '<span style=\"color:#75715E\">$1</span>');\n\n      // 7. Contenido de estilo y script (CSS y JS)\n      if (coloredLine.includes('style') || coloredLine.includes('css')) {\n        // Propiedades CSS\n        coloredLine = coloredLine.replace(/([a-zA-Z-]+)(\\s*:)/g, '<span style=\"color:#66D9EF\">$1</span>$2');\n\n        // Valores CSS\n        coloredLine = coloredLine.replace(/(:\\s*)([^;{}<>]+)(;|$)/g, '$1<span style=\"color:#AE81FF\">$2</span>$3');\n      }\n      if (coloredLine.includes('script') || coloredLine.includes('js')) {\n        // Palabras clave JavaScript\n        coloredLine = coloredLine.replace(/\\b(function|return|var|let|const|if|else|for|while|new|this|class)\\b/g, '<span style=\"color:#F92672\">$1</span>');\n      }\n      return coloredLine;\n    });\n\n    // Crear divs para cada línea, manteniendo líneas vacías\n    return createDivs(coloredLines.join('\\n'));\n  };\n\n  // Crear divs para cada línea\n  const createDivs = html => {\n    const lines = html.split('\\n');\n    return lines.map(line => `<div>${line || \"&nbsp;\"}</div>`).join('');\n  };\n\n  // Manejar cambios en el texto\n  const handleChange = e => {\n    // Solo pasar el evento sin modificar nada\n    onChange(e);\n  };\n\n  // Manejar eventos de teclado (Tab, Enter, etc.)\n  const handleKeyDown = e => {\n    // Implementar tabulación personalizada con 2 espacios\n    if (e.key === 'Tab') {\n      e.preventDefault();\n      const start = e.target.selectionStart;\n      const end = e.target.selectionEnd;\n\n      // Obtener el valor del textarea\n      const value = e.target.value;\n\n      // Insertar 2 espacios en la posición actual\n      const newValue = value.substring(0, start) + '  ' + value.substring(end);\n\n      // Establecer el nuevo valor\n      e.target.value = newValue;\n\n      // Mover el cursor después de los espacios insertados\n      e.target.selectionStart = e.target.selectionEnd = start + 2;\n\n      // Disparar evento de cambio\n      const event = {\n        target: {\n          name: 'content',\n          value: newValue\n        }\n      };\n      handleChange(event);\n    }\n  };\n  const styles = {\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '600px',\n      fontSize: '14px',\n      lineHeight: 1.5,\n      overflow: 'hidden',\n      borderRadius: '8px',\n      border: '1px solid #e1e4e8'\n    },\n    highlighter: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      padding: '16px',\n      backgroundColor: '#272822',\n      // Fondo estilo Monokai\n      color: '#F8F8F2',\n      // Color base de texto estilo Monokai\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\n      fontSize: '14px',\n      lineHeight: 1.5,\n      overflow: 'auto',\n      whiteSpace: 'pre',\n      pointerEvents: 'none',\n      zIndex: 1\n    },\n    textarea: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      padding: '16px',\n      color: 'transparent',\n      caretColor: '#F8F8F2',\n      // Color de cursor claro para fondo oscuro\n      backgroundColor: 'transparent',\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\n      fontSize: '14px',\n      lineHeight: 1.5,\n      border: 'none',\n      resize: 'none',\n      whiteSpace: 'pre',\n      overflow: 'auto',\n      outline: 'none',\n      zIndex: 2\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n        .syntax-highlight-editor {\n          counter-reset: line;\n          padding-left: 60px;\n        }\n        \n        .syntax-highlight-editor div {\n          position: relative;\n          min-height: 1.5em;\n          color: #F8F8F2;\n        }\n        \n        .syntax-highlight-editor div:before {\n          content: counter(line);\n          counter-increment: line;\n          position: absolute;\n          left: -50px;\n          top: 0;\n          width: 40px;\n          color: #90908A;\n          text-align: right;\n          user-select: none;\n          opacity: 0.8;\n        }\n      `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: highlighterRef,\n      className: \"syntax-highlight-editor\",\n      style: styles.highlighter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textAreaRef,\n      value: content,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      onScroll: syncScroll,\n      style: styles.textarea,\n      spellCheck: \"false\",\n      placeholder: \"Escribe c\\xF3digo HTML aqu\\xED...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(SyntaxHighlighter, \"Xd0m4KXWVq9wjYwweA1FMrQUCSI=\");\n_c = SyntaxHighlighter;\nvar _c;\n$RefreshReg$(_c, \"SyntaxHighlighter\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SyntaxHighlighter","content","onChange","textAreaRef","_s","highlighterRef","containerRef","syncScroll","current","scrollTop","scrollLeft","highlightedContent","applySyntaxHighlightingHTML","innerHTML","addEventListener","error","console","removeEventListener","escapeHtml","unsafe","replace","html","escapedContent","lines","split","coloredLines","map","line","coloredLine","includes","createDivs","join","handleChange","e","handleKeyDown","key","preventDefault","start","target","selectionStart","end","selectionEnd","value","newValue","substring","event","name","styles","container","position","width","height","fontSize","lineHeight","overflow","borderRadius","border","highlighter","top","left","padding","backgroundColor","color","fontFamily","whiteSpace","pointerEvents","zIndex","textarea","caretColor","resize","outline","ref","style","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","className","onKeyDown","onScroll","spellCheck","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/SyntaxHighlighter.jsx"],"sourcesContent":["// src/components/admin/SyntaxHighlighter.jsx\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst SyntaxHighlighter = ({ content, onChange, textAreaRef }) => {\r\n  const highlighterRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  // Sincronizar scroll entre el textArea y el resaltador\r\n  const syncScroll = () => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\r\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\r\n    }\r\n  };\r\n\r\n  // Actualizar el contenido resaltado cuando cambia el contenido\r\n  useEffect(() => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      try {\r\n        // Aplicar resaltado pero sin modificar el código original\r\n        const highlightedContent = applySyntaxHighlightingHTML(content);\r\n        highlighterRef.current.innerHTML = highlightedContent;\r\n        \r\n        // Configurar event listeners\r\n        textAreaRef.current.addEventListener('scroll', syncScroll);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error applying syntax highlighting:\", error);\r\n      }\r\n      \r\n      // Limpiar event listeners\r\n      return () => {\r\n        if (textAreaRef.current) {\r\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\r\n        }\r\n      };\r\n    }\r\n  }, [content]);\r\n\r\n  // Función para escapar HTML de forma segura\r\n  const escapeHtml = (unsafe) => {\r\n    return unsafe\r\n      .replace(/&/g, \"&amp;\")\r\n      .replace(/</g, \"&lt;\")\r\n      .replace(/>/g, \"&gt;\")\r\n      .replace(/\"/g, \"&quot;\")\r\n      .replace(/'/g, \"&#039;\");\r\n  };\r\n  \r\n  // Función para aplicar colores al HTML sin modificar el código\r\n  const applySyntaxHighlightingHTML = (html) => {\r\n    if (!html) return \"<div>&nbsp;</div>\"; // Devuelve al menos una línea vacía\r\n    \r\n    // Escapar el HTML primero\r\n    const escapedContent = escapeHtml(html);\r\n    \r\n    // Dividir en líneas para procesar\r\n    const lines = escapedContent.split('\\n');\r\n    \r\n    // Aplicar colores a cada línea\r\n    const coloredLines = lines.map(line => {\r\n      // Aplicar colores sin alterar el texto\r\n      let coloredLine = line;\r\n      \r\n      // 1. Etiquetas HTML (apertura y cierre)\r\n      coloredLine = coloredLine.replace(/(&lt;\\/?[a-zA-Z0-9_-]+)(&gt;|[\\s\\w=\"'.:;,])/g, '<span style=\"color:#E34C26\">$1</span>$2');\r\n      \r\n      // 2. Cierre de etiquetas\r\n      coloredLine = coloredLine.replace(/(&gt;)/g, '<span style=\"color:#E34C26\">$1</span>');\r\n      \r\n      // 3. Atributos HTML\r\n      coloredLine = coloredLine.replace(/(\\s+)([a-zA-Z0-9_-]+)(=)/g, '$1<span style=\"color:#A6E22E\">$2</span>$3');\r\n      \r\n      // 4. Valores de atributos\r\n      coloredLine = coloredLine.replace(/(=)(&quot;[^&]*&quot;|&#039;[^&]*&#039;)/g, '$1<span style=\"color:#E6DB74\">$2</span>');\r\n      \r\n      // 5. Doctype\r\n      coloredLine = coloredLine.replace(/(&lt;!DOCTYPE\\s+[^&]*&gt;)/g, '<span style=\"color:#75715E\">$1</span>');\r\n      \r\n      // 6. Comentarios HTML\r\n      coloredLine = coloredLine.replace(/(&lt;!--[^>]*--&gt;)/g, '<span style=\"color:#75715E\">$1</span>');\r\n      \r\n      // 7. Contenido de estilo y script (CSS y JS)\r\n      if (coloredLine.includes('style') || coloredLine.includes('css')) {\r\n        // Propiedades CSS\r\n        coloredLine = coloredLine.replace(/([a-zA-Z-]+)(\\s*:)/g, '<span style=\"color:#66D9EF\">$1</span>$2');\r\n        \r\n        // Valores CSS\r\n        coloredLine = coloredLine.replace(/(:\\s*)([^;{}<>]+)(;|$)/g, '$1<span style=\"color:#AE81FF\">$2</span>$3');\r\n      }\r\n      \r\n      if (coloredLine.includes('script') || coloredLine.includes('js')) {\r\n        // Palabras clave JavaScript\r\n        coloredLine = coloredLine.replace(/\\b(function|return|var|let|const|if|else|for|while|new|this|class)\\b/g, '<span style=\"color:#F92672\">$1</span>');\r\n      }\r\n      \r\n      return coloredLine;\r\n    });\r\n    \r\n    // Crear divs para cada línea, manteniendo líneas vacías\r\n    return createDivs(coloredLines.join('\\n'));\r\n  };\r\n  \r\n  // Crear divs para cada línea\r\n  const createDivs = (html) => {\r\n    const lines = html.split('\\n');\r\n    return lines.map(line => `<div>${line || \"&nbsp;\"}</div>`).join('');\r\n  };\r\n\r\n  // Manejar cambios en el texto\r\n  const handleChange = (e) => {\r\n    // Solo pasar el evento sin modificar nada\r\n    onChange(e);\r\n  };\r\n\r\n  // Manejar eventos de teclado (Tab, Enter, etc.)\r\n  const handleKeyDown = (e) => {\r\n    // Implementar tabulación personalizada con 2 espacios\r\n    if (e.key === 'Tab') {\r\n      e.preventDefault();\r\n      \r\n      const start = e.target.selectionStart;\r\n      const end = e.target.selectionEnd;\r\n      \r\n      // Obtener el valor del textarea\r\n      const value = e.target.value;\r\n      \r\n      // Insertar 2 espacios en la posición actual\r\n      const newValue = value.substring(0, start) + '  ' + value.substring(end);\r\n      \r\n      // Establecer el nuevo valor\r\n      e.target.value = newValue;\r\n      \r\n      // Mover el cursor después de los espacios insertados\r\n      e.target.selectionStart = e.target.selectionEnd = start + 2;\r\n      \r\n      // Disparar evento de cambio\r\n      const event = {\r\n        target: {\r\n          name: 'content',\r\n          value: newValue\r\n        }\r\n      };\r\n      handleChange(event);\r\n    }\r\n  };\r\n\r\n  const styles = {\r\n    container: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '600px',\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      overflow: 'hidden',\r\n      borderRadius: '8px',\r\n      border: '1px solid #e1e4e8'\r\n    },\r\n    highlighter: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      padding: '16px',\r\n      backgroundColor: '#272822', // Fondo estilo Monokai\r\n      color: '#F8F8F2', // Color base de texto estilo Monokai\r\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      overflow: 'auto',\r\n      whiteSpace: 'pre',\r\n      pointerEvents: 'none',\r\n      zIndex: 1\r\n    },\r\n    textarea: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      padding: '16px',\r\n      color: 'transparent',\r\n      caretColor: '#F8F8F2', // Color de cursor claro para fondo oscuro\r\n      backgroundColor: 'transparent',\r\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      border: 'none',\r\n      resize: 'none',\r\n      whiteSpace: 'pre',\r\n      overflow: 'auto',\r\n      outline: 'none',\r\n      zIndex: 2\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={styles.container}>\r\n      {/* Estilos para la numeración de líneas */}\r\n      <style dangerouslySetInnerHTML={{ __html: `\r\n        .syntax-highlight-editor {\r\n          counter-reset: line;\r\n          padding-left: 60px;\r\n        }\r\n        \r\n        .syntax-highlight-editor div {\r\n          position: relative;\r\n          min-height: 1.5em;\r\n          color: #F8F8F2;\r\n        }\r\n        \r\n        .syntax-highlight-editor div:before {\r\n          content: counter(line);\r\n          counter-increment: line;\r\n          position: absolute;\r\n          left: -50px;\r\n          top: 0;\r\n          width: 40px;\r\n          color: #90908A;\r\n          text-align: right;\r\n          user-select: none;\r\n          opacity: 0.8;\r\n        }\r\n      ` }} />\r\n      \r\n      {/* Capa de resaltado (solo visual) */}\r\n      <pre \r\n        ref={highlighterRef}\r\n        className=\"syntax-highlight-editor\"\r\n        style={styles.highlighter}\r\n      />\r\n      \r\n      {/* Textarea para edición (visible pero con texto transparente) */}\r\n      <textarea\r\n        ref={textAreaRef}\r\n        value={content}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        onScroll={syncScroll}\r\n        style={styles.textarea}\r\n        spellCheck=\"false\"\r\n        placeholder=\"Escribe código HTML aquí...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}