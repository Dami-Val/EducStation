{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\FloatingToolbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Tooltip from '../ui/Tooltip';\nimport ColorPicker from './ColorPicker'; // Importamos el nuevo componente ColorPicker\n\n// Tamaños de fuente predeterminados como en Word\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 120];\n\n// FloatingToolbar - Barra de herramientas flotante para edición de texto\n// Aparece cuando se hace clic en el editor o se selecciona texto\nconst FloatingToolbar = ({\n  onFormatText,\n  activeFormats,\n  editorRef,\n  fontSize,\n  setFontSize\n}) => {\n  _s();\n  // Estados del componente\n  const [visible, setVisible] = useState(false);\n  const [position, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\n  const [customFontSize, setCustomFontSize] = useState('');\n  const [isEditingFontSize, setIsEditingFontSize] = useState(false);\n  const [savedSelection, setSavedSelection] = useState(null);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Estados para el selector de color\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [currentIconColor, setCurrentIconColor] = useState('#0b4444'); // Color inicial del ícono\n\n  // Referencias\n  const toolbarRef = useRef(null);\n  const fontSizeMenuRef = useRef(null);\n  const customFontInputRef = useRef(null);\n  const colorButtonRef = useRef(null);\n\n  // Mostrar tooltip\n  const showTooltip = id => {\n    setActiveTooltip(id);\n  };\n\n  // Ocultar tooltip\n  const hideTooltip = () => {\n    setActiveTooltip(null);\n  };\n\n  // Manejar clic en el botón de color\n  const handleColorButtonClick = () => {\n    // Guardar la selección actual antes de abrir el color picker\n    saveSelection();\n    // Mostrar u ocultar el selector de color\n    setShowColorPicker(!showColorPicker);\n    // Ocultar otros menús\n    setShowFontSizeMenu(false);\n  };\n\n  // Aplicar color seleccionado y guardarlo automáticamente\n  const applyTextColor = color => {\n    if (restoreSelection()) {\n      try {\n        document.execCommand('foreColor', false, color);\n        setShowColorPicker(false);\n        // Actualizar el color del ícono al color seleccionado\n        setCurrentIconColor(color);\n\n        // Guardar automáticamente el color en localStorage\n        const defaultColors = ['#91a8a4', '#0b4444', '#4c7977', '#f0f8f7', '#d2b99a'];\n        try {\n          // Recuperar colores guardados\n          const storedColorsStr = localStorage.getItem('savedTextColors');\n          let storedColors = defaultColors;\n          if (storedColorsStr) {\n            try {\n              const parsed = JSON.parse(storedColorsStr);\n              if (Array.isArray(parsed) && parsed.length > 0) {\n                storedColors = parsed;\n              }\n            } catch (e) {\n              console.warn('Error al parsear colores guardados:', e);\n            }\n          }\n\n          // Verificar si el color ya existe\n          if (!storedColors.includes(color)) {\n            // Mantener solo los últimos 5 colores\n            if (storedColors.length >= 5) {\n              storedColors.shift();\n            }\n            storedColors.push(color);\n            localStorage.setItem('savedTextColors', JSON.stringify(storedColors));\n          }\n        } catch (e) {\n          console.warn('Error al guardar color:', e);\n        }\n      } catch (e) {\n        console.error('Error al aplicar color:', e);\n        // En caso de error, usar un color predeterminado\n        document.execCommand('foreColor', false, '#0b4444');\n        setCurrentIconColor('#0b4444');\n      }\n    }\n  };\n\n  // Cerrar el selector de color\n  const closeColorPicker = () => {\n    setShowColorPicker(false);\n  };\n\n  // Estilos para la barra de herramientas\n  const styles = {\n    floatingBar: {\n      position: 'absolute',\n      zIndex: 1000,\n      display: visible ? 'flex' : 'none',\n      alignItems: 'center',\n      backgroundColor: 'rgb(209, 224, 217)',\n      borderRadius: '9px',\n      padding: '6px',\n      boxShadow: '0 3px 12px rgba(61, 42, 42, 0.2)',\n      transition: 'opacity 2s ease, transform 2s ease',\n      // Transición más lenta (2 segundos)\n      opacity: visible ? 1 : 0,\n      transform: visible ? 'translateY(0)' : 'translateY(10px)',\n      // Quitar translateX para evitar centrado\n      gap: '2px',\n      border: 'rgb(0, 0, 0)' // Añadir un borde sutil para mejorar la visibilidad\n    },\n    button: isActive => ({\n      background: 'none',\n      border: 'none',\n      borderRadius: '4px',\n      padding: '6px',\n      margin: '0 2px',\n      fontSize: '14px',\n      cursor: 'pointer',\n      color: isActive ? '#1b4fd9' : '#0b4444',\n      backgroundColor: isActive ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n      transition: 'all 0.2s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '28px',\n      height: '28px',\n      position: 'relative'\n    }),\n    colorButton: showingPicker => ({\n      background: 'none',\n      border: 'none',\n      borderRadius: '4px',\n      padding: '6px',\n      margin: '0 2px',\n      fontSize: '14px',\n      cursor: 'pointer',\n      color: '#0b4444',\n      backgroundColor: showingPicker ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n      transition: 'all 0.2s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '28px',\n      height: '28px',\n      position: 'relative'\n    }),\n    fontSizeButton: {\n      display: 'flex',\n      alignItems: 'center',\n      background: 'none',\n      border: '1px solid #e1e7e6',\n      borderRadius: '4px',\n      padding: '4px 8px',\n      margin: '0 2px',\n      fontSize: '13px',\n      cursor: 'pointer',\n      color: '#333333',\n      // Color más oscuro para mejor legibilidad\n      fontWeight: 'normal',\n      transition: 'all 0.2s ease',\n      position: 'relative'\n    },\n    fontSizeInput: {\n      width: '40px',\n      border: '1px solid #2B579A',\n      borderRadius: '4px',\n      padding: '4px',\n      fontSize: '13px',\n      color: '#333333',\n      textAlign: 'center',\n      outline: 'none',\n      backgroundColor: 'white'\n    },\n    fontSizeMenu: {\n      position: 'absolute',\n      top: '100%',\n      left: '0',\n      backgroundColor: 'white',\n      border: '1px solid #cccccc',\n      borderRadius: '4px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n      maxHeight: '300px',\n      overflow: 'auto',\n      zIndex: 1001,\n      display: showFontSizeMenu ? 'block' : 'none',\n      marginTop: '2px',\n      width: '50px'\n    },\n    fontSizeItem: {\n      padding: '6px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      transition: 'background-color 0.2s',\n      textAlign: 'center',\n      color: '#0b4444'\n    },\n    customOption: {\n      borderTop: '1px solid #e1e7e6',\n      fontStyle: 'italic',\n      padding: '6px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      textAlign: 'center',\n      color: '#2B579A'\n    },\n    separator: {\n      width: '1px',\n      height: '20px',\n      margin: '0 4px',\n      backgroundColor: '#e1e7e6'\n    },\n    sizeControls: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    incrementButton: {\n      background: 'none',\n      border: 'none',\n      padding: '3px 5px',\n      cursor: 'pointer',\n      color: '#2B579A',\n      fontSize: '14px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '3px',\n      position: 'relative'\n    },\n    colorIconContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative'\n    },\n    colorIcon: {\n      fontWeight: 'bold',\n      color: currentIconColor,\n      fontSize: '16px',\n      transition: 'color 0.3s ease'\n    }\n  };\n\n  // Función para calcular la posición de la barra\n  const calculateBarPosition = selection => {\n    if (!editorRef.current) return;\n\n    // Calcular la posición de la barra\n    const editorRect = editorRef.current.getBoundingClientRect();\n\n    // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\n    const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\n    // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\n    const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\n    let newPosition;\n\n    // Determinar la línea en la que está el cursor (primera línea o no)\n    const range = selection.getRangeAt(0);\n    const rect = range.getBoundingClientRect();\n    const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\n\n    // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\n    const lineHeight = 20; // Altura estimada de la línea de texto\n\n    const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n    if (hasSelection) {\n      // Si hay selección, posicionar debajo de la selección\n      if (rect.width === 0) {\n        return;\n      }\n      newPosition = {\n        // Posicionamos la barra debajo de la línea de texto\n        top: rect.bottom - editorRect.top + 8,\n        // Alineamos con el inicio de la selección\n        left: rect.left - editorRect.left\n      };\n    } else {\n      // Si solo está activo el editor sin selección\n      const isNearLeftEdge = rect.left < editorRect.left + 50;\n\n      // Siempre colocar la barra debajo del cursor\n      newPosition = {\n        top: rect.bottom - editorRect.top + 8,\n        // Debajo del cursor\n        left: rect.left - editorRect.left // Alineado con el cursor\n      };\n\n      // Si no tenemos dimensiones válidas, usar posición por defecto dentro del editor\n      if (rect.width === 0 && rect.height === 0) {\n        newPosition = {\n          top: 30 + lineHeight,\n          // Debajo de la primera línea\n          left: 50 // Desde el borde izquierdo\n        };\n      }\n    }\n\n    // CRÍTICO: Asegurar que la barra siempre está DENTRO del editor\n    // 1. Comprobar límites verticales\n    if (newPosition.top < 0) {\n      // Si la posición es negativa, colocar al inicio del editor\n      newPosition.top = 10;\n    }\n    const editorHeight = editorRef.current.offsetHeight;\n    if (newPosition.top + toolbarHeight > editorHeight) {\n      // Si la barra se saldría por abajo, colocar más arriba\n      newPosition.top = editorHeight - toolbarHeight - 10;\n    }\n\n    // 2. Comprobar límites horizontales\n    if (newPosition.left < 10) {\n      newPosition.left = 10;\n    }\n    const editorWidth = editorRef.current.offsetWidth;\n    if (newPosition.left + toolbarWidth > editorWidth) {\n      newPosition.left = editorWidth - toolbarWidth - 10;\n    }\n\n    // 3. Comprobar que la posición es válida\n    newPosition.top = Math.max(0, newPosition.top);\n    newPosition.left = Math.max(0, newPosition.left);\n    setPosition(newPosition);\n  };\n\n  // Función para guardar la selección actual\n  const saveSelection = () => {\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      const ranges = [];\n      for (let i = 0; i < selection.rangeCount; i++) {\n        ranges.push(selection.getRangeAt(i).cloneRange());\n      }\n      setSavedSelection(ranges);\n      return ranges;\n    }\n    return null;\n  };\n\n  // Función para restaurar la selección guardada\n  const restoreSelection = (ranges = savedSelection) => {\n    if (!ranges) return false;\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    ranges.forEach(range => {\n      selection.addRange(range);\n    });\n    return true;\n  };\n\n  // Función para verificar la selección de texto o si el editor está activo\n  const checkSelection = event => {\n    // Obtener la selección actual\n    const selection = window.getSelection();\n\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n    // independientemente del estado de escritura\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n    // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\n    if (isTyping && !hasTextSelection) return;\n    try {\n      // Evitar ocultar la barra si estamos interactuando con elementos de la barra\n      if (toolbarRef.current && (toolbarRef.current.contains(document.activeElement) || event && toolbarRef.current.contains(event.target))) {\n        return;\n      }\n\n      // Prevent hiding the toolbar if interacting with the font size menu\n      if (fontSizeMenuRef.current && (fontSizeMenuRef.current.contains(document.activeElement) || selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode))) {\n        return;\n      }\n\n      // Verificar si el editor está activo\n      const isEditorActive = editorRef.current === document.activeElement;\n\n      // Verificar si tenemos una selección válida\n      const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n\n      // Si ni el editor está activo ni hay selección, ocultar la barra\n      if (!isEditorActive && !hasSelection) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Verificar si la selección o el cursor está dentro del editor\n      let isInEditor = false;\n      if (isEditorActive) {\n        isInEditor = true;\n      } else if (hasSelection) {\n        const range = selection.getRangeAt(0);\n        let container = range.commonAncestorContainer;\n\n        // Si el contenedor es un nodo de texto, obtener su elemento padre\n        if (container.nodeType === 3) {\n          container = container.parentNode;\n        }\n\n        // Verificar si el contenedor o algún antecesor es el editor\n        let current = container;\n        while (current && !isInEditor) {\n          if (current === editorRef.current) {\n            isInEditor = true;\n          }\n          current = current.parentNode;\n        }\n      }\n      if (!isInEditor) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Calcular la posición de la barra\n      calculateBarPosition(selection);\n      setVisible(true);\n\n      // Guardar la selección actual para poder restaurarla más tarde\n      saveSelection();\n    } catch (error) {\n      console.error('Error al verificar selección:', error);\n      setVisible(false);\n      setShowFontSizeMenu(false);\n    }\n  };\n\n  // Aplicar un tamaño de fuente específico\n  const applyFontSize = size => {\n    // Restaurar la selección antes de aplicar el formato\n    if (restoreSelection()) {\n      setFontSize(size); // Usar la función proporcionada por el componente padre\n    }\n    setShowFontSizeMenu(false);\n    setIsEditingFontSize(false);\n  };\n\n  // Maneja la entrada de texto para tamaño personalizado\n  const handleCustomFontSizeChange = e => {\n    // Solo permitir números y un punto decimal\n    const value = e.target.value.replace(/[^0-9.]/g, '');\n    // Evitar múltiples puntos decimales\n    if (value.split('.').length > 2) return;\n    setCustomFontSize(value);\n  };\n\n  // Maneja cuando el usuario confirma un tamaño personalizado\n  const handleCustomFontSizeSubmit = e => {\n    e.preventDefault();\n    if (customFontSize) {\n      const size = parseFloat(customFontSize);\n      // Validar que sea un número y esté en un rango razonable\n      if (!isNaN(size) && size >= 1 && size <= 500) {\n        applyFontSize(size);\n      }\n    }\n    setIsEditingFontSize(false);\n  };\n\n  // Incrementar/decrementar tamaño de fuente\n  const changeFontSize = increment => {\n    // Restaurar la selección antes de cambiar el tamaño\n    if (restoreSelection()) {\n      const currentIndex = FONT_SIZES.indexOf(fontSize);\n      if (increment && currentIndex < FONT_SIZES.length - 1) {\n        applyFontSize(FONT_SIZES[currentIndex + 1]);\n      } else if (!increment && currentIndex > 0) {\n        applyFontSize(FONT_SIZES[currentIndex - 1]);\n      }\n    }\n  };\n\n  // Activar el modo de edición de tamaño personalizado\n  const enableFontSizeEditing = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setIsEditingFontSize(true);\n    setCustomFontSize(fontSize.toString());\n    setShowFontSizeMenu(false);\n\n    // Enfocar el input después de que se haya renderizado\n    setTimeout(() => {\n      if (customFontInputRef.current) {\n        customFontInputRef.current.focus();\n        customFontInputRef.current.select();\n      }\n    }, 50);\n  };\n\n  // Toggle del menú de tamaños\n  const toggleFontSizeMenu = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setShowFontSizeMenu(!showFontSizeMenu);\n  };\n\n  // Actualizar el estado local cuando cambia el tamaño de fuente recibido\n  useEffect(() => {\n    if (isEditingFontSize) {\n      setCustomFontSize(fontSize.toString());\n    }\n  }, [fontSize, isEditingFontSize]);\n\n  // Mostrar la barra al hacer clic en el editor\n  useEffect(() => {\n    const handleEditorClick = () => {\n      if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\n        checkSelection();\n      }\n    };\n    if (editorRef.current) {\n      editorRef.current.addEventListener('click', handleEditorClick);\n    }\n    return () => {\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('click', handleEditorClick);\n      }\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Detectar cambios en la selección y en el foco del editor\n  useEffect(() => {\n    // No agregar event listeners si no hay editorRef\n    if (!editorRef || !editorRef.current) return;\n\n    // Temporizador para controlar la visualización de la barra\n    let typingTimer;\n    const handleKeyDown = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Ocultar la barra inmediatamente al empezar a escribir\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleInput = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Asegurarse de que la barra está oculta mientras se escribe\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleKeyUp = () => {\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n      // Configurar un nuevo temporizador\n      typingTimer = setTimeout(() => {\n        // Ya no estamos escribiendo\n        setIsTyping(false);\n        // Forzar la visualización de la barra después del tiempo de espera\n        const selection = window.getSelection();\n        if (selection && editorRef.current) {\n          // Asegurarse de que el editor sigue teniendo el foco\n          if (editorRef.current === document.activeElement) {\n            try {\n              // Calcular la posición de forma segura\n              const editorRect = editorRef.current.getBoundingClientRect();\n              const range = selection.getRangeAt(0);\n              const rect = range.getBoundingClientRect();\n\n              // Verificar que la selección está dentro del editor\n              if (rect.top >= editorRect.top && rect.bottom <= editorRect.bottom && rect.left >= editorRect.left && rect.right <= editorRect.right) {\n                // Solo si estamos dentro del editor, mostrar la barra\n                calculateBarPosition(selection);\n                setVisible(true);\n              } else {\n                // Si estamos fuera del editor, colocar en una posición segura dentro del editor\n                setPosition({\n                  top: 30,\n                  left: 50\n                });\n                setVisible(true);\n              }\n            } catch (e) {\n              console.error(\"Error al posicionar la barra:\", e);\n              // Posición por defecto dentro del editor\n              setPosition({\n                top: 30,\n                left: 50\n              });\n              setVisible(true);\n            }\n          }\n        }\n      }, 1500); // Esperar 1.5 segundos después de dejar de escribir\n    };\n\n    // Deshabilitar temporalmente los eventos que podrían causar parpadeo\n    const handleSelectionChange = () => {\n      // Obtener la selección actual\n      const selection = window.getSelection();\n\n      // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n      const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n      // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\n      if (hasTextSelection || !isTyping) {\n        checkSelection();\n      }\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    editorRef.current.addEventListener('mouseup', handleSelectionChange);\n    editorRef.current.addEventListener('keydown', handleKeyDown);\n    editorRef.current.addEventListener('input', handleInput);\n    editorRef.current.addEventListener('keyup', handleKeyUp);\n    editorRef.current.addEventListener('focus', handleSelectionChange);\n\n    // Limpiar event listeners\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('mouseup', handleSelectionChange);\n        editorRef.current.removeEventListener('keydown', handleKeyDown);\n        editorRef.current.removeEventListener('input', handleInput);\n        editorRef.current.removeEventListener('keyup', handleKeyUp);\n        editorRef.current.removeEventListener('focus', handleSelectionChange);\n      }\n      clearTimeout(typingTimer);\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Cerrar el menú cuando se hace clic fuera\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // Cerrar selector de tamaño\n      if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\n        setShowFontSizeMenu(false);\n      }\n\n      // Cerrar selector de color si no se está haciendo clic en él o en su botón\n      if (showColorPicker && colorButtonRef.current && !colorButtonRef.current.contains(event.target) && !event.target.closest('.color-picker-container')) {\n        setShowColorPicker(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showColorPicker]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: toolbarRef,\n    style: {\n      ...styles.floatingBar,\n      top: `${position.top}px`,\n      left: `${position.left}px`\n      // Ya no transformamos con translateX(-50%) para evitar centrado\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.bold),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('bold');\n      },\n      onMouseEnter: () => showTooltip('bold'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'bold',\n        text: \"Negrita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.italic),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('italic');\n      },\n      onMouseEnter: () => showTooltip('italic'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"\\uFF29\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'italic',\n        text: \"Cursiva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.underline),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('underline');\n      },\n      onMouseEnter: () => showTooltip('underline'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"U\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'underline',\n        text: \"Subrayado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.separator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.sizeControls,\n      children: [isEditingFontSize ?\n      /*#__PURE__*/\n      /* Campo de entrada para tamaño personalizado */\n      _jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleCustomFontSizeSubmit(e);\n        },\n        style: {\n          display: 'flex',\n          margin: '0 2px'\n        },\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: customFontInputRef,\n          type: \"text\",\n          value: customFontSize,\n          onChange: handleCustomFontSizeChange,\n          onBlur: e => {\n            // Permitir un poco de tiempo para que se procese el clic antes de cerrar\n            setTimeout(() => {\n              handleCustomFontSizeSubmit(e);\n            }, 100);\n          },\n          style: styles.fontSizeInput,\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      /* Botón de tamaño actual con desplegable */\n      _jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.fontSizeButton,\n          onClick: enableFontSizeEditing // Al hacer clic directo, abre el editor de tamaño personalizado\n          ,\n          onDoubleClick: toggleFontSizeMenu // Doble clic muestra el menú\n          ,\n          onMouseEnter: () => showTooltip('fontSize'),\n          onMouseLeave: hideTooltip,\n          children: [fontSize, /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'fontSize',\n            text: \"Tama\\xF1o de fuente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: fontSizeMenuRef,\n          style: styles.fontSizeMenu,\n          onClick: e => e.stopPropagation(),\n          children: [FONT_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.fontSizeItem,\n              backgroundColor: fontSize === size ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n              fontWeight: fontSize === size ? 'bold' : 'normal'\n            },\n            onClick: e => {\n              e.stopPropagation();\n              applyFontSize(size);\n            },\n            onMouseEnter: e => {\n              e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n            },\n            onMouseLeave: e => {\n              if (fontSize !== size) {\n                e.currentTarget.style.backgroundColor = 'transparent';\n              }\n            },\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.customOption,\n            onClick: e => {\n              e.stopPropagation();\n              enableFontSizeEditing(e);\n            },\n            onMouseEnter: e => {\n              e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n            },\n            onMouseLeave: e => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            },\n            children: \"Personalizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.incrementButton,\n          onClick: e => {\n            e.stopPropagation();\n            changeFontSize(true);\n          },\n          onMouseEnter: () => showTooltip('increaseFontSize'),\n          onMouseLeave: hideTooltip,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#0b4444'\n            },\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'increaseFontSize',\n            text: \"Aumentar tama\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.incrementButton,\n          onClick: e => {\n            e.stopPropagation();\n            changeFontSize(false);\n          },\n          onMouseEnter: () => showTooltip('decreaseFontSize'),\n          onMouseLeave: hideTooltip,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#0b4444'\n            },\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'decreaseFontSize',\n            text: \"Reducir tama\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.separator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        ref: colorButtonRef,\n        type: \"button\",\n        style: styles.colorButton(showColorPicker),\n        onClick: handleColorButtonClick,\n        onMouseEnter: () => showTooltip('textColor'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.colorIconContainer,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.colorIcon,\n            children: \"\\u3011\\u3010\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'textColor',\n          text: \"Color de texto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 7\n      }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-picker-container\",\n        children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n          onSelectColor: applyTextColor,\n          onCloseColorPicker: closeColorPicker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 920,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.unorderedList),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('unorderedList');\n      },\n      onMouseEnter: () => showTooltip('unorderedList'),\n      onMouseLeave: hideTooltip,\n      children: [\"\\u2022\", /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'unorderedList',\n        text: \"Lista con vi\\xF1etas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.link),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('link');\n      },\n      onMouseEnter: () => showTooltip('link'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/icons/LINK_icon.png\",\n        style: styles.iconImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'link',\n        text: \"Insertar enlace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(false),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('image');\n      },\n      onMouseEnter: () => showTooltip('image'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/icons/IMG_icon.png\",\n        style: styles.iconImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'image',\n        text: \"Insertar imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 700,\n    columnNumber: 3\n  }, this);\n};\n_s(FloatingToolbar, \"g+en1P/Y0AOdLOHkNMtBRv3tnUc=\");\n_c = FloatingToolbar;\nexport default FloatingToolbar;\nvar _c;\n$RefreshReg$(_c, \"FloatingToolbar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Tooltip","ColorPicker","jsxDEV","_jsxDEV","FONT_SIZES","FloatingToolbar","onFormatText","activeFormats","editorRef","fontSize","setFontSize","_s","visible","setVisible","position","setPosition","top","left","showFontSizeMenu","setShowFontSizeMenu","customFontSize","setCustomFontSize","isEditingFontSize","setIsEditingFontSize","savedSelection","setSavedSelection","activeTooltip","setActiveTooltip","isTyping","setIsTyping","showColorPicker","setShowColorPicker","currentIconColor","setCurrentIconColor","toolbarRef","fontSizeMenuRef","customFontInputRef","colorButtonRef","showTooltip","id","hideTooltip","handleColorButtonClick","saveSelection","applyTextColor","color","restoreSelection","document","execCommand","defaultColors","storedColorsStr","localStorage","getItem","storedColors","parsed","JSON","parse","Array","isArray","length","e","console","warn","includes","shift","push","setItem","stringify","error","closeColorPicker","styles","floatingBar","zIndex","display","alignItems","backgroundColor","borderRadius","padding","boxShadow","transition","opacity","transform","gap","border","button","isActive","background","margin","cursor","justifyContent","width","height","colorButton","showingPicker","fontSizeButton","fontWeight","fontSizeInput","textAlign","outline","fontSizeMenu","maxHeight","overflow","marginTop","fontSizeItem","userSelect","customOption","borderTop","fontStyle","separator","sizeControls","incrementButton","colorIconContainer","colorIcon","calculateBarPosition","selection","current","editorRect","getBoundingClientRect","toolbarHeight","offsetHeight","toolbarWidth","offsetWidth","newPosition","range","getRangeAt","rect","isFirstLine","lineHeight","hasSelection","isCollapsed","bottom","isNearLeftEdge","editorHeight","editorWidth","Math","max","window","getSelection","rangeCount","ranges","i","cloneRange","removeAllRanges","forEach","addRange","checkSelection","event","hasTextSelection","toString","trim","contains","activeElement","target","anchorNode","isEditorActive","isInEditor","container","commonAncestorContainer","nodeType","parentNode","applyFontSize","size","handleCustomFontSizeChange","value","replace","split","handleCustomFontSizeSubmit","preventDefault","parseFloat","isNaN","changeFontSize","increment","currentIndex","indexOf","enableFontSizeEditing","stopPropagation","setTimeout","focus","select","toggleFontSizeMenu","handleEditorClick","addEventListener","removeEventListener","typingTimer","handleKeyDown","clearTimeout","handleInput","handleKeyUp","right","handleSelectionChange","handleClickOutside","closest","ref","style","children","type","bold","onClick","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","text","italic","underline","onSubmit","onChange","onBlur","onDoubleClick","map","currentTarget","className","onSelectColor","onCloseColorPicker","unorderedList","link","src","iconImage","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/FloatingToolbar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Tooltip from '../ui/Tooltip';\r\nimport ColorPicker from './ColorPicker'; // Importamos el nuevo componente ColorPicker\r\n\r\n// Tamaños de fuente predeterminados como en Word\r\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72,120];\r\n\r\n// FloatingToolbar - Barra de herramientas flotante para edición de texto\r\n// Aparece cuando se hace clic en el editor o se selecciona texto\r\nconst FloatingToolbar = ({ onFormatText, activeFormats, editorRef, fontSize, setFontSize }) => {\r\n// Estados del componente\r\nconst [visible, setVisible] = useState(false);\r\nconst [position, setPosition] = useState({ top: 0, left: 0 });\r\nconst [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\r\nconst [customFontSize, setCustomFontSize] = useState('');\r\nconst [isEditingFontSize, setIsEditingFontSize] = useState(false);\r\nconst [savedSelection, setSavedSelection] = useState(null);\r\nconst [activeTooltip, setActiveTooltip] = useState(null);\r\nconst [isTyping, setIsTyping] = useState(false);\r\n\r\n// Estados para el selector de color\r\nconst [showColorPicker, setShowColorPicker] = useState(false);\r\nconst [currentIconColor, setCurrentIconColor] = useState('#0b4444'); // Color inicial del ícono\r\n\r\n// Referencias\r\nconst toolbarRef = useRef(null);\r\nconst fontSizeMenuRef = useRef(null);\r\nconst customFontInputRef = useRef(null);\r\nconst colorButtonRef = useRef(null);\r\n\r\n// Mostrar tooltip\r\nconst showTooltip = (id) => {\r\n  setActiveTooltip(id);\r\n};\r\n\r\n// Ocultar tooltip\r\nconst hideTooltip = () => {\r\n  setActiveTooltip(null);\r\n};\r\n\r\n// Manejar clic en el botón de color\r\nconst handleColorButtonClick = () => {\r\n  // Guardar la selección actual antes de abrir el color picker\r\n  saveSelection();\r\n  // Mostrar u ocultar el selector de color\r\n  setShowColorPicker(!showColorPicker);\r\n  // Ocultar otros menús\r\n  setShowFontSizeMenu(false);\r\n};\r\n\r\n// Aplicar color seleccionado y guardarlo automáticamente\r\nconst applyTextColor = (color) => {\r\n  if (restoreSelection()) {\r\n    try {\r\n      document.execCommand('foreColor', false, color);\r\n      setShowColorPicker(false);\r\n      // Actualizar el color del ícono al color seleccionado\r\n      setCurrentIconColor(color);\r\n      \r\n      // Guardar automáticamente el color en localStorage\r\n      const defaultColors = ['#91a8a4', '#0b4444', '#4c7977', '#f0f8f7', '#d2b99a'];\r\n      try {\r\n        // Recuperar colores guardados\r\n        const storedColorsStr = localStorage.getItem('savedTextColors');\r\n        let storedColors = defaultColors;\r\n        \r\n        if (storedColorsStr) {\r\n          try {\r\n            const parsed = JSON.parse(storedColorsStr);\r\n            if (Array.isArray(parsed) && parsed.length > 0) {\r\n              storedColors = parsed;\r\n            }\r\n          } catch (e) {\r\n            console.warn('Error al parsear colores guardados:', e);\r\n          }\r\n        }\r\n        \r\n        // Verificar si el color ya existe\r\n        if (!storedColors.includes(color)) {\r\n          // Mantener solo los últimos 5 colores\r\n          if (storedColors.length >= 5) {\r\n            storedColors.shift();\r\n          }\r\n          storedColors.push(color);\r\n          localStorage.setItem('savedTextColors', JSON.stringify(storedColors));\r\n        }\r\n      } catch (e) {\r\n        console.warn('Error al guardar color:', e);\r\n      }\r\n    } catch (e) {\r\n      console.error('Error al aplicar color:', e);\r\n      // En caso de error, usar un color predeterminado\r\n      document.execCommand('foreColor', false, '#0b4444');\r\n      setCurrentIconColor('#0b4444');\r\n    }\r\n  }\r\n};\r\n\r\n// Cerrar el selector de color\r\nconst closeColorPicker = () => {\r\n  setShowColorPicker(false);\r\n};\r\n\r\n// Estilos para la barra de herramientas\r\nconst styles = {\r\n        floatingBar: {\r\n    position: 'absolute',\r\n    zIndex: 1000,\r\n    display: visible ? 'flex' : 'none',\r\n    alignItems: 'center',\r\n    backgroundColor:  'rgb(209, 224, 217)',\r\n    borderRadius: '9px',\r\n    padding: '6px',\r\n    boxShadow: '0 3px 12px rgba(61, 42, 42, 0.2)',\r\n    transition: 'opacity 2s ease, transform 2s ease', // Transición más lenta (2 segundos)\r\n    opacity: visible ? 1 : 0,\r\n    transform: visible ? 'translateY(0)' : 'translateY(10px)', // Quitar translateX para evitar centrado\r\n    gap: '2px',\r\n    border: 'rgb(0, 0, 0)' // Añadir un borde sutil para mejorar la visibilidad\r\n  },\r\n  button: (isActive) => ({\r\n    background: 'none',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    padding: '6px',\r\n    margin: '0 2px',\r\n    fontSize: '14px',\r\n    cursor: 'pointer',\r\n    color: isActive ? '#1b4fd9' : '#0b4444',\r\n    backgroundColor: isActive ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\r\n    transition: 'all 0.2s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '28px',\r\n    height: '28px',\r\n    position: 'relative'\r\n  }),\r\n  colorButton: (showingPicker) => ({\r\n    background: 'none',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    padding: '6px',\r\n    margin: '0 2px',\r\n    fontSize: '14px',\r\n    cursor: 'pointer',\r\n    color: '#0b4444',\r\n    backgroundColor: showingPicker ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\r\n    transition: 'all 0.2s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '28px',\r\n    height: '28px',\r\n    position: 'relative'\r\n  }),\r\n  fontSizeButton: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    background: 'none',\r\n    border: '1px solid #e1e7e6',\r\n    borderRadius: '4px',\r\n    padding: '4px 8px',\r\n    margin: '0 2px',\r\n    fontSize: '13px',\r\n    cursor: 'pointer',\r\n    color: '#333333', // Color más oscuro para mejor legibilidad\r\n    fontWeight: 'normal',\r\n    transition: 'all 0.2s ease',\r\n    position: 'relative'\r\n  },\r\n  fontSizeInput: {\r\n    width: '40px',\r\n    border: '1px solid #2B579A',\r\n    borderRadius: '4px',\r\n    padding: '4px',\r\n    fontSize: '13px',\r\n    color: '#333333',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n    backgroundColor: 'white'\r\n  },\r\n  fontSizeMenu: {\r\n    position: 'absolute',\r\n    top: '100%',\r\n    left: '0',\r\n    backgroundColor: 'white',\r\n    border: '1px solid #cccccc',\r\n    borderRadius: '4px',\r\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n    zIndex: 1001,\r\n    display: showFontSizeMenu ? 'block' : 'none',\r\n    marginTop: '2px',\r\n    width: '50px'\r\n  },\r\n  fontSizeItem: {\r\n    padding: '6px 12px',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    transition: 'background-color 0.2s',\r\n    textAlign: 'center',\r\n    color: '#0b4444'\r\n  },\r\n  customOption: {\r\n    borderTop: '1px solid #e1e7e6', \r\n    fontStyle: 'italic',\r\n    padding: '6px 12px',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    textAlign: 'center',\r\n    color: '#2B579A'\r\n  },\r\n  separator: {\r\n    width: '1px',\r\n    height: '20px',\r\n    margin: '0 4px',\r\n    backgroundColor: '#e1e7e6'\r\n  },\r\n  sizeControls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative'\r\n  },\r\n  incrementButton: {\r\n    background: 'none',\r\n    border: 'none',\r\n    padding: '3px 5px',\r\n    cursor: 'pointer',\r\n    color: '#2B579A', \r\n    fontSize: '14px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '3px',\r\n    position: 'relative'\r\n  },\r\n  colorIconContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    position: 'relative'\r\n  },\r\n  colorIcon: {\r\n    fontWeight: 'bold',\r\n    color: currentIconColor,\r\n    fontSize: '16px',\r\n    transition: 'color 0.3s ease'\r\n  }\r\n};\r\n\r\n// Función para calcular la posición de la barra\r\nconst calculateBarPosition = (selection) => {\r\n  if (!editorRef.current) return;\r\n  \r\n  // Calcular la posición de la barra\r\n  const editorRect = editorRef.current.getBoundingClientRect();\r\n  \r\n  // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\r\n  const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\r\n  // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\r\n  const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\r\n  \r\n  let newPosition;\r\n  \r\n  // Determinar la línea en la que está el cursor (primera línea o no)\r\n  const range = selection.getRangeAt(0);\r\n  const rect = range.getBoundingClientRect();\r\n  const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\r\n  \r\n  // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\r\n  const lineHeight = 20; // Altura estimada de la línea de texto\r\n  \r\n  const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n  \r\n  if (hasSelection) {\r\n    // Si hay selección, posicionar debajo de la selección\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n    \r\n    newPosition = {\r\n      // Posicionamos la barra debajo de la línea de texto\r\n      top: rect.bottom - editorRect.top + 8,\r\n      // Alineamos con el inicio de la selección\r\n      left: rect.left - editorRect.left\r\n    };\r\n  } else {\r\n    // Si solo está activo el editor sin selección\r\n    const isNearLeftEdge = rect.left < editorRect.left + 50;\r\n    \r\n    // Siempre colocar la barra debajo del cursor\r\n    newPosition = {\r\n      top: rect.bottom - editorRect.top + 8, // Debajo del cursor\r\n      left: rect.left - editorRect.left // Alineado con el cursor\r\n    };\r\n    \r\n    // Si no tenemos dimensiones válidas, usar posición por defecto dentro del editor\r\n    if (rect.width === 0 && rect.height === 0) {\r\n      newPosition = {\r\n        top: 30 + lineHeight, // Debajo de la primera línea\r\n        left: 50 // Desde el borde izquierdo\r\n      };\r\n    }\r\n  }\r\n  \r\n  // CRÍTICO: Asegurar que la barra siempre está DENTRO del editor\r\n  // 1. Comprobar límites verticales\r\n  if (newPosition.top < 0) {\r\n    // Si la posición es negativa, colocar al inicio del editor\r\n    newPosition.top = 10;\r\n  }\r\n  \r\n  const editorHeight = editorRef.current.offsetHeight;\r\n  if (newPosition.top + toolbarHeight > editorHeight) {\r\n    // Si la barra se saldría por abajo, colocar más arriba\r\n    newPosition.top = editorHeight - toolbarHeight - 10;\r\n  }\r\n  \r\n  // 2. Comprobar límites horizontales\r\n  if (newPosition.left < 10) {\r\n    newPosition.left = 10;\r\n  }\r\n  \r\n  const editorWidth = editorRef.current.offsetWidth;\r\n  if (newPosition.left + toolbarWidth > editorWidth) {\r\n    newPosition.left = editorWidth - toolbarWidth - 10;\r\n  }\r\n  \r\n  // 3. Comprobar que la posición es válida\r\n  newPosition.top = Math.max(0, newPosition.top);\r\n  newPosition.left = Math.max(0, newPosition.left);\r\n  \r\n  setPosition(newPosition);\r\n};\r\n\r\n// Función para guardar la selección actual\r\nconst saveSelection = () => {\r\n  const selection = window.getSelection();\r\n  if (selection.rangeCount > 0) {\r\n    const ranges = [];\r\n    for (let i = 0; i < selection.rangeCount; i++) {\r\n      ranges.push(selection.getRangeAt(i).cloneRange());\r\n    }\r\n    setSavedSelection(ranges);\r\n    return ranges;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Función para restaurar la selección guardada\r\nconst restoreSelection = (ranges = savedSelection) => {\r\n  if (!ranges) return false;\r\n  \r\n  const selection = window.getSelection();\r\n  selection.removeAllRanges();\r\n  \r\n  ranges.forEach(range => {\r\n    selection.addRange(range);\r\n  });\r\n  \r\n  return true;\r\n};\r\n\r\n// Función para verificar la selección de texto o si el editor está activo\r\nconst checkSelection = (event) => {\r\n  // Obtener la selección actual\r\n  const selection = window.getSelection();\r\n  \r\n  // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n  // independientemente del estado de escritura\r\n  const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n  \r\n  // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\r\n  if (isTyping && !hasTextSelection) return;\r\n  \r\n  try {\r\n    // Evitar ocultar la barra si estamos interactuando con elementos de la barra\r\n    if (\r\n      toolbarRef.current &&\r\n      (toolbarRef.current.contains(document.activeElement) ||\r\n       (event && toolbarRef.current.contains(event.target)))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Prevent hiding the toolbar if interacting with the font size menu\r\n    if (\r\n      fontSizeMenuRef.current &&\r\n      (fontSizeMenuRef.current.contains(document.activeElement) ||\r\n       (selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode)))\r\n    ) {\r\n      return;\r\n    }\r\n    \r\n    // Verificar si el editor está activo\r\n    const isEditorActive = editorRef.current === document.activeElement;\r\n    \r\n    // Verificar si tenemos una selección válida\r\n    const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n    \r\n    // Si ni el editor está activo ni hay selección, ocultar la barra\r\n    if (!isEditorActive && !hasSelection) {\r\n      setVisible(false);\r\n      setShowFontSizeMenu(false);\r\n      return;\r\n    }\r\n    \r\n    // Verificar si la selección o el cursor está dentro del editor\r\n    let isInEditor = false;\r\n    \r\n    if (isEditorActive) {\r\n      isInEditor = true;\r\n    } else if (hasSelection) {\r\n      const range = selection.getRangeAt(0);\r\n      let container = range.commonAncestorContainer;\r\n      \r\n      // Si el contenedor es un nodo de texto, obtener su elemento padre\r\n      if (container.nodeType === 3) {\r\n        container = container.parentNode;\r\n      }\r\n      \r\n      // Verificar si el contenedor o algún antecesor es el editor\r\n      let current = container;\r\n      \r\n      while (current && !isInEditor) {\r\n        if (current === editorRef.current) {\r\n          isInEditor = true;\r\n        }\r\n        current = current.parentNode;\r\n      }\r\n    }\r\n    \r\n    if (!isInEditor) {\r\n      setVisible(false);\r\n      setShowFontSizeMenu(false);\r\n      return;\r\n    }\r\n    \r\n    // Calcular la posición de la barra\r\n    calculateBarPosition(selection);\r\n    \r\n    setVisible(true);\r\n    \r\n    // Guardar la selección actual para poder restaurarla más tarde\r\n    saveSelection();\r\n  } catch (error) {\r\n    console.error('Error al verificar selección:', error);\r\n    setVisible(false);\r\n    setShowFontSizeMenu(false);\r\n  }\r\n};\r\n\r\n// Aplicar un tamaño de fuente específico\r\nconst applyFontSize = (size) => {\r\n  // Restaurar la selección antes de aplicar el formato\r\n  if (restoreSelection()) {\r\n    setFontSize(size); // Usar la función proporcionada por el componente padre\r\n  }\r\n  setShowFontSizeMenu(false);\r\n  setIsEditingFontSize(false);\r\n};\r\n\r\n// Maneja la entrada de texto para tamaño personalizado\r\nconst handleCustomFontSizeChange = (e) => {\r\n  // Solo permitir números y un punto decimal\r\n  const value = e.target.value.replace(/[^0-9.]/g, '');\r\n  // Evitar múltiples puntos decimales\r\n  if (value.split('.').length > 2) return;\r\n  \r\n  setCustomFontSize(value);\r\n};\r\n\r\n// Maneja cuando el usuario confirma un tamaño personalizado\r\nconst handleCustomFontSizeSubmit = (e) => {\r\n  e.preventDefault();\r\n  \r\n  if (customFontSize) {\r\n    const size = parseFloat(customFontSize);\r\n    // Validar que sea un número y esté en un rango razonable\r\n    if (!isNaN(size) && size >= 1 && size <= 500) {\r\n      applyFontSize(size);\r\n    }\r\n  }\r\n  \r\n  setIsEditingFontSize(false);\r\n};\r\n\r\n// Incrementar/decrementar tamaño de fuente\r\nconst changeFontSize = (increment) => {\r\n  // Restaurar la selección antes de cambiar el tamaño\r\n  if (restoreSelection()) {\r\n    const currentIndex = FONT_SIZES.indexOf(fontSize);\r\n    \r\n    if (increment && currentIndex < FONT_SIZES.length - 1) {\r\n      applyFontSize(FONT_SIZES[currentIndex + 1]);\r\n    } else if (!increment && currentIndex > 0) {\r\n      applyFontSize(FONT_SIZES[currentIndex - 1]);\r\n    }\r\n  }\r\n};\r\n\r\n// Activar el modo de edición de tamaño personalizado\r\nconst enableFontSizeEditing = (e) => {\r\n  e.stopPropagation(); // Evitar la propagación del evento\r\n  \r\n  // Guardar la selección actual si aún no se ha guardado\r\n  if (!savedSelection) {\r\n    saveSelection();\r\n  }\r\n  \r\n  setIsEditingFontSize(true);\r\n  setCustomFontSize(fontSize.toString());\r\n  setShowFontSizeMenu(false);\r\n  \r\n  // Enfocar el input después de que se haya renderizado\r\n  setTimeout(() => {\r\n    if (customFontInputRef.current) {\r\n      customFontInputRef.current.focus();\r\n      customFontInputRef.current.select();\r\n    }\r\n  }, 50);\r\n};\r\n\r\n// Toggle del menú de tamaños\r\nconst toggleFontSizeMenu = (e) => {\r\n  e.stopPropagation(); // Evitar la propagación del evento\r\n  \r\n  // Guardar la selección actual si aún no se ha guardado\r\n  if (!savedSelection) {\r\n    saveSelection();\r\n  }\r\n  \r\n  setShowFontSizeMenu(!showFontSizeMenu);\r\n};\r\n\r\n// Actualizar el estado local cuando cambia el tamaño de fuente recibido\r\nuseEffect(() => {\r\n  if (isEditingFontSize) {\r\n    setCustomFontSize(fontSize.toString());\r\n  }\r\n}, [fontSize, isEditingFontSize]);\r\n\r\n// Mostrar la barra al hacer clic en el editor\r\nuseEffect(() => {\r\n  const handleEditorClick = () => {\r\n    if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\r\n      checkSelection();\r\n    }\r\n  };\r\n  \r\n  if (editorRef.current) {\r\n    editorRef.current.addEventListener('click', handleEditorClick);\r\n  }\r\n  \r\n  return () => {\r\n    if (editorRef.current) {\r\n      editorRef.current.removeEventListener('click', handleEditorClick);\r\n    }\r\n  };\r\n}, [editorRef?.current, isTyping]);\r\n\r\n// Detectar cambios en la selección y en el foco del editor\r\nuseEffect(() => {\r\n  // No agregar event listeners si no hay editorRef\r\n  if (!editorRef || !editorRef.current) return;\r\n  \r\n  // Temporizador para controlar la visualización de la barra\r\n  let typingTimer;\r\n  \r\n  const handleKeyDown = (e) => {\r\n    // Marcar que estamos escribiendo\r\n    setIsTyping(true);\r\n    // Ocultar la barra inmediatamente al empezar a escribir\r\n    setVisible(false);\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n  };\r\n  \r\n  const handleInput = (e) => {\r\n    // Marcar que estamos escribiendo\r\n    setIsTyping(true);\r\n    // Asegurarse de que la barra está oculta mientras se escribe\r\n    setVisible(false);\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n  };\r\n  \r\n  const handleKeyUp = () => {\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n    // Configurar un nuevo temporizador\r\n    typingTimer = setTimeout(() => {\r\n      // Ya no estamos escribiendo\r\n      setIsTyping(false);\r\n      // Forzar la visualización de la barra después del tiempo de espera\r\n      const selection = window.getSelection();\r\n      \r\n      if (selection && editorRef.current) {\r\n        // Asegurarse de que el editor sigue teniendo el foco\r\n        if (editorRef.current === document.activeElement) {\r\n          try {\r\n            // Calcular la posición de forma segura\r\n            const editorRect = editorRef.current.getBoundingClientRect();\r\n            const range = selection.getRangeAt(0);\r\n            const rect = range.getBoundingClientRect();\r\n            \r\n            // Verificar que la selección está dentro del editor\r\n            if (\r\n              rect.top >= editorRect.top && \r\n              rect.bottom <= editorRect.bottom &&\r\n              rect.left >= editorRect.left &&\r\n              rect.right <= editorRect.right\r\n            ) {\r\n              // Solo si estamos dentro del editor, mostrar la barra\r\n              calculateBarPosition(selection);\r\n              setVisible(true);\r\n            } else {\r\n              // Si estamos fuera del editor, colocar en una posición segura dentro del editor\r\n              setPosition({\r\n                top: 30,\r\n                left: 50\r\n              });\r\n              setVisible(true);\r\n            }\r\n          } catch (e) {\r\n            console.error(\"Error al posicionar la barra:\", e);\r\n            // Posición por defecto dentro del editor\r\n            setPosition({\r\n              top: 30,\r\n              left: 50\r\n            });\r\n            setVisible(true);\r\n          }\r\n        }\r\n      }\r\n    }, 1500); // Esperar 1.5 segundos después de dejar de escribir\r\n  };\r\n  \r\n  // Deshabilitar temporalmente los eventos que podrían causar parpadeo\r\n  const handleSelectionChange = () => {\r\n    // Obtener la selección actual\r\n    const selection = window.getSelection();\r\n    \r\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n    \r\n    // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\r\n    if (hasTextSelection || !isTyping) {\r\n      checkSelection();\r\n    }\r\n  };\r\n  \r\n  document.addEventListener('selectionchange', handleSelectionChange);\r\n  editorRef.current.addEventListener('mouseup', handleSelectionChange);\r\n  editorRef.current.addEventListener('keydown', handleKeyDown);\r\n  editorRef.current.addEventListener('input', handleInput);\r\n  editorRef.current.addEventListener('keyup', handleKeyUp);\r\n  editorRef.current.addEventListener('focus', handleSelectionChange);\r\n  \r\n  // Limpiar event listeners\r\n  return () => {\r\n    document.removeEventListener('selectionchange', handleSelectionChange);\r\n    if (editorRef.current) {\r\n      editorRef.current.removeEventListener('mouseup', handleSelectionChange);\r\n      editorRef.current.removeEventListener('keydown', handleKeyDown);\r\n      editorRef.current.removeEventListener('input', handleInput);\r\n      editorRef.current.removeEventListener('keyup', handleKeyUp);\r\n      editorRef.current.removeEventListener('focus', handleSelectionChange);\r\n    }\r\n    clearTimeout(typingTimer);\r\n  };\r\n}, [editorRef?.current, isTyping]);\r\n\r\n// Cerrar el menú cuando se hace clic fuera\r\nuseEffect(() => {\r\n  const handleClickOutside = (event) => {\r\n    // Cerrar selector de tamaño\r\n    if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\r\n      setShowFontSizeMenu(false);\r\n    }\r\n    \r\n    // Cerrar selector de color si no se está haciendo clic en él o en su botón\r\n    if (showColorPicker && \r\n        colorButtonRef.current && \r\n        !colorButtonRef.current.contains(event.target) &&\r\n        !event.target.closest('.color-picker-container')) {\r\n      setShowColorPicker(false);\r\n    }\r\n  };\r\n  \r\n  document.addEventListener('mousedown', handleClickOutside);\r\n  return () => {\r\n    document.removeEventListener('mousedown', handleClickOutside);\r\n  };\r\n}, [showColorPicker]);\r\n\r\nreturn (\r\n  <div \r\n    ref={toolbarRef}\r\n    style={{\r\n      ...styles.floatingBar,\r\n      top: `${position.top}px`,\r\n      left: `${position.left}px`,\r\n      // Ya no transformamos con translateX(-50%) para evitar centrado\r\n    }}\r\n  >\r\n    {/* Formato de texto básico */}\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.bold)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('bold');\r\n      }}\r\n      onMouseEnter={() => showTooltip('bold')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <strong>B</strong>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'bold'}\r\n        text=\"Negrita\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n\r\n      style={styles.button(activeFormats.italic)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('italic');\r\n      }}\r\n      onMouseEnter={() => showTooltip('italic')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <em>Ｉ</em>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'italic'}\r\n        text=\"Cursiva\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.underline)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('underline');\r\n      }}\r\n      onMouseEnter={() => showTooltip('underline')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <u>U</u>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'underline'}\r\n        text=\"Subrayado\"\r\n      />\r\n    </button>\r\n    \r\n    <div style={styles.separator} />\r\n    \r\n    {/* Selector de tamaño de fuente tipo Word con opción personalizada */}\r\n    <div style={styles.sizeControls}>\r\n      {isEditingFontSize ? (\r\n        /* Campo de entrada para tamaño personalizado */\r\n        <form \r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleCustomFontSizeSubmit(e);\r\n          }} \r\n          style={{ display: 'flex', margin: '0 2px' }}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <input\r\n            ref={customFontInputRef}\r\n            type=\"text\"\r\n            value={customFontSize}\r\n            onChange={handleCustomFontSizeChange}\r\n            onBlur={(e) => {\r\n              // Permitir un poco de tiempo para que se procese el clic antes de cerrar\r\n              setTimeout(() => {\r\n                handleCustomFontSizeSubmit(e);\r\n              }, 100);\r\n            }}\r\n            style={styles.fontSizeInput}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n        </form>\r\n      ) : (\r\n        /* Botón de tamaño actual con desplegable */\r\n        <div style={{ position: 'relative' }}>\r\n          <button\r\n            type=\"button\"\r\n            style={styles.fontSizeButton}\r\n            onClick={enableFontSizeEditing} // Al hacer clic directo, abre el editor de tamaño personalizado\r\n            onDoubleClick={toggleFontSizeMenu} // Doble clic muestra el menú\r\n            onMouseEnter={() => showTooltip('fontSize')}\r\n            onMouseLeave={hideTooltip}\r\n          >\r\n            {fontSize}\r\n            <Tooltip\r\n              isVisible={activeTooltip === 'fontSize'}\r\n              text=\"Tamaño de fuente\"\r\n            />\r\n          </button>\r\n          \r\n          {/* Menú desplegable con tamaños predefinidos */}\r\n          <div \r\n            ref={fontSizeMenuRef}\r\n            style={styles.fontSizeMenu}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {FONT_SIZES.map(size => (\r\n              <div\r\n                key={size}\r\n                style={{\r\n                  ...styles.fontSizeItem,\r\n                  backgroundColor: fontSize === size \r\n                    ? 'rgba(43, 87, 154, 0.1)' \r\n                    : 'transparent',\r\n                  fontWeight: fontSize === size ? 'bold' : 'normal'\r\n                }}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  applyFontSize(size);\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  if (fontSize !== size) {\r\n                    e.currentTarget.style.backgroundColor = 'transparent';\r\n                  }\r\n                }}\r\n              >\r\n                {size}\r\n              </div>\r\n            ))}\r\n            {/* Opción de tamaño personalizado */}\r\n            <div\r\n              style={styles.customOption}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                enableFontSizeEditing(e);\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'transparent';\r\n              }}\r\n            >\r\n              Personalizado\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Controles de incremento/decremento */}\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          style={styles.incrementButton}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            changeFontSize(true);\r\n          }}\r\n          onMouseEnter={() => showTooltip('increaseFontSize')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ color: '#0b4444' }}>▲</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'increaseFontSize'}\r\n            text=\"Aumentar tamaño\"\r\n          />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          style={styles.incrementButton}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            changeFontSize(false);\r\n          }}\r\n          onMouseEnter={() => showTooltip('decreaseFontSize')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ color: '#0b4444' }}>▼</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'decreaseFontSize'}\r\n            text=\"Reducir tamaño\"\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div style={styles.separator} />\r\n    \r\n    {/* Botón de color de texto con ícono dinámico */}\r\n    <div style={{ position: 'relative' }}>\r\n      <button \r\n        ref={colorButtonRef}\r\n        type=\"button\"\r\n        style={styles.colorButton(showColorPicker)}\r\n        onClick={handleColorButtonClick}\r\n        onMouseEnter={() => showTooltip('textColor')}\r\n        onMouseLeave={hideTooltip}\r\n      >\r\n        <div style={styles.colorIconContainer}>\r\n          <span style={styles.colorIcon}>】【</span>\r\n        </div>\r\n        <Tooltip\r\n          isVisible={activeTooltip === 'textColor'}\r\n          text=\"Color de texto\"\r\n        />\r\n      </button>\r\n      \r\n      {/* Componente selector de color */}\r\n      {showColorPicker && (\r\n        <div className=\"color-picker-container\">\r\n          <ColorPicker \r\n            onSelectColor={applyTextColor}\r\n            onCloseColorPicker={closeColorPicker}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n    \r\n    {/* Opciones de formato avanzadas */}\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.unorderedList)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('unorderedList');\r\n      }}\r\n      onMouseEnter={() => showTooltip('unorderedList')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      •\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'unorderedList'}\r\n        text=\"Lista con viñetas\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.link)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('link');\r\n      }}\r\n      onMouseEnter={() => showTooltip('link')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <img src=\"/assets/images/icons/LINK_icon.png\" style={styles.iconImage} />\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'link'}\r\n        text=\"Insertar enlace\"\r\n      />\r\n    </button>\r\n    \r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(false)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('image');\r\n      }}\r\n      onMouseEnter={() => showTooltip('image')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <img src=\"/assets/images/icons/IMG_icon.png\"  style={styles.iconImage} />\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'image'}\r\n        text=\"Insertar imagen\"\r\n      />\r\n    </button>\r\n  </div>\r\n);\r\n}\r\nexport default FloatingToolbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}