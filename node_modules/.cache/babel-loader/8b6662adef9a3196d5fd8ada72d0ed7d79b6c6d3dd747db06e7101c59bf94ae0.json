{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\SyntaxHighlighter.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/SyntaxHighlighter.jsx\n\nimport React, { useEffect, useRef } from 'react';\nimport { applySyntaxHighlighting, syntaxHighlightingStyles } from './utils/syntaxHighlighting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyntaxHighlighter = ({\n  content,\n  onChange,\n  textAreaRef\n}) => {\n  _s();\n  const highlighterRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // [Mantener la mayoría del código existente, pero quitar referencias a modo 'markdown']\n\n  // Sincronizar scroll entre el textArea y el resaltador\n  const syncScroll = () => {\n    if (highlighterRef.current && textAreaRef.current) {\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\n    }\n  };\n\n  // Actualizar el contenido resaltado cuando cambia el contenido\n  useEffect(() => {\n    if (highlighterRef.current && textAreaRef.current) {\n      try {\n        // Aplicar el resaltado de sintaxis\n        const highlightedContent = applySyntaxHighlighting(content, 'html');\n        highlighterRef.current.innerHTML = highlightedContent;\n\n        // Configurar event listeners\n        textAreaRef.current.addEventListener('scroll', syncScroll);\n      } catch (error) {\n        console.error(\"Error applying syntax highlighting:\", error);\n      }\n\n      // Limpiar event listeners\n      return () => {\n        if (textAreaRef.current) {\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\n        }\n      };\n    }\n  }, [content]);\n\n  // [Mantener el resto del archivo...]\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: syntaxHighlightingStyles\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: highlighterRef,\n      className: \"syntax-highlight-editor\",\n      style: styles.highlighter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textAreaRef,\n      value: content,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      onScroll: syncScroll,\n      style: styles.textarea,\n      spellCheck: \"false\",\n      placeholder: \"Escribe c\\xF3digo HTML aqu\\xED...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SyntaxHighlighter, \"Xd0m4KXWVq9wjYwweA1FMrQUCSI=\");\n_c = SyntaxHighlighter;\nexport default SyntaxHighlighter;\nvar _c;\n$RefreshReg$(_c, \"SyntaxHighlighter\");","map":{"version":3,"names":["React","useEffect","useRef","applySyntaxHighlighting","syntaxHighlightingStyles","jsxDEV","_jsxDEV","SyntaxHighlighter","content","onChange","textAreaRef","_s","highlighterRef","containerRef","syncScroll","current","scrollTop","scrollLeft","highlightedContent","innerHTML","addEventListener","error","console","removeEventListener","ref","style","styles","container","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","className","highlighter","value","handleChange","onKeyDown","handleKeyDown","onScroll","textarea","spellCheck","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/SyntaxHighlighter.jsx"],"sourcesContent":["// src/components/admin/SyntaxHighlighter.jsx\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { applySyntaxHighlighting, syntaxHighlightingStyles } from './utils/syntaxHighlighting';\r\n\r\nconst SyntaxHighlighter = ({ content, onChange, textAreaRef }) => {\r\n  const highlighterRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  // [Mantener la mayoría del código existente, pero quitar referencias a modo 'markdown']\r\n  \r\n  // Sincronizar scroll entre el textArea y el resaltador\r\n  const syncScroll = () => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\r\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\r\n    }\r\n  };\r\n\r\n  // Actualizar el contenido resaltado cuando cambia el contenido\r\n  useEffect(() => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      try {\r\n        // Aplicar el resaltado de sintaxis\r\n        const highlightedContent = applySyntaxHighlighting(content, 'html');\r\n        highlighterRef.current.innerHTML = highlightedContent;\r\n        \r\n        // Configurar event listeners\r\n        textAreaRef.current.addEventListener('scroll', syncScroll);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error applying syntax highlighting:\", error);\r\n      }\r\n      \r\n      // Limpiar event listeners\r\n      return () => {\r\n        if (textAreaRef.current) {\r\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\r\n        }\r\n      };\r\n    }\r\n  }, [content]);\r\n\r\n  // [Mantener el resto del archivo...]\r\n\r\n  return (\r\n    <div ref={containerRef} style={styles.container}>\r\n      {/* Estilos para el resaltado de sintaxis */}\r\n      <style dangerouslySetInnerHTML={{ __html: syntaxHighlightingStyles }} />\r\n      \r\n      {/* Capa de resaltado (solo visual) */}\r\n      <pre \r\n        ref={highlighterRef}\r\n        className=\"syntax-highlight-editor\"\r\n        style={styles.highlighter}\r\n      />\r\n      \r\n      {/* Textarea para edición (visible pero con texto transparente) */}\r\n      <textarea\r\n        ref={textAreaRef}\r\n        value={content}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        onScroll={syncScroll}\r\n        style={styles.textarea}\r\n        spellCheck=\"false\"\r\n        placeholder=\"Escribe código HTML aquí...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SyntaxHighlighter;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,uBAAuB,EAAEC,wBAAwB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/F,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMW,YAAY,GAAGX,MAAM,CAAC,IAAI,CAAC;;EAEjC;;EAEA;EACA,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,cAAc,CAACG,OAAO,IAAIL,WAAW,CAACK,OAAO,EAAE;MACjDH,cAAc,CAACG,OAAO,CAACC,SAAS,GAAGN,WAAW,CAACK,OAAO,CAACC,SAAS;MAChEJ,cAAc,CAACG,OAAO,CAACE,UAAU,GAAGP,WAAW,CAACK,OAAO,CAACE,UAAU;IACpE;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIW,cAAc,CAACG,OAAO,IAAIL,WAAW,CAACK,OAAO,EAAE;MACjD,IAAI;QACF;QACA,MAAMG,kBAAkB,GAAGf,uBAAuB,CAACK,OAAO,EAAE,MAAM,CAAC;QACnEI,cAAc,CAACG,OAAO,CAACI,SAAS,GAAGD,kBAAkB;;QAErD;QACAR,WAAW,CAACK,OAAO,CAACK,gBAAgB,CAAC,QAAQ,EAAEN,UAAU,CAAC;MAE5D,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;;MAEA;MACA,OAAO,MAAM;QACX,IAAIX,WAAW,CAACK,OAAO,EAAE;UACvBL,WAAW,CAACK,OAAO,CAACQ,mBAAmB,CAAC,QAAQ,EAAET,UAAU,CAAC;QAC/D;MACF,CAAC;IACH;EACF,CAAC,EAAE,CAACN,OAAO,CAAC,CAAC;;EAEb;;EAEA,oBACEF,OAAA;IAAKkB,GAAG,EAAEX,YAAa;IAACY,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAE9CtB,OAAA;MAAOuB,uBAAuB,EAAE;QAAEC,MAAM,EAAE1B;MAAyB;IAAE;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGxE5B,OAAA;MACEkB,GAAG,EAAEZ,cAAe;MACpBuB,SAAS,EAAC,yBAAyB;MACnCV,KAAK,EAAEC,MAAM,CAACU;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAGF5B,OAAA;MACEkB,GAAG,EAAEd,WAAY;MACjB2B,KAAK,EAAE7B,OAAQ;MACfC,QAAQ,EAAE6B,YAAa;MACvBC,SAAS,EAAEC,aAAc;MACzBC,QAAQ,EAAE3B,UAAW;MACrBW,KAAK,EAAEC,MAAM,CAACgB,QAAS;MACvBC,UAAU,EAAC,OAAO;MAClBC,WAAW,EAAC;IAA6B;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjEIJ,iBAAiB;AAAAsC,EAAA,GAAjBtC,iBAAiB;AAmEvB,eAAeA,iBAAiB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}