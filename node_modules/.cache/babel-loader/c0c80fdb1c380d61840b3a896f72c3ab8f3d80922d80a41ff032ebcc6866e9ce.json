{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\FloatingToolbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport Tooltip from '../ui/Tooltip';\nimport ColorPicker from './ColorPicker'; // Importamos el componente ColorPicker\n\n// Tamaños de fuente predeterminados como en Word\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 120];\n\n// FloatingToolbar - Barra de herramientas flotante mejorada para edición de texto\nconst FloatingToolbar = ({\n  onFormatText,\n  activeFormats,\n  editorRef,\n  fontSize,\n  setFontSize\n}) => {\n  _s();\n  // Estados del componente\n  const [visible, setVisible] = useState(false);\n  const [position, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\n  const [customFontSize, setCustomFontSize] = useState('');\n  const [isEditingFontSize, setIsEditingFontSize] = useState(false);\n  const [savedSelection, setSavedSelection] = useState(null);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Estados para el selector de color\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [currentIconColor, setCurrentIconColor] = useState(() => {\n    try {\n      // Intentar recuperar el último color usado\n      const lastUsedColor = localStorage.getItem('lastUsedTextColor');\n      return lastUsedColor || '#0b4444';\n    } catch (e) {\n      return '#0b4444';\n    }\n  });\n\n  // Estados para animaciones\n  const [animateButton, setAnimateButton] = useState(null);\n\n  // Referencias\n  const toolbarRef = useRef(null);\n  const fontSizeMenuRef = useRef(null);\n  const customFontInputRef = useRef(null);\n  const colorButtonRef = useRef(null);\n\n  // Mostrar tooltip\n  const showTooltip = id => {\n    setActiveTooltip(id);\n  };\n\n  // Ocultar tooltip\n  const hideTooltip = () => {\n    setActiveTooltip(null);\n  };\n\n  // Animar botón cuando se hace clic\n  const animateButtonClick = buttonId => {\n    setAnimateButton(buttonId);\n    setTimeout(() => setAnimateButton(null), 300);\n  };\n\n  // Manejar clic en el botón de color\n  const handleColorButtonClick = () => {\n    // Guardar la selección actual antes de abrir el color picker\n    saveSelection();\n    animateButtonClick('color');\n    // Mostrar u ocultar el selector de color\n    setShowColorPicker(!showColorPicker);\n    // Ocultar otros menús\n    setShowFontSizeMenu(false);\n  };\n\n  // Aplicar color seleccionado y guardarlo automáticamente\n  const applyTextColor = color => {\n    if (restoreSelection()) {\n      try {\n        document.execCommand('foreColor', false, color);\n        setShowColorPicker(false);\n        // Actualizar el color del ícono al color seleccionado\n        setCurrentIconColor(color);\n        // Guardar el último color usado para mantener sincronización\n        try {\n          localStorage.setItem('lastUsedTextColor', color);\n        } catch (e) {\n          console.warn('No se pudo guardar el último color usado:', e);\n        }\n\n        // Guardar automáticamente el color en localStorage (excepto los predeterminados)\n        const defaultColors = ['#91a8a4', '#0b4444', '#4c7977', '#f0f8f7', '#d2b99a'];\n        if (!defaultColors.includes(color)) {\n          try {\n            // Recuperar colores guardados\n            const storedColorsStr = localStorage.getItem('savedTextColors');\n            let storedColors = defaultColors;\n            if (storedColorsStr) {\n              try {\n                const parsed = JSON.parse(storedColorsStr);\n                if (Array.isArray(parsed) && parsed.length > 0) {\n                  storedColors = parsed;\n                }\n              } catch (e) {\n                console.warn('Error al parsear colores guardados:', e);\n              }\n            }\n\n            // Verificar si el color ya existe\n            if (!storedColors.includes(color)) {\n              // Mantener solo los últimos 5 colores\n              if (storedColors.length >= 5) {\n                storedColors.shift();\n              }\n              storedColors.push(color);\n              localStorage.setItem('savedTextColors', JSON.stringify(storedColors));\n            }\n          } catch (e) {\n            console.warn('Error al guardar color:', e);\n          }\n        }\n      } catch (e) {\n        console.error('Error al aplicar color:', e);\n        // En caso de error, usar un color predeterminado\n        document.execCommand('foreColor', false, '#0b4444');\n        setCurrentIconColor('#0b4444');\n      }\n    }\n  };\n\n  // Cerrar el selector de color\n  const closeColorPicker = () => {\n    setShowColorPicker(false);\n  };\n\n  // Obtener color de contraste para texto basado en color de fondo\n  const getContrastColor = hexColor => {\n    // Convertir hex a RGB\n    const r = parseInt(hexColor.substring(1, 3), 16);\n    const g = parseInt(hexColor.substring(3, 5), 16);\n    const b = parseInt(hexColor.substring(5, 7), 16);\n\n    // Calcular luminosidad\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\n\n    // Retornar blanco o negro según la luminosidad del color de fondo\n    return luminance > 0.5 ? '#000000' : '#ffffff';\n  };\n\n  // Estilos para la barra de herramientas\n  const styles = {\n    floatingBar: {\n      position: 'absolute',\n      zIndex: 1000,\n      display: visible ? 'flex' : 'none',\n      alignItems: 'center',\n      backgroundColor: 'rgb(245, 247, 250)',\n      borderRadius: '12px',\n      padding: '8px 10px',\n      boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15), 0 1px 3px rgba(0, 0, 0, 0.08)',\n      transition: 'opacity 0.3s ease, transform 0.3s ease',\n      opacity: visible ? 1 : 0,\n      transform: visible ? 'translateY(0)' : 'translateY(10px)',\n      gap: '3px',\n      border: '1px solid rgba(200, 210, 220, 0.5)',\n      backdropFilter: 'blur(8px)'\n    },\n    button: (isActive, buttonId) => ({\n      background: 'none',\n      border: 'none',\n      borderRadius: '8px',\n      padding: '7px',\n      margin: '0 2px',\n      fontSize: '15px',\n      cursor: 'pointer',\n      color: isActive ? '#1b4fd9' : '#0b4444',\n      backgroundColor: isActive ? 'rgba(43, 87, 154, 0.12)' : 'transparent',\n      transition: 'all 0.2s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '32px',\n      height: '32px',\n      position: 'relative',\n      transform: animateButton === buttonId ? 'scale(0.92)' : 'scale(1)',\n      boxShadow: isActive ? '0 1px 3px rgba(0, 0, 0, 0.05) inset' : 'none'\n    }),\n    colorButton: showingPicker => ({\n      background: 'none',\n      border: 'none',\n      borderRadius: '8px',\n      padding: '7px',\n      margin: '0 2px',\n      fontSize: '15px',\n      cursor: 'pointer',\n      color: '#0b4444',\n      backgroundColor: showingPicker ? 'rgba(43, 87, 154, 0.12)' : 'transparent',\n      transition: 'all 0.2s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '32px',\n      height: '32px',\n      position: 'relative',\n      transform: animateButton === 'color' ? 'scale(0.92)' : 'scale(1)',\n      boxShadow: showingPicker ? '0 1px 3px rgba(0, 0, 0, 0.05) inset' : 'none'\n    }),\n    fontSizeButton: {\n      display: 'flex',\n      alignItems: 'center',\n      background: 'white',\n      border: '1px solid #dfe3e8',\n      borderRadius: '8px',\n      padding: '4px 10px',\n      margin: '0 3px',\n      fontSize: '14px',\n      cursor: 'pointer',\n      color: '#333333',\n      fontWeight: 'normal',\n      transition: 'all 0.2s ease',\n      position: 'relative',\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.04)',\n      minWidth: '40px',\n      textAlign: 'center',\n      transform: animateButton === 'fontSize' ? 'scale(0.95)' : 'scale(1)'\n    },\n    fontSizeInput: {\n      width: '40px',\n      border: '1px solid #dfe3e8',\n      borderRadius: '6px',\n      padding: '5px',\n      fontSize: '14px',\n      color: '#333333',\n      textAlign: 'center',\n      outline: 'none',\n      backgroundColor: 'white',\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.05) inset'\n    },\n    fontSizeMenu: {\n      position: 'absolute',\n      top: '100%',\n      left: '0',\n      backgroundColor: 'white',\n      border: '1px solid #dfe3e8',\n      borderRadius: '8px',\n      boxShadow: '0 6px 16px rgba(0, 0, 0, 0.12)',\n      maxHeight: '300px',\n      overflow: 'auto',\n      zIndex: 1001,\n      display: showFontSizeMenu ? 'block' : 'none',\n      marginTop: '5px',\n      width: '60px',\n      animation: showFontSizeMenu ? 'fadeIn 0.2s ease' : 'none'\n    },\n    fontSizeItem: {\n      padding: '8px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      transition: 'background-color 0.2s',\n      textAlign: 'center',\n      color: '#0b4444',\n      fontSize: '14px'\n    },\n    customOption: {\n      borderTop: '1px solid #ebeef2',\n      fontStyle: 'italic',\n      padding: '8px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      textAlign: 'center',\n      color: '#1b4fd9',\n      fontSize: '13px'\n    },\n    separator: {\n      width: '1px',\n      height: '24px',\n      margin: '0 6px',\n      backgroundColor: '#dfe3e8'\n    },\n    sizeControls: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    incrementButton: {\n      background: 'none',\n      border: 'none',\n      padding: '5px',\n      cursor: 'pointer',\n      color: '#2B579A',\n      fontSize: '14px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '6px',\n      position: 'relative',\n      transition: 'all 0.2s ease',\n      transform: animateButton === 'increaseSize' || animateButton === 'decreaseSize' ? 'scale(0.9)' : 'scale(1)'\n    },\n    colorIconContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      position: 'relative',\n      width: '20px',\n      height: '20px',\n      borderRadius: '4px',\n      backgroundColor: currentIconColor,\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\n      transition: 'transform 0.3s ease'\n    },\n    colorIcon: {\n      fontSize: '14px',\n      fontWeight: 'bold',\n      color: getContrastColor(currentIconColor),\n      transition: 'all 0.3s ease'\n    },\n    iconImage: {\n      width: '16px',\n      height: '16px',\n      objectFit: 'contain'\n    }\n  };\n\n  // Estilos CSS para animaciones\n  const cssAnimation = `\n    @keyframes fadeIn {\n      from { opacity: 0; transform: translateY(-5px); }\n      to { opacity: 1; transform: translateY(0); }\n    }\n    \n    @keyframes pulse {\n      0% { transform: scale(1); }\n      50% { transform: scale(0.95); }\n      100% { transform: scale(1); }\n    }\n  `;\n\n  // Función para calcular la posición de la barra\n  const calculateBarPosition = selection => {\n    if (!editorRef.current) return;\n\n    // Calcular la posición de la barra\n    const editorRect = editorRef.current.getBoundingClientRect();\n\n    // Calculamos la altura de la barra (se estima en 50px si aún no está renderizada)\n    const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 50;\n    // Calculamos el ancho de la barra (se estima en 320px si aún no está renderizada)\n    const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 320;\n    let newPosition;\n\n    // Determinar la línea en la que está el cursor (primera línea o no)\n    const range = selection.getRangeAt(0);\n    const rect = range.getBoundingClientRect();\n    const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\n\n    // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\n    const lineHeight = 22; // Altura estimada de la línea de texto\n\n    const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n    if (hasSelection) {\n      // Si hay selección, posicionar debajo de la selección\n      if (rect.width === 0) {\n        return;\n      }\n      newPosition = {\n        // Posicionamos la barra debajo de la línea de texto\n        top: rect.bottom - editorRect.top + 10,\n        // Alineamos con el inicio de la selección\n        left: rect.left - editorRect.left\n      };\n    } else {\n      // Si solo está activo el editor sin selección\n      const isNearLeftEdge = rect.left < editorRect.left + 50;\n\n      // Siempre colocar la barra debajo del cursor\n      newPosition = {\n        top: rect.bottom - editorRect.top + 10,\n        // Debajo del cursor\n        left: rect.left - editorRect.left // Alineado con el cursor\n      };\n\n      // Si no tenemos dimensiones válidas, usar posición por defecto dentro del editor\n      if (rect.width === 0 && rect.height === 0) {\n        newPosition = {\n          top: 30 + lineHeight,\n          // Debajo de la primera línea\n          left: 50 // Desde el borde izquierdo\n        };\n      }\n    }\n\n    // CRÍTICO: Asegurar que la barra siempre está DENTRO del editor\n    // 1. Comprobar límites verticales\n    if (newPosition.top < 0) {\n      // Si la posición es negativa, colocar al inicio del editor\n      newPosition.top = 10;\n    }\n    const editorHeight = editorRef.current.offsetHeight;\n    if (newPosition.top + toolbarHeight > editorHeight) {\n      // Si la barra se saldría por abajo, colocar más arriba\n      newPosition.top = editorHeight - toolbarHeight - 10;\n    }\n\n    // 2. Comprobar límites horizontales\n    if (newPosition.left < 10) {\n      newPosition.left = 10;\n    }\n    const editorWidth = editorRef.current.offsetWidth;\n    if (newPosition.left + toolbarWidth > editorWidth) {\n      newPosition.left = editorWidth - toolbarWidth - 10;\n    }\n\n    // 3. Comprobar que la posición es válida\n    newPosition.top = Math.max(0, newPosition.top);\n    newPosition.left = Math.max(0, newPosition.left);\n    setPosition(newPosition);\n  };\n\n  // Función para guardar la selección actual\n  const saveSelection = () => {\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      const ranges = [];\n      for (let i = 0; i < selection.rangeCount; i++) {\n        ranges.push(selection.getRangeAt(i).cloneRange());\n      }\n      setSavedSelection(ranges);\n      return ranges;\n    }\n    return null;\n  };\n\n  // Función para restaurar la selección guardada\n  const restoreSelection = (ranges = savedSelection) => {\n    if (!ranges) return false;\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    ranges.forEach(range => {\n      selection.addRange(range);\n    });\n    return true;\n  };\n\n  // Función para verificar la selección de texto o si el editor está activo\n  const checkSelection = event => {\n    // Obtener la selección actual\n    const selection = window.getSelection();\n\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n    // independientemente del estado de escritura\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n    // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\n    if (isTyping && !hasTextSelection) return;\n    try {\n      // Evitar ocultar la barra si estamos interactuando con elementos de la barra\n      if (toolbarRef.current && (toolbarRef.current.contains(document.activeElement) || event && toolbarRef.current.contains(event.target))) {\n        return;\n      }\n\n      // Prevent hiding the toolbar if interacting with the font size menu\n      if (fontSizeMenuRef.current && (fontSizeMenuRef.current.contains(document.activeElement) || selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode))) {\n        return;\n      }\n\n      // Verificar si el editor está activo\n      const isEditorActive = editorRef.current === document.activeElement;\n\n      // Verificar si tenemos una selección válida\n      const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n\n      // Si ni el editor está activo ni hay selección, ocultar la barra\n      if (!isEditorActive && !hasSelection) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Verificar si la selección o el cursor está dentro del editor\n      let isInEditor = false;\n      if (isEditorActive) {\n        isInEditor = true;\n      } else if (hasSelection) {\n        const range = selection.getRangeAt(0);\n        let container = range.commonAncestorContainer;\n\n        // Si el contenedor es un nodo de texto, obtener su elemento padre\n        if (container.nodeType === 3) {\n          container = container.parentNode;\n        }\n\n        // Verificar si el contenedor o algún antecesor es el editor\n        let current = container;\n        while (current && !isInEditor) {\n          if (current === editorRef.current) {\n            isInEditor = true;\n          }\n          current = current.parentNode;\n        }\n      }\n      if (!isInEditor) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Calcular la posición de la barra\n      calculateBarPosition(selection);\n      setVisible(true);\n\n      // Guardar la selección actual para poder restaurarla más tarde\n      saveSelection();\n    } catch (error) {\n      console.error('Error al verificar selección:', error);\n      setVisible(false);\n      setShowFontSizeMenu(false);\n    }\n  };\n\n  // Aplicar un tamaño de fuente específico\n  const applyFontSize = size => {\n    // Restaurar la selección antes de aplicar el formato\n    if (restoreSelection()) {\n      setFontSize(size); // Usar la función proporcionada por el componente padre\n      animateButtonClick('fontSize');\n    }\n    setShowFontSizeMenu(false);\n    setIsEditingFontSize(false);\n  };\n\n  // Maneja la entrada de texto para tamaño personalizado\n  const handleCustomFontSizeChange = e => {\n    // Solo permitir números y un punto decimal\n    const value = e.target.value.replace(/[^0-9.]/g, '');\n    // Evitar múltiples puntos decimales\n    if (value.split('.').length > 2) return;\n    setCustomFontSize(value);\n  };\n\n  // Maneja cuando el usuario confirma un tamaño personalizado\n  const handleCustomFontSizeSubmit = e => {\n    e.preventDefault();\n    if (customFontSize) {\n      const size = parseFloat(customFontSize);\n      // Validar que sea un número y esté en un rango razonable\n      if (!isNaN(size) && size >= 1 && size <= 500) {\n        applyFontSize(size);\n      }\n    }\n    setIsEditingFontSize(false);\n  };\n\n  // Incrementar/decrementar tamaño de fuente\n  const changeFontSize = increment => {\n    // Restaurar la selección antes de cambiar el tamaño\n    if (restoreSelection()) {\n      const currentIndex = FONT_SIZES.indexOf(fontSize);\n      if (increment && currentIndex < FONT_SIZES.length - 1) {\n        applyFontSize(FONT_SIZES[currentIndex + 1]);\n        animateButtonClick('increaseSize');\n      } else if (!increment && currentIndex > 0) {\n        applyFontSize(FONT_SIZES[currentIndex - 1]);\n        animateButtonClick('decreaseSize');\n      }\n    }\n  };\n\n  // Activar el modo de edición de tamaño personalizado\n  const enableFontSizeEditing = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setIsEditingFontSize(true);\n    setCustomFontSize(fontSize.toString());\n    setShowFontSizeMenu(false);\n    animateButtonClick('fontSize');\n\n    // Enfocar el input después de que se haya renderizado\n    setTimeout(() => {\n      if (customFontInputRef.current) {\n        customFontInputRef.current.focus();\n        customFontInputRef.current.select();\n      }\n    }, 50);\n  };\n\n  // Toggle del menú de tamaños\n  const toggleFontSizeMenu = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setShowFontSizeMenu(!showFontSizeMenu);\n    animateButtonClick('fontSize');\n  };\n\n  // Actualizar el estado local cuando cambia el tamaño de fuente recibido\n  useEffect(() => {\n    if (isEditingFontSize) {\n      setCustomFontSize(fontSize.toString());\n    }\n  }, [fontSize, isEditingFontSize]);\n\n  // Mostrar la barra al hacer clic en el editor\n  useEffect(() => {\n    const handleEditorClick = () => {\n      if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\n        checkSelection();\n      }\n    };\n    if (editorRef.current) {\n      editorRef.current.addEventListener('click', handleEditorClick);\n    }\n    return () => {\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('click', handleEditorClick);\n      }\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Detectar cambios en la selección y en el foco del editor\n  useEffect(() => {\n    // No agregar event listeners si no hay editorRef\n    if (!editorRef || !editorRef.current) return;\n\n    // Temporizador para controlar la visualización de la barra\n    let typingTimer;\n    const handleKeyDown = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Ocultar la barra inmediatamente al empezar a escribir\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleInput = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Asegurarse de que la barra está oculta mientras se escribe\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleKeyUp = () => {\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n      // Configurar un nuevo temporizador\n      typingTimer = setTimeout(() => {\n        // Ya no estamos escribiendo\n        setIsTyping(false);\n        // Forzar la visualización de la barra después del tiempo de espera\n        const selection = window.getSelection();\n        if (selection && editorRef.current) {\n          // Asegurarse de que el editor sigue teniendo el foco\n          if (editorRef.current === document.activeElement) {\n            try {\n              // Calcular la posición de forma segura\n              const editorRect = editorRef.current.getBoundingClientRect();\n              const range = selection.getRangeAt(0);\n              const rect = range.getBoundingClientRect();\n\n              // Verificar que la selección está dentro del editor\n              if (rect.top >= editorRect.top && rect.bottom <= editorRect.bottom && rect.left >= editorRect.left && rect.right <= editorRect.right) {\n                // Solo si estamos dentro del editor, mostrar la barra\n                calculateBarPosition(selection);\n                setVisible(true);\n              } else {\n                // Si estamos fuera del editor, colocar en una posición segura dentro del editor\n                setPosition({\n                  top: 30,\n                  left: 50\n                });\n                setVisible(true);\n              }\n            } catch (e) {\n              console.error(\"Error al posicionar la barra:\", e);\n              // Posición por defecto dentro del editor\n              setPosition({\n                top: 30,\n                left: 50\n              });\n              setVisible(true);\n            }\n          }\n        }\n      }, 1500); // Esperar 1.5 segundos después de dejar de escribir\n    };\n\n    // Deshabilitar temporalmente los eventos que podrían causar parpadeo\n    const handleSelectionChange = () => {\n      // Obtener la selección actual\n      const selection = window.getSelection();\n\n      // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n      const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n      // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\n      if (hasTextSelection || !isTyping) {\n        checkSelection();\n      }\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    editorRef.current.addEventListener('mouseup', handleSelectionChange);\n    editorRef.current.addEventListener('keydown', handleKeyDown);\n    editorRef.current.addEventListener('input', handleInput);\n    editorRef.current.addEventListener('keyup', handleKeyUp);\n    editorRef.current.addEventListener('focus', handleSelectionChange);\n\n    // Limpiar event listeners\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('mouseup', handleSelectionChange);\n        editorRef.current.removeEventListener('keydown', handleKeyDown);\n        editorRef.current.removeEventListener('input', handleInput);\n        editorRef.current.removeEventListener('keyup', handleKeyUp);\n        editorRef.current.removeEventListener('focus', handleSelectionChange);\n      }\n      clearTimeout(typingTimer);\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Cerrar el menú cuando se hace clic fuera\n  useEffect(() => {\n    const handleClickOutside = event => {\n      // Cerrar selector de tamaño\n      if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\n        setShowFontSizeMenu(false);\n      }\n\n      // Cerrar selector de color si no se está haciendo clic en él o en su botón\n      if (showColorPicker && colorButtonRef.current && !colorButtonRef.current.contains(event.target) && !event.target.closest('.color-picker-container')) {\n        setShowColorPicker(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showColorPicker]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: cssAnimation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: toolbarRef,\n      style: {\n        ...styles.floatingBar,\n        top: `${position.top}px`,\n        left: `${position.left}px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(activeFormats.bold, 'bold'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('bold');\n          animateButtonClick('bold');\n        },\n        onMouseEnter: () => showTooltip('bold'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'bold',\n          text: \"Negrita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(activeFormats.italic, 'italic'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('italic');\n          animateButtonClick('italic');\n        },\n        onMouseEnter: () => showTooltip('italic'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'italic',\n          text: \"Cursiva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(activeFormats.underline, 'underline'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('underline');\n          animateButtonClick('underline');\n        },\n        onMouseEnter: () => showTooltip('underline'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'underline',\n          text: \"Subrayado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.separator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sizeControls,\n        children: [isEditingFontSize ?\n        /*#__PURE__*/\n        /* Campo de entrada para tamaño personalizado */\n        _jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleCustomFontSizeSubmit(e);\n          },\n          style: {\n            display: 'flex',\n            margin: '0 2px'\n          },\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: customFontInputRef,\n            type: \"text\",\n            value: customFontSize,\n            onChange: handleCustomFontSizeChange,\n            onBlur: e => {\n              // Permitir un poco de tiempo para que se procese el clic antes de cerrar\n              setTimeout(() => {\n                handleCustomFontSizeSubmit(e);\n              }, 100);\n            },\n            style: styles.fontSizeInput,\n            onClick: e => e.stopPropagation()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        /* Botón de tamaño actual con desplegable */\n        _jsxDEV(\"div\", {\n          style: {\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: styles.fontSizeButton,\n            onClick: enableFontSizeEditing // Al hacer clic directo, abre el editor de tamaño personalizado\n            ,\n            onDoubleClick: toggleFontSizeMenu // Doble clic muestra el menú\n            ,\n            onMouseEnter: () => showTooltip('fontSize'),\n            onMouseLeave: hideTooltip,\n            children: [fontSize, /*#__PURE__*/_jsxDEV(Tooltip, {\n              isVisible: activeTooltip === 'fontSize',\n              text: \"Tama\\xF1o de fuente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: fontSizeMenuRef,\n            style: styles.fontSizeMenu,\n            onClick: e => e.stopPropagation(),\n            children: [FONT_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.fontSizeItem,\n                backgroundColor: fontSize === size ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n                fontWeight: fontSize === size ? 'bold' : 'normal'\n              },\n              onClick: e => {\n                e.stopPropagation();\n                applyFontSize(size);\n              },\n              onMouseEnter: e => {\n                e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n              },\n              onMouseLeave: e => {\n                if (fontSize !== size) {\n                  e.currentTarget.style.backgroundColor = 'transparent';\n                }\n              },\n              children: size\n            }, size, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.customOption,\n              onClick: e => {\n                e.stopPropagation();\n                enableFontSizeEditing(e);\n              },\n              onMouseEnter: e => {\n                e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n              },\n              onMouseLeave: e => {\n                e.currentTarget.style.backgroundColor = 'transparent';\n              },\n              children: \"Personalizado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: styles.incrementButton,\n            onClick: e => {\n              e.stopPropagation();\n              changeFontSize(true);\n            },\n            onMouseEnter: () => showTooltip('increaseFontSize'),\n            onMouseLeave: hideTooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#0b4444'\n              },\n              children: \"\\u25B2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              isVisible: activeTooltip === 'increaseFontSize',\n              text: \"Aumentar tama\\xF1o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            style: styles.incrementButton,\n            onClick: e => {\n              e.stopPropagation();\n              changeFontSize(false);\n            },\n            onMouseEnter: () => showTooltip('decreaseFontSize'),\n            onMouseLeave: hideTooltip,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#0b4444'\n              },\n              children: \"\\u25BC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              isVisible: activeTooltip === 'decreaseFontSize',\n              text: \"Reducir tama\\xF1o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 978,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.separator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          ref: colorButtonRef,\n          type: \"button\",\n          style: styles.colorButton(showColorPicker),\n          onClick: handleColorButtonClick,\n          onMouseEnter: () => showTooltip('textColor'),\n          onMouseLeave: hideTooltip,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.colorIconContainer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'textColor',\n            text: \"Color de texto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 9\n        }, this), showColorPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-picker-container\",\n          children: /*#__PURE__*/_jsxDEV(ColorPicker, {\n            onSelectColor: applyTextColor,\n            onCloseColorPicker: closeColorPicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1009,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(activeFormats.unorderedList, 'unorderedList'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('unorderedList');\n          animateButtonClick('unorderedList');\n        },\n        onMouseEnter: () => showTooltip('unorderedList'),\n        onMouseLeave: hideTooltip,\n        children: [\"\\u2022\", /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'unorderedList',\n          text: \"Lista con vi\\xF1etas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(activeFormats.link, 'link'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('link');\n          animateButtonClick('link');\n        },\n        onMouseEnter: () => showTooltip('link'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '16px'\n          },\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'link',\n          text: \"Insertar enlace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1047,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: styles.button(false, 'image'),\n        onClick: () => {\n          restoreSelection();\n          onFormatText('image');\n          animateButtonClick('image');\n        },\n        onMouseEnter: () => showTooltip('image'),\n        onMouseLeave: hideTooltip,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: '16px'\n          },\n          children: \"\\uD83D\\uDDBC\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          isVisible: activeTooltip === 'image',\n          text: \"Insertar imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1053,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FloatingToolbar, \"dBthiFX4bSSGHO/HDmh9AUIcb3c=\");\n_c = FloatingToolbar;\nexport default FloatingToolbar;\nvar _c;\n$RefreshReg$(_c, \"FloatingToolbar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Tooltip","ColorPicker","jsxDEV","_jsxDEV","Fragment","_Fragment","FONT_SIZES","FloatingToolbar","onFormatText","activeFormats","editorRef","fontSize","setFontSize","_s","visible","setVisible","position","setPosition","top","left","showFontSizeMenu","setShowFontSizeMenu","customFontSize","setCustomFontSize","isEditingFontSize","setIsEditingFontSize","savedSelection","setSavedSelection","activeTooltip","setActiveTooltip","isTyping","setIsTyping","showColorPicker","setShowColorPicker","currentIconColor","setCurrentIconColor","lastUsedColor","localStorage","getItem","e","animateButton","setAnimateButton","toolbarRef","fontSizeMenuRef","customFontInputRef","colorButtonRef","showTooltip","id","hideTooltip","animateButtonClick","buttonId","setTimeout","handleColorButtonClick","saveSelection","applyTextColor","color","restoreSelection","document","execCommand","setItem","console","warn","defaultColors","includes","storedColorsStr","storedColors","parsed","JSON","parse","Array","isArray","length","shift","push","stringify","error","closeColorPicker","getContrastColor","hexColor","r","parseInt","substring","g","b","luminance","styles","floatingBar","zIndex","display","alignItems","backgroundColor","borderRadius","padding","boxShadow","transition","opacity","transform","gap","border","backdropFilter","button","isActive","background","margin","cursor","justifyContent","width","height","colorButton","showingPicker","fontSizeButton","fontWeight","minWidth","textAlign","fontSizeInput","outline","fontSizeMenu","maxHeight","overflow","marginTop","animation","fontSizeItem","userSelect","customOption","borderTop","fontStyle","separator","sizeControls","incrementButton","colorIconContainer","colorIcon","iconImage","objectFit","cssAnimation","calculateBarPosition","selection","current","editorRect","getBoundingClientRect","toolbarHeight","offsetHeight","toolbarWidth","offsetWidth","newPosition","range","getRangeAt","rect","isFirstLine","lineHeight","hasSelection","isCollapsed","bottom","isNearLeftEdge","editorHeight","editorWidth","Math","max","window","getSelection","rangeCount","ranges","i","cloneRange","removeAllRanges","forEach","addRange","checkSelection","event","hasTextSelection","toString","trim","contains","activeElement","target","anchorNode","isEditorActive","isInEditor","container","commonAncestorContainer","nodeType","parentNode","applyFontSize","size","handleCustomFontSizeChange","value","replace","split","handleCustomFontSizeSubmit","preventDefault","parseFloat","isNaN","changeFontSize","increment","currentIndex","indexOf","enableFontSizeEditing","stopPropagation","focus","select","toggleFontSizeMenu","handleEditorClick","addEventListener","removeEventListener","typingTimer","handleKeyDown","clearTimeout","handleInput","handleKeyUp","right","handleSelectionChange","handleClickOutside","closest","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","type","bold","onClick","onMouseEnter","onMouseLeave","isVisible","text","italic","underline","onSubmit","onChange","onBlur","onDoubleClick","map","currentTarget","className","onSelectColor","onCloseColorPicker","unorderedList","link","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/FloatingToolbar.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Tooltip from '../ui/Tooltip';\r\nimport ColorPicker from './ColorPicker'; // Importamos el componente ColorPicker\r\n\r\n// Tamaños de fuente predeterminados como en Word\r\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 120];\r\n\r\n// FloatingToolbar - Barra de herramientas flotante mejorada para edición de texto\r\nconst FloatingToolbar = ({ onFormatText, activeFormats, editorRef, fontSize, setFontSize }) => {\r\n  // Estados del componente\r\n  const [visible, setVisible] = useState(false);\r\n  const [position, setPosition] = useState({ top: 0, left: 0 });\r\n  const [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\r\n  const [customFontSize, setCustomFontSize] = useState('');\r\n  const [isEditingFontSize, setIsEditingFontSize] = useState(false);\r\n  const [savedSelection, setSavedSelection] = useState(null);\r\n  const [activeTooltip, setActiveTooltip] = useState(null);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  // Estados para el selector de color\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [currentIconColor, setCurrentIconColor] = useState(() => {\r\n    try {\r\n      // Intentar recuperar el último color usado\r\n      const lastUsedColor = localStorage.getItem('lastUsedTextColor');\r\n      return lastUsedColor || '#0b4444';\r\n    } catch (e) {\r\n      return '#0b4444';\r\n    }\r\n  });\r\n\r\n  // Estados para animaciones\r\n  const [animateButton, setAnimateButton] = useState(null);\r\n\r\n  // Referencias\r\n  const toolbarRef = useRef(null);\r\n  const fontSizeMenuRef = useRef(null);\r\n  const customFontInputRef = useRef(null);\r\n  const colorButtonRef = useRef(null);\r\n\r\n  // Mostrar tooltip\r\n  const showTooltip = (id) => {\r\n    setActiveTooltip(id);\r\n  };\r\n\r\n  // Ocultar tooltip\r\n  const hideTooltip = () => {\r\n    setActiveTooltip(null);\r\n  };\r\n\r\n  // Animar botón cuando se hace clic\r\n  const animateButtonClick = (buttonId) => {\r\n    setAnimateButton(buttonId);\r\n    setTimeout(() => setAnimateButton(null), 300);\r\n  };\r\n\r\n  // Manejar clic en el botón de color\r\n  const handleColorButtonClick = () => {\r\n    // Guardar la selección actual antes de abrir el color picker\r\n    saveSelection();\r\n    animateButtonClick('color');\r\n    // Mostrar u ocultar el selector de color\r\n    setShowColorPicker(!showColorPicker);\r\n    // Ocultar otros menús\r\n    setShowFontSizeMenu(false);\r\n  };\r\n\r\n  // Aplicar color seleccionado y guardarlo automáticamente\r\n  const applyTextColor = (color) => {\r\n    if (restoreSelection()) {\r\n      try {\r\n        document.execCommand('foreColor', false, color);\r\n        setShowColorPicker(false);\r\n        // Actualizar el color del ícono al color seleccionado\r\n        setCurrentIconColor(color);\r\n        // Guardar el último color usado para mantener sincronización\r\n        try {\r\n          localStorage.setItem('lastUsedTextColor', color);\r\n        } catch (e) {\r\n          console.warn('No se pudo guardar el último color usado:', e);\r\n        }\r\n        \r\n        // Guardar automáticamente el color en localStorage (excepto los predeterminados)\r\n        const defaultColors = ['#91a8a4', '#0b4444', '#4c7977', '#f0f8f7', '#d2b99a'];\r\n        \r\n        if (!defaultColors.includes(color)) {\r\n          try {\r\n            // Recuperar colores guardados\r\n            const storedColorsStr = localStorage.getItem('savedTextColors');\r\n            let storedColors = defaultColors;\r\n            \r\n            if (storedColorsStr) {\r\n              try {\r\n                const parsed = JSON.parse(storedColorsStr);\r\n                if (Array.isArray(parsed) && parsed.length > 0) {\r\n                  storedColors = parsed;\r\n                }\r\n              } catch (e) {\r\n                console.warn('Error al parsear colores guardados:', e);\r\n              }\r\n            }\r\n            \r\n            // Verificar si el color ya existe\r\n            if (!storedColors.includes(color)) {\r\n              // Mantener solo los últimos 5 colores\r\n              if (storedColors.length >= 5) {\r\n                storedColors.shift();\r\n              }\r\n              storedColors.push(color);\r\n              localStorage.setItem('savedTextColors', JSON.stringify(storedColors));\r\n            }\r\n          } catch (e) {\r\n            console.warn('Error al guardar color:', e);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error('Error al aplicar color:', e);\r\n        // En caso de error, usar un color predeterminado\r\n        document.execCommand('foreColor', false, '#0b4444');\r\n        setCurrentIconColor('#0b4444');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Cerrar el selector de color\r\n  const closeColorPicker = () => {\r\n    setShowColorPicker(false);\r\n  };\r\n\r\n  // Obtener color de contraste para texto basado en color de fondo\r\n  const getContrastColor = (hexColor) => {\r\n    // Convertir hex a RGB\r\n    const r = parseInt(hexColor.substring(1, 3), 16);\r\n    const g = parseInt(hexColor.substring(3, 5), 16);\r\n    const b = parseInt(hexColor.substring(5, 7), 16);\r\n    \r\n    // Calcular luminosidad\r\n    const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;\r\n    \r\n    // Retornar blanco o negro según la luminosidad del color de fondo\r\n    return luminance > 0.5 ? '#000000' : '#ffffff';\r\n  };\r\n\r\n  // Estilos para la barra de herramientas\r\n  const styles = {\r\n    floatingBar: {\r\n      position: 'absolute',\r\n      zIndex: 1000,\r\n      display: visible ? 'flex' : 'none',\r\n      alignItems: 'center',\r\n      backgroundColor: 'rgb(245, 247, 250)',\r\n      borderRadius: '12px',\r\n      padding: '8px 10px',\r\n      boxShadow: '0 6px 16px rgba(0, 0, 0, 0.15), 0 1px 3px rgba(0, 0, 0, 0.08)',\r\n      transition: 'opacity 0.3s ease, transform 0.3s ease',\r\n      opacity: visible ? 1 : 0,\r\n      transform: visible ? 'translateY(0)' : 'translateY(10px)',\r\n      gap: '3px',\r\n      border: '1px solid rgba(200, 210, 220, 0.5)',\r\n      backdropFilter: 'blur(8px)',\r\n    },\r\n    button: (isActive, buttonId) => ({\r\n      background: 'none',\r\n      border: 'none',\r\n      borderRadius: '8px',\r\n      padding: '7px',\r\n      margin: '0 2px',\r\n      fontSize: '15px',\r\n      cursor: 'pointer',\r\n      color: isActive ? '#1b4fd9' : '#0b4444',\r\n      backgroundColor: isActive ? 'rgba(43, 87, 154, 0.12)' : 'transparent',\r\n      transition: 'all 0.2s ease',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '32px',\r\n      height: '32px',\r\n      position: 'relative',\r\n      transform: animateButton === buttonId ? 'scale(0.92)' : 'scale(1)',\r\n      boxShadow: isActive ? '0 1px 3px rgba(0, 0, 0, 0.05) inset' : 'none',\r\n    }),\r\n    colorButton: (showingPicker) => ({\r\n      background: 'none',\r\n      border: 'none',\r\n      borderRadius: '8px',\r\n      padding: '7px',\r\n      margin: '0 2px',\r\n      fontSize: '15px',\r\n      cursor: 'pointer',\r\n      color: '#0b4444',\r\n      backgroundColor: showingPicker ? 'rgba(43, 87, 154, 0.12)' : 'transparent',\r\n      transition: 'all 0.2s ease',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      width: '32px',\r\n      height: '32px',\r\n      position: 'relative',\r\n      transform: animateButton === 'color' ? 'scale(0.92)' : 'scale(1)',\r\n      boxShadow: showingPicker ? '0 1px 3px rgba(0, 0, 0, 0.05) inset' : 'none',\r\n    }),\r\n    fontSizeButton: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      background: 'white',\r\n      border: '1px solid #dfe3e8',\r\n      borderRadius: '8px',\r\n      padding: '4px 10px',\r\n      margin: '0 3px',\r\n      fontSize: '14px',\r\n      cursor: 'pointer',\r\n      color: '#333333',\r\n      fontWeight: 'normal',\r\n      transition: 'all 0.2s ease',\r\n      position: 'relative',\r\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.04)',\r\n      minWidth: '40px',\r\n      textAlign: 'center',\r\n      transform: animateButton === 'fontSize' ? 'scale(0.95)' : 'scale(1)',\r\n    },\r\n    fontSizeInput: {\r\n      width: '40px',\r\n      border: '1px solid #dfe3e8',\r\n      borderRadius: '6px',\r\n      padding: '5px',\r\n      fontSize: '14px',\r\n      color: '#333333',\r\n      textAlign: 'center',\r\n      outline: 'none',\r\n      backgroundColor: 'white',\r\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.05) inset',\r\n    },\r\n    fontSizeMenu: {\r\n      position: 'absolute',\r\n      top: '100%',\r\n      left: '0',\r\n      backgroundColor: 'white',\r\n      border: '1px solid #dfe3e8',\r\n      borderRadius: '8px',\r\n      boxShadow: '0 6px 16px rgba(0, 0, 0, 0.12)',\r\n      maxHeight: '300px',\r\n      overflow: 'auto',\r\n      zIndex: 1001,\r\n      display: showFontSizeMenu ? 'block' : 'none',\r\n      marginTop: '5px',\r\n      width: '60px',\r\n      animation: showFontSizeMenu ? 'fadeIn 0.2s ease' : 'none',\r\n    },\r\n    fontSizeItem: {\r\n      padding: '8px 12px',\r\n      cursor: 'pointer',\r\n      userSelect: 'none',\r\n      transition: 'background-color 0.2s',\r\n      textAlign: 'center',\r\n      color: '#0b4444',\r\n      fontSize: '14px',\r\n    },\r\n    customOption: {\r\n      borderTop: '1px solid #ebeef2', \r\n      fontStyle: 'italic',\r\n      padding: '8px 12px',\r\n      cursor: 'pointer',\r\n      userSelect: 'none',\r\n      textAlign: 'center',\r\n      color: '#1b4fd9',\r\n      fontSize: '13px',\r\n    },\r\n    separator: {\r\n      width: '1px',\r\n      height: '24px',\r\n      margin: '0 6px',\r\n      backgroundColor: '#dfe3e8'\r\n    },\r\n    sizeControls: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      position: 'relative'\r\n    },\r\n    incrementButton: {\r\n      background: 'none',\r\n      border: 'none',\r\n      padding: '5px',\r\n      cursor: 'pointer',\r\n      color: '#2B579A', \r\n      fontSize: '14px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '6px',\r\n      position: 'relative',\r\n      transition: 'all 0.2s ease',\r\n      transform: (animateButton === 'increaseSize' || animateButton === 'decreaseSize') ? 'scale(0.9)' : 'scale(1)',\r\n    },\r\n    colorIconContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      position: 'relative',\r\n      width: '20px',\r\n      height: '20px',\r\n      borderRadius: '4px',\r\n      backgroundColor: currentIconColor,\r\n      boxShadow: '0 1px 3px rgba(0, 0, 0, 0.1)',\r\n      transition: 'transform 0.3s ease',\r\n    },\r\n    colorIcon: {\r\n      fontSize: '14px',\r\n      fontWeight: 'bold',\r\n      color: getContrastColor(currentIconColor),\r\n      transition: 'all 0.3s ease',\r\n    },\r\n    iconImage: {\r\n      width: '16px',\r\n      height: '16px',\r\n      objectFit: 'contain'\r\n    }\r\n  };\r\n\r\n  // Estilos CSS para animaciones\r\n  const cssAnimation = `\r\n    @keyframes fadeIn {\r\n      from { opacity: 0; transform: translateY(-5px); }\r\n      to { opacity: 1; transform: translateY(0); }\r\n    }\r\n    \r\n    @keyframes pulse {\r\n      0% { transform: scale(1); }\r\n      50% { transform: scale(0.95); }\r\n      100% { transform: scale(1); }\r\n    }\r\n  `;\r\n\r\n  // Función para calcular la posición de la barra\r\n  const calculateBarPosition = (selection) => {\r\n    if (!editorRef.current) return;\r\n    \r\n    // Calcular la posición de la barra\r\n    const editorRect = editorRef.current.getBoundingClientRect();\r\n    \r\n    // Calculamos la altura de la barra (se estima en 50px si aún no está renderizada)\r\n    const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 50;\r\n    // Calculamos el ancho de la barra (se estima en 320px si aún no está renderizada)\r\n    const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 320;\r\n    \r\n    let newPosition;\r\n    \r\n    // Determinar la línea en la que está el cursor (primera línea o no)\r\n    const range = selection.getRangeAt(0);\r\n    const rect = range.getBoundingClientRect();\r\n    const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\r\n    \r\n    // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\r\n    const lineHeight = 22; // Altura estimada de la línea de texto\r\n    \r\n    const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n    \r\n    if (hasSelection) {\r\n      // Si hay selección, posicionar debajo de la selección\r\n      if (rect.width === 0) {\r\n        return;\r\n      }\r\n      \r\n      newPosition = {\r\n        // Posicionamos la barra debajo de la línea de texto\r\n        top: rect.bottom - editorRect.top + 10,\r\n        // Alineamos con el inicio de la selección\r\n        left: rect.left - editorRect.left\r\n      };\r\n    } else {\r\n      // Si solo está activo el editor sin selección\r\n      const isNearLeftEdge = rect.left < editorRect.left + 50;\r\n      \r\n      // Siempre colocar la barra debajo del cursor\r\n      newPosition = {\r\n        top: rect.bottom - editorRect.top + 10, // Debajo del cursor\r\n        left: rect.left - editorRect.left // Alineado con el cursor\r\n      };\r\n      \r\n      // Si no tenemos dimensiones válidas, usar posición por defecto dentro del editor\r\n      if (rect.width === 0 && rect.height === 0) {\r\n        newPosition = {\r\n          top: 30 + lineHeight, // Debajo de la primera línea\r\n          left: 50 // Desde el borde izquierdo\r\n        };\r\n      }\r\n    }\r\n    \r\n    // CRÍTICO: Asegurar que la barra siempre está DENTRO del editor\r\n    // 1. Comprobar límites verticales\r\n    if (newPosition.top < 0) {\r\n      // Si la posición es negativa, colocar al inicio del editor\r\n      newPosition.top = 10;\r\n    }\r\n    \r\n    const editorHeight = editorRef.current.offsetHeight;\r\n    if (newPosition.top + toolbarHeight > editorHeight) {\r\n      // Si la barra se saldría por abajo, colocar más arriba\r\n      newPosition.top = editorHeight - toolbarHeight - 10;\r\n    }\r\n    \r\n    // 2. Comprobar límites horizontales\r\n    if (newPosition.left < 10) {\r\n      newPosition.left = 10;\r\n    }\r\n    \r\n    const editorWidth = editorRef.current.offsetWidth;\r\n    if (newPosition.left + toolbarWidth > editorWidth) {\r\n      newPosition.left = editorWidth - toolbarWidth - 10;\r\n    }\r\n    \r\n    // 3. Comprobar que la posición es válida\r\n    newPosition.top = Math.max(0, newPosition.top);\r\n    newPosition.left = Math.max(0, newPosition.left);\r\n    \r\n    setPosition(newPosition);\r\n  };\r\n\r\n  // Función para guardar la selección actual\r\n  const saveSelection = () => {\r\n    const selection = window.getSelection();\r\n    if (selection.rangeCount > 0) {\r\n      const ranges = [];\r\n      for (let i = 0; i < selection.rangeCount; i++) {\r\n        ranges.push(selection.getRangeAt(i).cloneRange());\r\n      }\r\n      setSavedSelection(ranges);\r\n      return ranges;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  // Función para restaurar la selección guardada\r\n  const restoreSelection = (ranges = savedSelection) => {\r\n    if (!ranges) return false;\r\n    \r\n    const selection = window.getSelection();\r\n    selection.removeAllRanges();\r\n    \r\n    ranges.forEach(range => {\r\n      selection.addRange(range);\r\n    });\r\n    \r\n    return true;\r\n  };\r\n\r\n  // Función para verificar la selección de texto o si el editor está activo\r\n  const checkSelection = (event) => {\r\n    // Obtener la selección actual\r\n    const selection = window.getSelection();\r\n    \r\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n    // independientemente del estado de escritura\r\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n    \r\n    // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\r\n    if (isTyping && !hasTextSelection) return;\r\n    \r\n    try {\r\n      // Evitar ocultar la barra si estamos interactuando con elementos de la barra\r\n      if (\r\n        toolbarRef.current &&\r\n        (toolbarRef.current.contains(document.activeElement) ||\r\n         (event && toolbarRef.current.contains(event.target)))\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Prevent hiding the toolbar if interacting with the font size menu\r\n      if (\r\n        fontSizeMenuRef.current &&\r\n        (fontSizeMenuRef.current.contains(document.activeElement) ||\r\n         (selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode)))\r\n      ) {\r\n        return;\r\n      }\r\n      \r\n      // Verificar si el editor está activo\r\n      const isEditorActive = editorRef.current === document.activeElement;\r\n      \r\n      // Verificar si tenemos una selección válida\r\n      const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n      \r\n      // Si ni el editor está activo ni hay selección, ocultar la barra\r\n      if (!isEditorActive && !hasSelection) {\r\n        setVisible(false);\r\n        setShowFontSizeMenu(false);\r\n        return;\r\n      }\r\n      \r\n      // Verificar si la selección o el cursor está dentro del editor\r\n      let isInEditor = false;\r\n      \r\n      if (isEditorActive) {\r\n        isInEditor = true;\r\n      } else if (hasSelection) {\r\n        const range = selection.getRangeAt(0);\r\n        let container = range.commonAncestorContainer;\r\n        \r\n        // Si el contenedor es un nodo de texto, obtener su elemento padre\r\n        if (container.nodeType === 3) {\r\n          container = container.parentNode;\r\n        }\r\n        \r\n        // Verificar si el contenedor o algún antecesor es el editor\r\n        let current = container;\r\n        \r\n        while (current && !isInEditor) {\r\n          if (current === editorRef.current) {\r\n            isInEditor = true;\r\n          }\r\n          current = current.parentNode;\r\n        }\r\n      }\r\n      \r\n      if (!isInEditor) {\r\n        setVisible(false);\r\n        setShowFontSizeMenu(false);\r\n        return;\r\n      }\r\n      \r\n      // Calcular la posición de la barra\r\n      calculateBarPosition(selection);\r\n      \r\n      setVisible(true);\r\n      \r\n      // Guardar la selección actual para poder restaurarla más tarde\r\n      saveSelection();\r\n    } catch (error) {\r\n      console.error('Error al verificar selección:', error);\r\n      setVisible(false);\r\n      setShowFontSizeMenu(false);\r\n    }\r\n  };\r\n\r\n  // Aplicar un tamaño de fuente específico\r\n  const applyFontSize = (size) => {\r\n    // Restaurar la selección antes de aplicar el formato\r\n    if (restoreSelection()) {\r\n      setFontSize(size); // Usar la función proporcionada por el componente padre\r\n      animateButtonClick('fontSize');\r\n    }\r\n    setShowFontSizeMenu(false);\r\n    setIsEditingFontSize(false);\r\n  };\r\n\r\n  // Maneja la entrada de texto para tamaño personalizado\r\n  const handleCustomFontSizeChange = (e) => {\r\n    // Solo permitir números y un punto decimal\r\n    const value = e.target.value.replace(/[^0-9.]/g, '');\r\n    // Evitar múltiples puntos decimales\r\n    if (value.split('.').length > 2) return;\r\n    \r\n    setCustomFontSize(value);\r\n  };\r\n\r\n  // Maneja cuando el usuario confirma un tamaño personalizado\r\n  const handleCustomFontSizeSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (customFontSize) {\r\n      const size = parseFloat(customFontSize);\r\n      // Validar que sea un número y esté en un rango razonable\r\n      if (!isNaN(size) && size >= 1 && size <= 500) {\r\n        applyFontSize(size);\r\n      }\r\n    }\r\n    \r\n    setIsEditingFontSize(false);\r\n  };\r\n\r\n  // Incrementar/decrementar tamaño de fuente\r\n  const changeFontSize = (increment) => {\r\n    // Restaurar la selección antes de cambiar el tamaño\r\n    if (restoreSelection()) {\r\n      const currentIndex = FONT_SIZES.indexOf(fontSize);\r\n      \r\n      if (increment && currentIndex < FONT_SIZES.length - 1) {\r\n        applyFontSize(FONT_SIZES[currentIndex + 1]);\r\n        animateButtonClick('increaseSize');\r\n      } else if (!increment && currentIndex > 0) {\r\n        applyFontSize(FONT_SIZES[currentIndex - 1]);\r\n        animateButtonClick('decreaseSize');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Activar el modo de edición de tamaño personalizado\r\n  const enableFontSizeEditing = (e) => {\r\n    e.stopPropagation(); // Evitar la propagación del evento\r\n    \r\n    // Guardar la selección actual si aún no se ha guardado\r\n    if (!savedSelection) {\r\n      saveSelection();\r\n    }\r\n    \r\n    setIsEditingFontSize(true);\r\n    setCustomFontSize(fontSize.toString());\r\n    setShowFontSizeMenu(false);\r\n    animateButtonClick('fontSize');\r\n    \r\n    // Enfocar el input después de que se haya renderizado\r\n    setTimeout(() => {\r\n      if (customFontInputRef.current) {\r\n        customFontInputRef.current.focus();\r\n        customFontInputRef.current.select();\r\n      }\r\n    }, 50);\r\n  };\r\n\r\n  // Toggle del menú de tamaños\r\n  const toggleFontSizeMenu = (e) => {\r\n    e.stopPropagation(); // Evitar la propagación del evento\r\n    \r\n    // Guardar la selección actual si aún no se ha guardado\r\n    if (!savedSelection) {\r\n      saveSelection();\r\n    }\r\n    \r\n    setShowFontSizeMenu(!showFontSizeMenu);\r\n    animateButtonClick('fontSize');\r\n  };\r\n\r\n  // Actualizar el estado local cuando cambia el tamaño de fuente recibido\r\n  useEffect(() => {\r\n    if (isEditingFontSize) {\r\n      setCustomFontSize(fontSize.toString());\r\n    }\r\n  }, [fontSize, isEditingFontSize]);\r\n\r\n  // Mostrar la barra al hacer clic en el editor\r\n  useEffect(() => {\r\n    const handleEditorClick = () => {\r\n      if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\r\n        checkSelection();\r\n      }\r\n    };\r\n    \r\n    if (editorRef.current) {\r\n      editorRef.current.addEventListener('click', handleEditorClick);\r\n    }\r\n    \r\n    return () => {\r\n      if (editorRef.current) {\r\n        editorRef.current.removeEventListener('click', handleEditorClick);\r\n      }\r\n    };\r\n  }, [editorRef?.current, isTyping]);\r\n\r\n  // Detectar cambios en la selección y en el foco del editor\r\n  useEffect(() => {\r\n    // No agregar event listeners si no hay editorRef\r\n    if (!editorRef || !editorRef.current) return;\r\n    \r\n    // Temporizador para controlar la visualización de la barra\r\n    let typingTimer;\r\n    \r\n    const handleKeyDown = (e) => {\r\n      // Marcar que estamos escribiendo\r\n      setIsTyping(true);\r\n      // Ocultar la barra inmediatamente al empezar a escribir\r\n      setVisible(false);\r\n      // Limpiar el temporizador anterior\r\n      clearTimeout(typingTimer);\r\n    };\r\n    \r\n    const handleInput = (e) => {\r\n      // Marcar que estamos escribiendo\r\n      setIsTyping(true);\r\n      // Asegurarse de que la barra está oculta mientras se escribe\r\n      setVisible(false);\r\n      // Limpiar el temporizador anterior\r\n      clearTimeout(typingTimer);\r\n    };\r\n    \r\n    const handleKeyUp = () => {\r\n      // Limpiar el temporizador anterior\r\n      clearTimeout(typingTimer);\r\n      // Configurar un nuevo temporizador\r\n      typingTimer = setTimeout(() => {\r\n        // Ya no estamos escribiendo\r\n        setIsTyping(false);\r\n        // Forzar la visualización de la barra después del tiempo de espera\r\n        const selection = window.getSelection();\r\n        \r\n        if (selection && editorRef.current) {\r\n          // Asegurarse de que el editor sigue teniendo el foco\r\n          if (editorRef.current === document.activeElement) {\r\n            try {\r\n              // Calcular la posición de forma segura\r\n              const editorRect = editorRef.current.getBoundingClientRect();\r\n              const range = selection.getRangeAt(0);\r\n              const rect = range.getBoundingClientRect();\r\n              \r\n              // Verificar que la selección está dentro del editor\r\n              if (\r\n                rect.top >= editorRect.top && \r\n                rect.bottom <= editorRect.bottom &&\r\n                rect.left >= editorRect.left &&\r\n                rect.right <= editorRect.right\r\n              ) {\r\n                // Solo si estamos dentro del editor, mostrar la barra\r\n                calculateBarPosition(selection);\r\n                setVisible(true);\r\n              } else {\r\n                // Si estamos fuera del editor, colocar en una posición segura dentro del editor\r\n                setPosition({\r\n                  top: 30,\r\n                  left: 50\r\n                });\r\n                setVisible(true);\r\n              }\r\n            } catch (e) {\r\n              console.error(\"Error al posicionar la barra:\", e);\r\n              // Posición por defecto dentro del editor\r\n              setPosition({\r\n                top: 30,\r\n                left: 50\r\n              });\r\n              setVisible(true);\r\n            }\r\n          }\r\n        }\r\n      }, 1500); // Esperar 1.5 segundos después de dejar de escribir\r\n    };\r\n    \r\n    // Deshabilitar temporalmente los eventos que podrían causar parpadeo\r\n    const handleSelectionChange = () => {\r\n      // Obtener la selección actual\r\n      const selection = window.getSelection();\r\n      \r\n      // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n      const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n      \r\n      // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\r\n      if (hasTextSelection || !isTyping) {\r\n        checkSelection();\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('selectionchange', handleSelectionChange);\r\n    editorRef.current.addEventListener('mouseup', handleSelectionChange);\r\n    editorRef.current.addEventListener('keydown', handleKeyDown);\r\n    editorRef.current.addEventListener('input', handleInput);\r\n    editorRef.current.addEventListener('keyup', handleKeyUp);\r\n    editorRef.current.addEventListener('focus', handleSelectionChange);\r\n    \r\n    // Limpiar event listeners\r\n    return () => {\r\n      document.removeEventListener('selectionchange', handleSelectionChange);\r\n      if (editorRef.current) {\r\n        editorRef.current.removeEventListener('mouseup', handleSelectionChange);\r\n        editorRef.current.removeEventListener('keydown', handleKeyDown);\r\n        editorRef.current.removeEventListener('input', handleInput);\r\n        editorRef.current.removeEventListener('keyup', handleKeyUp);\r\n        editorRef.current.removeEventListener('focus', handleSelectionChange);\r\n      }\r\n      clearTimeout(typingTimer);\r\n    };\r\n  }, [editorRef?.current, isTyping]);\r\n\r\n  // Cerrar el menú cuando se hace clic fuera\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      // Cerrar selector de tamaño\r\n      if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\r\n        setShowFontSizeMenu(false);\r\n      }\r\n      \r\n      // Cerrar selector de color si no se está haciendo clic en él o en su botón\r\n      if (showColorPicker && \r\n          colorButtonRef.current && \r\n          !colorButtonRef.current.contains(event.target) &&\r\n          !event.target.closest('.color-picker-container')) {\r\n        setShowColorPicker(false);\r\n      }\r\n    };\r\n    \r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [showColorPicker]);\r\n\r\n  return (\r\n    <>\r\n      {/* Estilos para animaciones */}\r\n      <style>{cssAnimation}</style>\r\n      \r\n      <div \r\n        ref={toolbarRef}\r\n        style={{\r\n          ...styles.floatingBar,\r\n          top: `${position.top}px`,\r\n          left: `${position.left}px`,\r\n        }}\r\n      >\r\n        {/* Formato de texto básico */}\r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(activeFormats.bold, 'bold')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('bold');\r\n            animateButtonClick('bold');\r\n          }}\r\n          onMouseEnter={() => showTooltip('bold')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <strong>B</strong>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'bold'}\r\n            text=\"Negrita\"\r\n          />\r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(activeFormats.italic, 'italic')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('italic');\r\n            animateButtonClick('italic');\r\n          }}\r\n          onMouseEnter={() => showTooltip('italic')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <em>I</em>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'italic'}\r\n            text=\"Cursiva\"\r\n          />\r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(activeFormats.underline, 'underline')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('underline');\r\n            animateButtonClick('underline');\r\n          }}\r\n          onMouseEnter={() => showTooltip('underline')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <u>U</u>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'underline'}\r\n            text=\"Subrayado\"\r\n          />\r\n        </button>\r\n        \r\n        <div style={styles.separator} />\r\n        \r\n        {/* Selector de tamaño de fuente mejorado */}\r\n        <div style={styles.sizeControls}>\r\n          {isEditingFontSize ? (\r\n            /* Campo de entrada para tamaño personalizado */\r\n            <form \r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleCustomFontSizeSubmit(e);\r\n              }} \r\n              style={{ display: 'flex', margin: '0 2px' }}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <input\r\n                ref={customFontInputRef}\r\n                type=\"text\"\r\n                value={customFontSize}\r\n                onChange={handleCustomFontSizeChange}\r\n                onBlur={(e) => {\r\n                  // Permitir un poco de tiempo para que se procese el clic antes de cerrar\r\n                  setTimeout(() => {\r\n                    handleCustomFontSizeSubmit(e);\r\n                  }, 100);\r\n                }}\r\n                style={styles.fontSizeInput}\r\n                onClick={(e) => e.stopPropagation()}\r\n              />\r\n            </form>\r\n          ) : (\r\n            /* Botón de tamaño actual con desplegable */\r\n            <div style={{ position: 'relative' }}>\r\n              <button\r\n                type=\"button\"\r\n                style={styles.fontSizeButton}\r\n                onClick={enableFontSizeEditing} // Al hacer clic directo, abre el editor de tamaño personalizado\r\n                onDoubleClick={toggleFontSizeMenu} // Doble clic muestra el menú\r\n                onMouseEnter={() => showTooltip('fontSize')}\r\n                onMouseLeave={hideTooltip}\r\n              >\r\n                {fontSize}\r\n                <Tooltip\r\n                  isVisible={activeTooltip === 'fontSize'}\r\n                  text=\"Tamaño de fuente\"\r\n                />\r\n              </button>\r\n              \r\n              {/* Menú desplegable con tamaños predefinidos */}\r\n              <div \r\n                ref={fontSizeMenuRef}\r\n                style={styles.fontSizeMenu}\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                {FONT_SIZES.map(size => (\r\n                  <div\r\n                    key={size}\r\n                    style={{\r\n                      ...styles.fontSizeItem,\r\n                      backgroundColor: fontSize === size \r\n                        ? 'rgba(43, 87, 154, 0.1)' \r\n                        : 'transparent',\r\n                      fontWeight: fontSize === size ? 'bold' : 'normal'\r\n                    }}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      applyFontSize(size);\r\n                    }}\r\n                    onMouseEnter={(e) => {\r\n                      e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (fontSize !== size) {\r\n                        e.currentTarget.style.backgroundColor = 'transparent';\r\n                      }\r\n                    }}\r\n                  >\r\n                    {size}\r\n                  </div>\r\n                ))}\r\n                {/* Opción de tamaño personalizado */}\r\n                <div\r\n                  style={styles.customOption}\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    enableFontSizeEditing(e);\r\n                  }}\r\n                  onMouseEnter={(e) => {\r\n                    e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.backgroundColor = 'transparent';\r\n                  }}\r\n                >\r\n                  Personalizado\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Controles de incremento/decremento */}\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              style={styles.incrementButton}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                changeFontSize(true);\r\n              }}\r\n              onMouseEnter={() => showTooltip('increaseFontSize')}\r\n              onMouseLeave={hideTooltip}\r\n            >\r\n              <span style={{ color: '#0b4444' }}>▲</span>\r\n              <Tooltip\r\n                isVisible={activeTooltip === 'increaseFontSize'}\r\n                text=\"Aumentar tamaño\"\r\n              />\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              style={styles.incrementButton}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                changeFontSize(false);\r\n              }}\r\n              onMouseEnter={() => showTooltip('decreaseFontSize')}\r\n              onMouseLeave={hideTooltip}\r\n            >\r\n              <span style={{ color: '#0b4444' }}>▼</span>\r\n              <Tooltip\r\n                isVisible={activeTooltip === 'decreaseFontSize'}\r\n                text=\"Reducir tamaño\"\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div style={styles.separator} />\r\n        \r\n      {/* Botón de color de texto mejorado */}\r\n      <div style={{ position: 'relative' }}>\r\n        <button \r\n          ref={colorButtonRef}\r\n          type=\"button\"\r\n          style={styles.colorButton(showColorPicker)}\r\n          onClick={handleColorButtonClick}\r\n          onMouseEnter={() => showTooltip('textColor')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n        <div style={styles.colorIconContainer}>\r\n            {/* Se eliminó la letra \"A\" aquí, dejando solo el rectángulo de color */}\r\n          </div>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'textColor'}\r\n            text=\"Color de texto\"\r\n          />\r\n        </button>\r\n                \r\n          {/* Componente selector de color */}\r\n          {showColorPicker && (\r\n          <div className=\"color-picker-container\">\r\n            <ColorPicker \r\n              onSelectColor={applyTextColor}\r\n              onCloseColorPicker={closeColorPicker}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n        {/* Opciones de formato avanzadas */}\r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(activeFormats.unorderedList, 'unorderedList')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('unorderedList');\r\n            animateButtonClick('unorderedList');\r\n          }}\r\n          onMouseEnter={() => showTooltip('unorderedList')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          •\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'unorderedList'}\r\n            text=\"Lista con viñetas\"\r\n          />\r\n        </button>\r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(activeFormats.link, 'link')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('link');\r\n            animateButtonClick('link');\r\n          }}\r\n          onMouseEnter={() => showTooltip('link')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ fontSize: '16px' }}>🔗</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'link'}\r\n            text=\"Insertar enlace\"\r\n          />\r\n        </button>\r\n        \r\n        <button \r\n          type=\"button\"\r\n          style={styles.button(false, 'image')}\r\n          onClick={() => {\r\n            restoreSelection();\r\n            onFormatText('image');\r\n            animateButtonClick('image');\r\n          }}\r\n          onMouseEnter={() => showTooltip('image')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ fontSize: '16px' }}>🖼️</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'image'}\r\n            text=\"Insertar imagen\"\r\n          />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FloatingToolbar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}