{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\DualModeEditor.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/DualModeEditor.jsx\n// Versión actualizada con resaltado de sintaxis\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\nimport EditorToolbar from './EditorToolbar';\nimport { insertMarkdown, insertHTML } from './utils/editorUtils';\nimport MarkdownPreview from './MarkdownPreview';\nimport HTMLPreview from './HTMLPreview';\nimport SyntaxHighlighter from './SyntaxHighlighter'; // Importamos el nuevo componente\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DualModeEditor = ({\n  content,\n  onChange,\n  initialMode = 'markdown'\n}) => {\n  _s();\n  const textAreaRef = useRef(null);\n  const [mode, setMode] = useState(initialMode); // 'markdown' o 'html'\n  const [activeTab, setActiveTab] = useState('code'); // 'code' o 'preview'\n  const [internalContent, setInternalContent] = useState(content || '');\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\n\n  // Detectar si el contenido es HTML y actualizar modo si es necesario\n  useEffect(() => {\n    // Detecta si el contenido parece ser HTML basado en tags comunes\n    const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(content);\n    if (hasHTMLStructure && mode !== 'html') {\n      setMode('html');\n    }\n\n    // Actualizar contenido interno cuando cambia el contenido externo\n    setInternalContent(content || '');\n  }, [content]);\n\n  // Cuando el modo cambia, asegurarse de que el contenido interno esté actualizado\n  useEffect(() => {\n    // Cuando se cambia el modo, enfocar el editor para facilitar la edición inmediata\n    if (textAreaRef.current) {\n      textAreaRef.current.focus();\n    }\n  }, [mode]);\n  const handleToolbarAction = (actionType, placeholder) => {\n    if (mode === 'markdown') {\n      const newContent = insertMarkdown(internalContent, actionType, placeholder, textAreaRef.current);\n      updateContent(newContent);\n    } else {\n      const newContent = insertHTML(internalContent, actionType, placeholder, textAreaRef.current);\n      updateContent(newContent);\n    }\n  };\n  const updateContent = newContent => {\n    setInternalContent(newContent);\n\n    // Notificar al componente padre sobre el cambio\n    const event = {\n      target: {\n        name: 'content',\n        value: newContent\n      }\n    };\n    onChange(event);\n  };\n  const handleModeToggle = newMode => {\n    // Al cambiar de modo, mantenemos el contenido pero cambiamos cómo se interpreta\n    setMode(newMode);\n\n    // También notificamos al componente padre sobre el cambio de modo\n    const event = {\n      target: {\n        name: 'editorMode',\n        value: newMode\n      }\n    };\n    onChange(event);\n  };\n  const handleTextAreaChange = e => {\n    setInternalContent(e.target.value);\n    onChange(e);\n  };\n\n  // Toggle para activar/desactivar el resaltado de sintaxis\n  const toggleSyntaxHighlighting = () => {\n    setIsHighlightingEnabled(!isHighlightingEnabled);\n  };\n\n  // Colores oficiales para los modos\n  const modeColors = {\n    markdown: {\n      background: '#2C3E50',\n      text: '#FFFFFF',\n      hoverBg: '#34495E',\n      activeBg: '#0095FF',\n      // Color azul del logo de Markdown\n      activeText: '#FFFFFF',\n      badge: {\n        background: '#0095FF',\n        // Color azul del logo de Markdown\n        text: '#FFFFFF'\n      }\n    },\n    html: {\n      background: '#2C3E50',\n      text: '#FFFFFF',\n      hoverBg: '#34495E',\n      activeBg: '#E34C26',\n      activeText: '#FFFFFF',\n      badge: {\n        background: '#E34C26',\n        text: '#FFFFFF'\n      }\n    }\n  };\n\n  // Estilos para el editor\n  const styles = {\n    editorContainer: {\n      position: 'relative',\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      overflow: 'hidden',\n      boxShadow: shadows.sm,\n      maxWidth: '960px',\n      // Ancho máximo más generoso\n      margin: '0 auto' // Centrado horizontal\n    },\n    editorHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      borderBottom: `1px solid ${colors.gray200}`,\n      backgroundColor: '#F8F9FA'\n    },\n    modeToggle: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: `${spacing.xs} ${spacing.md}`,\n      fontSize: typography.fontSize.sm,\n      gap: spacing.sm\n    },\n    modeButton: (isActive, modeType) => ({\n      padding: `${spacing.xs} ${spacing.md}`,\n      backgroundColor: isActive ? modeColors[modeType].activeBg : modeColors[modeType].background,\n      border: 'none',\n      borderRadius: borderRadius.sm,\n      cursor: 'pointer',\n      fontSize: typography.fontSize.sm,\n      transition: 'all 0.2s ease',\n      color: isActive ? modeColors[modeType].activeText : modeColors[modeType].text,\n      fontWeight: isActive ? typography.fontWeight.medium : typography.fontWeight.regular,\n      boxShadow: isActive ? `0 2px 4px rgba(0,0,0,0.1)` : 'none',\n      transform: isActive ? 'translateY(-2px)' : 'translateY(0)'\n    }),\n    tabsContainer: {\n      display: 'flex'\n    },\n    tab: {\n      padding: `${spacing.sm} ${spacing.xl}`,\n      cursor: 'pointer',\n      border: 'none',\n      background: 'none',\n      fontWeight: typography.fontWeight.medium,\n      fontSize: typography.fontSize.md,\n      color: colors.textSecondary,\n      borderBottom: '2px solid transparent',\n      transition: 'all 0.2s ease'\n    },\n    activeTab: {\n      color: mode === 'markdown' ? '#0095FF' : '#E34C26',\n      borderBottom: `2px solid ${mode === 'markdown' ? '#0095FF' : '#E34C26'}`\n    },\n    plainTextarea: {\n      width: '100%',\n      height: '600px',\n      padding: spacing.md,\n      backgroundColor: '#1e1e1e',\n      color: '#d4d4d4',\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\n      fontSize: '14px',\n      lineHeight: 1.5,\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      resize: 'vertical',\n      outline: 'none',\n      overflowWrap: 'normal',\n      whiteSpace: 'pre',\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)'\n    },\n    previewContainer: {\n      width: '100%',\n      height: '600px',\n      padding: spacing.md,\n      backgroundColor: '#f9fafb',\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\n      overflow: 'auto'\n    },\n    autoSaveIndicator: {\n      position: 'absolute',\n      bottom: '10px',\n      right: '10px',\n      backgroundColor: mode === 'markdown' ? '#0095FF' : '#E34C26',\n      color: colors.white,\n      padding: `${spacing.xs} ${spacing.sm}`,\n      borderRadius: borderRadius.sm,\n      fontSize: typography.fontSize.xs,\n      opacity: 0.7\n    },\n    modeBadge: {\n      display: 'inline-block',\n      padding: `${spacing.xs} ${spacing.sm}`,\n      borderRadius: borderRadius.round,\n      fontSize: typography.fontSize.xs,\n      backgroundColor: mode === 'html' ? modeColors.html.badge.background : modeColors.markdown.badge.background,\n      color: mode === 'html' ? modeColors.html.badge.text : modeColors.markdown.badge.text,\n      marginLeft: spacing.sm,\n      fontWeight: typography.fontWeight.medium,\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n    },\n    editorContent: {\n      backgroundColor: '#f9fafb',\n      borderRadius: `0 0 ${borderRadius.md} ${borderRadius.md}`,\n      padding: spacing.sm,\n      border: 'none'\n    },\n    highlighterOptions: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: spacing.sm,\n      marginLeft: spacing.xl\n    },\n    switchContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n    switchLabel: {\n      fontSize: typography.fontSize.sm,\n      color: colors.textSecondary,\n      marginRight: spacing.xs\n    },\n    switch: {\n      position: 'relative',\n      display: 'inline-block',\n      width: '40px',\n      height: '20px'\n    },\n    switchInput: {\n      opacity: 0,\n      width: 0,\n      height: 0\n    },\n    switchSlider: {\n      position: 'absolute',\n      cursor: 'pointer',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: colors.gray200,\n      transition: '0.4s',\n      borderRadius: '20px'\n    },\n    switchThumb: isActive => ({\n      position: 'absolute',\n      cursor: 'pointer',\n      content: '\"\"',\n      height: '16px',\n      width: '16px',\n      left: isActive ? '22px' : '2px',\n      bottom: '2px',\n      backgroundColor: colors.white,\n      transition: '0.4s',\n      borderRadius: '50%'\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.editorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tabsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'code' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('code'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/assets/images/icons/CODE_icon.png\",\n              alt: \"Code\",\n              style: {\n                width: '16px',\n                height: '16px',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'preview' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('preview'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/assets/images/icons/PREVIEW_icon.png\",\n              alt: \"Preview\",\n              style: {\n                width: '16px',\n                height: '16px',\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [activeTab === 'code' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.highlighterOptions,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.switchContainer,\n            onClick: toggleSyntaxHighlighting,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.switchLabel,\n              children: \"Resaltado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.switch,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isHighlightingEnabled,\n                style: styles.switchInput,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  ...styles.switchSlider,\n                  backgroundColor: isHighlightingEnabled ? mode === 'markdown' ? '#0095FF' : '#E34C26' : colors.gray200\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.switchThumb(isHighlightingEnabled)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.modeToggle,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Modo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.modeButton(mode === 'markdown', 'markdown'),\n            onClick: () => handleModeToggle('markdown'),\n            onMouseEnter: e => {\n              if (mode !== 'markdown') {\n                e.target.style.backgroundColor = modeColors.markdown.hoverBg;\n              }\n            },\n            onMouseLeave: e => {\n              if (mode !== 'markdown') {\n                e.target.style.backgroundColor = modeColors.markdown.background;\n              }\n            },\n            children: \"Markdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.modeButton(mode === 'html', 'html'),\n            onClick: () => handleModeToggle('html'),\n            onMouseEnter: e => {\n              if (mode !== 'html') {\n                e.target.style.backgroundColor = modeColors.html.hoverBg;\n              }\n            },\n            onMouseLeave: e => {\n              if (mode !== 'html') {\n                e.target.style.backgroundColor = modeColors.html.background;\n              }\n            },\n            children: \"HTML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: styles.modeBadge,\n            children: mode === 'html' ? 'HTML' : 'MD'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorContent,\n      children: [activeTab === 'code' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n          onInsertMarkdown: handleToolbarAction,\n          mode: mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), isHighlightingEnabled ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n          content: internalContent,\n          mode: mode,\n          onChange: handleTextAreaChange,\n          textAreaRef: textAreaRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          value: internalContent,\n          onChange: handleTextAreaChange,\n          style: styles.plainTextarea,\n          placeholder: mode === 'markdown' ? \"Escribe tu post en formato Markdown...\" : \"Escribe código HTML aquí...\",\n          spellCheck: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), activeTab === 'preview' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.previewContainer,\n        children: mode === 'markdown' ? /*#__PURE__*/_jsxDEV(MarkdownPreview, {\n          content: internalContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(HTMLPreview, {\n          htmlContent: internalContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), internalContent.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.autoSaveIndicator,\n        children: \"Guardado autom\\xE1tico...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(DualModeEditor, \"jZXZ6EKAvpYTc74UULn3276SMh4=\");\n_c = DualModeEditor;\nexport default DualModeEditor;\nvar _c;\n$RefreshReg$(_c, \"DualModeEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","colors","spacing","typography","shadows","borderRadius","EditorToolbar","insertMarkdown","insertHTML","MarkdownPreview","HTMLPreview","SyntaxHighlighter","jsxDEV","_jsxDEV","Fragment","_Fragment","DualModeEditor","content","onChange","initialMode","_s","textAreaRef","mode","setMode","activeTab","setActiveTab","internalContent","setInternalContent","isHighlightingEnabled","setIsHighlightingEnabled","hasHTMLStructure","test","current","focus","handleToolbarAction","actionType","placeholder","newContent","updateContent","event","target","name","value","handleModeToggle","newMode","handleTextAreaChange","e","toggleSyntaxHighlighting","modeColors","markdown","background","text","hoverBg","activeBg","activeText","badge","html","styles","editorContainer","position","border","gray200","md","overflow","boxShadow","sm","maxWidth","margin","editorHeader","display","justifyContent","borderBottom","backgroundColor","modeToggle","alignItems","padding","xs","fontSize","gap","modeButton","isActive","modeType","cursor","transition","color","fontWeight","medium","regular","transform","tabsContainer","tab","xl","textSecondary","plainTextarea","width","height","fontFamily","lineHeight","resize","outline","overflowWrap","whiteSpace","previewContainer","autoSaveIndicator","bottom","right","white","opacity","modeBadge","round","marginLeft","editorContent","highlighterOptions","switchContainer","switchLabel","marginRight","switch","switchInput","switchSlider","top","left","switchThumb","style","children","onClick","src","alt","verticalAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","readOnly","onMouseEnter","onMouseLeave","onInsertMarkdown","ref","spellCheck","htmlContent","length","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/DualModeEditor.jsx"],"sourcesContent":["// src/components/admin/DualModeEditor.jsx\r\n// Versión actualizada con resaltado de sintaxis\r\n\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\r\nimport EditorToolbar from './EditorToolbar';\r\nimport { insertMarkdown, insertHTML } from './utils/editorUtils';\r\nimport MarkdownPreview from './MarkdownPreview';\r\nimport HTMLPreview from './HTMLPreview';\r\nimport SyntaxHighlighter from './SyntaxHighlighter'; // Importamos el nuevo componente\r\n\r\nconst DualModeEditor = ({ content, onChange, initialMode = 'markdown' }) => {\r\n  const textAreaRef = useRef(null);\r\n  const [mode, setMode] = useState(initialMode); // 'markdown' o 'html'\r\n  const [activeTab, setActiveTab] = useState('code'); // 'code' o 'preview'\r\n  const [internalContent, setInternalContent] = useState(content || '');\r\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\r\n\r\n  // Detectar si el contenido es HTML y actualizar modo si es necesario\r\n  useEffect(() => {\r\n    // Detecta si el contenido parece ser HTML basado en tags comunes\r\n    const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(content);\r\n    if (hasHTMLStructure && mode !== 'html') {\r\n      setMode('html');\r\n    }\r\n    \r\n    // Actualizar contenido interno cuando cambia el contenido externo\r\n    setInternalContent(content || '');\r\n  }, [content]);\r\n\r\n  // Cuando el modo cambia, asegurarse de que el contenido interno esté actualizado\r\n  useEffect(() => {\r\n    // Cuando se cambia el modo, enfocar el editor para facilitar la edición inmediata\r\n    if (textAreaRef.current) {\r\n      textAreaRef.current.focus();\r\n    }\r\n  }, [mode]);\r\n\r\n  const handleToolbarAction = (actionType, placeholder) => {\r\n    if (mode === 'markdown') {\r\n      const newContent = insertMarkdown(\r\n        internalContent,\r\n        actionType,\r\n        placeholder,\r\n        textAreaRef.current\r\n      );\r\n      updateContent(newContent);\r\n    } else {\r\n      const newContent = insertHTML(\r\n        internalContent,\r\n        actionType,\r\n        placeholder,\r\n        textAreaRef.current\r\n      );\r\n      updateContent(newContent);\r\n    }\r\n  };\r\n\r\n  const updateContent = (newContent) => {\r\n    setInternalContent(newContent);\r\n    \r\n    // Notificar al componente padre sobre el cambio\r\n    const event = {\r\n      target: {\r\n        name: 'content',\r\n        value: newContent\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  const handleModeToggle = (newMode) => {\r\n    // Al cambiar de modo, mantenemos el contenido pero cambiamos cómo se interpreta\r\n    setMode(newMode);\r\n    \r\n    // También notificamos al componente padre sobre el cambio de modo\r\n    const event = {\r\n      target: {\r\n        name: 'editorMode',\r\n        value: newMode\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  const handleTextAreaChange = (e) => {\r\n    setInternalContent(e.target.value);\r\n    onChange(e);\r\n  };\r\n\r\n  // Toggle para activar/desactivar el resaltado de sintaxis\r\n  const toggleSyntaxHighlighting = () => {\r\n    setIsHighlightingEnabled(!isHighlightingEnabled);\r\n  };\r\n\r\n  // Colores oficiales para los modos\r\n  const modeColors = {\r\n    markdown: {\r\n      background: '#2C3E50',\r\n      text: '#FFFFFF',\r\n      hoverBg: '#34495E',\r\n      activeBg: '#0095FF', // Color azul del logo de Markdown\r\n      activeText: '#FFFFFF',\r\n      badge: {\r\n        background: '#0095FF', // Color azul del logo de Markdown\r\n        text: '#FFFFFF'\r\n      }\r\n    },\r\n    html: {\r\n      background: '#2C3E50',\r\n      text: '#FFFFFF',\r\n      hoverBg: '#34495E',\r\n      activeBg: '#E34C26',\r\n      activeText: '#FFFFFF',\r\n      badge: {\r\n        background: '#E34C26',\r\n        text: '#FFFFFF'\r\n      }\r\n    }\r\n  };\r\n\r\n  // Estilos para el editor\r\n  const styles = {\r\n    editorContainer: {\r\n      position: 'relative',\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      overflow: 'hidden',\r\n      boxShadow: shadows.sm,\r\n      maxWidth: '960px', // Ancho máximo más generoso\r\n      margin: '0 auto', // Centrado horizontal\r\n    },\r\n    editorHeader: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      borderBottom: `1px solid ${colors.gray200}`,\r\n      backgroundColor: '#F8F9FA'\r\n    },\r\n    modeToggle: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      fontSize: typography.fontSize.sm,\r\n      gap: spacing.sm\r\n    },\r\n    modeButton: (isActive, modeType) => ({\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      backgroundColor: isActive ? \r\n        modeColors[modeType].activeBg : \r\n        modeColors[modeType].background,\r\n      border: 'none',\r\n      borderRadius: borderRadius.sm,\r\n      cursor: 'pointer',\r\n      fontSize: typography.fontSize.sm,\r\n      transition: 'all 0.2s ease',\r\n      color: isActive ? \r\n        modeColors[modeType].activeText : \r\n        modeColors[modeType].text,\r\n      fontWeight: isActive ? typography.fontWeight.medium : typography.fontWeight.regular,\r\n      boxShadow: isActive ? `0 2px 4px rgba(0,0,0,0.1)` : 'none',\r\n      transform: isActive ? 'translateY(-2px)' : 'translateY(0)'\r\n    }),\r\n    tabsContainer: {\r\n      display: 'flex'\r\n    },\r\n    tab: {\r\n      padding: `${spacing.sm} ${spacing.xl}`,\r\n      cursor: 'pointer',\r\n      border: 'none',\r\n      background: 'none',\r\n      fontWeight: typography.fontWeight.medium,\r\n      fontSize: typography.fontSize.md,\r\n      color: colors.textSecondary,\r\n      borderBottom: '2px solid transparent',\r\n      transition: 'all 0.2s ease'\r\n    },\r\n    activeTab: {\r\n      color: mode === 'markdown' ? '#0095FF' : '#E34C26',\r\n      borderBottom: `2px solid ${mode === 'markdown' ? '#0095FF' : '#E34C26'}`\r\n    },\r\n    plainTextarea: {\r\n      width: '100%',\r\n      height: '600px',\r\n      padding: spacing.md,\r\n      backgroundColor: '#1e1e1e',\r\n      color: '#d4d4d4',\r\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      resize: 'vertical',\r\n      outline: 'none',\r\n      overflowWrap: 'normal',\r\n      whiteSpace: 'pre',\r\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)'\r\n    },\r\n    previewContainer: {\r\n      width: '100%',\r\n      height: '600px',\r\n      padding: spacing.md,\r\n      backgroundColor: '#f9fafb',\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\r\n      overflow: 'auto'\r\n    },\r\n    autoSaveIndicator: {\r\n      position: 'absolute',\r\n      bottom: '10px',\r\n      right: '10px',\r\n      backgroundColor: mode === 'markdown' ? '#0095FF' : '#E34C26',\r\n      color: colors.white,\r\n      padding: `${spacing.xs} ${spacing.sm}`,\r\n      borderRadius: borderRadius.sm,\r\n      fontSize: typography.fontSize.xs,\r\n      opacity: 0.7\r\n    },\r\n    modeBadge: {\r\n      display: 'inline-block',\r\n      padding: `${spacing.xs} ${spacing.sm}`,\r\n      borderRadius: borderRadius.round,\r\n      fontSize: typography.fontSize.xs,\r\n      backgroundColor: mode === 'html' ? \r\n        modeColors.html.badge.background : \r\n        modeColors.markdown.badge.background,\r\n      color: mode === 'html' ? \r\n        modeColors.html.badge.text : \r\n        modeColors.markdown.badge.text,\r\n      marginLeft: spacing.sm,\r\n      fontWeight: typography.fontWeight.medium,\r\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n    },\r\n    editorContent: {\r\n      backgroundColor: '#f9fafb',\r\n      borderRadius: `0 0 ${borderRadius.md} ${borderRadius.md}`,\r\n      padding: spacing.sm,\r\n      border: 'none'\r\n    },\r\n    highlighterOptions: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: spacing.sm,\r\n      marginLeft: spacing.xl,\r\n    },\r\n    switchContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      cursor: 'pointer',\r\n    },\r\n    switchLabel: {\r\n      fontSize: typography.fontSize.sm,\r\n      color: colors.textSecondary,\r\n      marginRight: spacing.xs,\r\n    },\r\n    switch: {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      width: '40px',\r\n      height: '20px',\r\n    },\r\n    switchInput: {\r\n      opacity: 0,\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    switchSlider: {\r\n      position: 'absolute',\r\n      cursor: 'pointer',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: colors.gray200,\r\n      transition: '0.4s',\r\n      borderRadius: '20px',\r\n    },\r\n    switchThumb: (isActive) => ({\r\n      position: 'absolute',\r\n      cursor: 'pointer',\r\n      content: '\"\"',\r\n      height: '16px',\r\n      width: '16px',\r\n      left: isActive ? '22px' : '2px',\r\n      bottom: '2px',\r\n      backgroundColor: colors.white,\r\n      transition: '0.4s',\r\n      borderRadius: '50%',\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div style={styles.editorContainer}>\r\n      <div style={styles.editorHeader}>\r\n        <div style={styles.tabsContainer}>\r\n          <button\r\n            style={{\r\n              ...styles.tab,\r\n              ...(activeTab === 'code' ? styles.activeTab : {})\r\n            }}\r\n            onClick={() => setActiveTab('code')}\r\n          >\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n              <img \r\n                src=\"/assets/images/icons/CODE_icon.png\" \r\n                alt=\"Code\" \r\n                style={{ width: '16px', height: '16px', verticalAlign: 'middle' }} \r\n              />\r\n              <span>Code</span>\r\n            </div>\r\n          </button>\r\n          <button\r\n            style={{\r\n              ...styles.tab,\r\n              ...(activeTab === 'preview' ? styles.activeTab : {})\r\n            }}\r\n            onClick={() => setActiveTab('preview')}\r\n          >\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n              <img \r\n                src=\"/assets/images/icons/PREVIEW_icon.png\" \r\n                alt=\"Preview\" \r\n                style={{ width: '16px', height: '16px', verticalAlign: 'middle' }} \r\n              />\r\n              <span>Preview</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        \r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          {/* Opción para resaltado de sintaxis */}\r\n          {activeTab === 'code' && (\r\n            <div style={styles.highlighterOptions}>\r\n              <div \r\n                style={styles.switchContainer}\r\n                onClick={toggleSyntaxHighlighting}\r\n              >\r\n                <span style={styles.switchLabel}>Resaltado:</span>\r\n                <div style={styles.switch}>\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    checked={isHighlightingEnabled}\r\n                    style={styles.switchInput}\r\n                    readOnly\r\n                  />\r\n                  <span \r\n                    style={{\r\n                      ...styles.switchSlider,\r\n                      backgroundColor: isHighlightingEnabled \r\n                        ? (mode === 'markdown' ? '#0095FF' : '#E34C26')\r\n                        : colors.gray200\r\n                    }}\r\n                  >\r\n                    <span style={styles.switchThumb(isHighlightingEnabled)} />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div style={styles.modeToggle}>\r\n            <span>Modo:</span>\r\n            <button\r\n              style={styles.modeButton(mode === 'markdown', 'markdown')}\r\n              onClick={() => handleModeToggle('markdown')}\r\n              onMouseEnter={(e) => {\r\n                if (mode !== 'markdown') {\r\n                  e.target.style.backgroundColor = modeColors.markdown.hoverBg;\r\n                }\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                if (mode !== 'markdown') {\r\n                  e.target.style.backgroundColor = modeColors.markdown.background;\r\n                }\r\n              }}\r\n            >\r\n              Markdown\r\n            </button>\r\n            <button\r\n              style={styles.modeButton(mode === 'html', 'html')}\r\n              onClick={() => handleModeToggle('html')}\r\n              onMouseEnter={(e) => {\r\n                if (mode !== 'html') {\r\n                  e.target.style.backgroundColor = modeColors.html.hoverBg;\r\n                }\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                if (mode !== 'html') {\r\n                  e.target.style.backgroundColor = modeColors.html.background;\r\n                }\r\n              }}\r\n            >\r\n              HTML\r\n            </button>\r\n            <span style={styles.modeBadge}>\r\n              {mode === 'html' ? 'HTML' : 'MD'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div style={styles.editorContent}>\r\n        {activeTab === 'code' && (\r\n          <>\r\n            <EditorToolbar \r\n              onInsertMarkdown={handleToolbarAction} \r\n              mode={mode}\r\n            />\r\n            \r\n            {/* Usar el componente de resaltado si está habilitado, o el textarea normal si no */}\r\n            {isHighlightingEnabled ? (\r\n              <SyntaxHighlighter\r\n                content={internalContent}\r\n                mode={mode}\r\n                onChange={handleTextAreaChange}\r\n                textAreaRef={textAreaRef}\r\n              />\r\n            ) : (\r\n              <textarea\r\n                ref={textAreaRef}\r\n                value={internalContent}\r\n                onChange={handleTextAreaChange}\r\n                style={styles.plainTextarea}\r\n                placeholder={mode === 'markdown' \r\n                  ? \"Escribe tu post en formato Markdown...\" \r\n                  : \"Escribe código HTML aquí...\"\r\n                }\r\n                spellCheck=\"false\"\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {activeTab === 'preview' && (\r\n          <div style={styles.previewContainer}>\r\n            {mode === 'markdown' ? (\r\n              <MarkdownPreview content={internalContent} />\r\n            ) : (\r\n              <HTMLPreview htmlContent={internalContent} />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {internalContent.length > 0 && (\r\n          <div style={styles.autoSaveIndicator}>\r\n            Guardado automático...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DualModeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}