{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\FloatingToolbar.jsx\",\n  _s = $RefreshSig$();\n// Función para calcular la posición de la barra\nconst calculateBarPosition = selection => {\n  if (!editorRef.current) return;\n\n  // Calcular la posición de la barra\n  const editorRect = editorRef.current.getBoundingClientRect();\n\n  // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\n  const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\n  // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\n  const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\n  let newPosition;\n\n  // Determinar la línea en la que está el cursor (primera línea o no)\n  const range = selection.getRangeAt(0);\n  const rect = range.getBoundingClientRect();\n  const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\n\n  // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\n  const lineHeight = 20; // Altura estimada de la línea de texto\n\n  const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n  if (hasSelection) {\n    // Si hay selección, posicionar debajo de la selección\n    if (rect.width === 0) {\n      return;\n    }\n    newPosition = {\n      // Posicionamos la barra debajo de la línea de texto\n      top: rect.bottom - editorRect.top + 8,\n      // Alineamos con el inicio de la selección\n      left: rect.left - editorRect.left\n    };\n  } else {\n    // Si solo está activo el editor sin selección\n    const isNearLeftEdge = rect.left < editorRect.left + 50;\n\n    // Siempre colocar la barra debajo del cursor\n    newPosition = {\n      top: rect.bottom - editorRect.top + 8,\n      // Debajo del cursor\n      left: rect.left - editorRect.left // Alineado con el cursor\n    };\n\n    // Si no tenemos dimensiones válidas, usar posición por defecto\n    if (rect.width === 0 && rect.height === 0) {\n      newPosition = {\n        top: 30 + lineHeight,\n        // Debajo de la primera línea\n        left: 50 // Desde el borde izquierdo\n      };\n    }\n  }\n\n  // Ajustar para que no se salga del editor\n  if (toolbarRef.current) {\n    // Comprobar si la barra saldría por la derecha y ajustar\n    const rightEdge = newPosition.left + toolbarWidth;\n    if (rightEdge > editorRect.width - 10) {\n      newPosition.left = editorRect.width - toolbarWidth - 10;\n    }\n\n    // Comprobar si la barra saldría por la izquierda y ajustar\n    if (newPosition.left < 10) {\n      newPosition.left = 10;\n    }\n  }\n  setPosition(newPosition);\n};\nimport React, { useState, useEffect, useRef } from 'react';\nimport Tooltip from '../ui/Tooltip'; // Importamos el componente Tooltip\n\n// Tamaños de fuente predeterminados como en Word\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 120];\n\n// FloatingToolbar - Barra de herramientas flotante para edición de texto\n// Aparece cuando se hace clic en el editor o se selecciona texto\nconst FloatingToolbar = ({\n  onFormatText,\n  activeFormats,\n  editorRef,\n  fontSize,\n  setFontSize\n}) => {\n  _s();\n  // Estados del componente\n  const [visible, setVisible] = useState(false);\n  const [position, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\n  const [customFontSize, setCustomFontSize] = useState('');\n  const [isEditingFontSize, setIsEditingFontSize] = useState(false);\n  const [savedSelection, setSavedSelection] = useState(null);\n  const [activeTooltip, setActiveTooltip] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n\n  // Referencias\n  const toolbarRef = useRef(null);\n  const fontSizeMenuRef = useRef(null);\n  const customFontInputRef = useRef(null);\n\n  // Mostrar tooltip\n  const showTooltip = id => {\n    setActiveTooltip(id);\n  };\n\n  // Ocultar tooltip\n  const hideTooltip = () => {\n    setActiveTooltip(null);\n  };\n\n  // Estilos para la barra de herramientas\n  const styles = {\n    floatingBar: {\n      position: 'absolute',\n      zIndex: 1000,\n      display: visible ? 'flex' : 'none',\n      alignItems: 'center',\n      backgroundColor: 'rgb(209, 224, 217)',\n      borderRadius: '9px',\n      padding: '6px',\n      boxShadow: '0 3px 12px rgba(61, 42, 42, 0.2)',\n      transition: 'opacity 2s ease, transform 2s ease',\n      // Transición más lenta (2 segundos)\n      opacity: visible ? 1 : 0,\n      transform: visible ? 'translateY(0)' : 'translateY(10px)',\n      // Quitar translateX para evitar centrado\n      gap: '2px',\n      border: 'rgb(0, 0, 0)' // Añadir un borde sutil para mejorar la visibilidad\n    },\n    button: isActive => ({\n      background: 'none',\n      border: 'none',\n      borderRadius: '4px',\n      padding: '6px',\n      margin: '0 2px',\n      fontSize: '14px',\n      cursor: 'pointer',\n      color: isActive ? '#1b4fd9' : '#0b4444',\n      backgroundColor: isActive ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n      transition: 'all 0.2s ease',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '28px',\n      height: '28px',\n      position: 'relative'\n    }),\n    fontSizeButton: {\n      display: 'flex',\n      alignItems: 'center',\n      background: 'none',\n      border: '1px solid #e1e7e6',\n      borderRadius: '4px',\n      padding: '4px 8px',\n      margin: '0 2px',\n      fontSize: '13px',\n      cursor: 'pointer',\n      color: '#333333',\n      // Color más oscuro para mejor legibilidad\n      fontWeight: 'normal',\n      transition: 'all 0.2s ease',\n      position: 'relative'\n    },\n    fontSizeInput: {\n      width: '40px',\n      border: '1px solid #2B579A',\n      borderRadius: '4px',\n      padding: '4px',\n      fontSize: '13px',\n      color: '#333333',\n      textAlign: 'center',\n      outline: 'none',\n      backgroundColor: 'white'\n    },\n    fontSizeMenu: {\n      position: 'absolute',\n      top: '100%',\n      left: '0',\n      backgroundColor: 'white',\n      border: '1px solid #cccccc',\n      borderRadius: '4px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n      maxHeight: '300px',\n      overflow: 'auto',\n      zIndex: 1001,\n      display: showFontSizeMenu ? 'block' : 'none',\n      marginTop: '2px',\n      width: '50px'\n    },\n    fontSizeItem: {\n      padding: '6px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      transition: 'background-color 0.2s',\n      textAlign: 'center',\n      color: '#0b4444'\n    },\n    customOption: {\n      borderTop: '1px solid #e1e7e6',\n      fontStyle: 'italic',\n      padding: '6px 12px',\n      cursor: 'pointer',\n      userSelect: 'none',\n      textAlign: 'center',\n      color: '#2B579A'\n    },\n    separator: {\n      width: '1px',\n      height: '20px',\n      margin: '0 4px',\n      backgroundColor: '#e1e7e6'\n    },\n    sizeControls: {\n      display: 'flex',\n      alignItems: 'center',\n      position: 'relative'\n    },\n    incrementButton: {\n      background: 'none',\n      border: 'none',\n      padding: '3px 5px',\n      cursor: 'pointer',\n      color: '#2B579A',\n      fontSize: '14px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '3px',\n      position: 'relative'\n    }\n  };\n\n  // Función para guardar la selección actual\n  const saveSelection = () => {\n    const selection = window.getSelection();\n    if (selection.rangeCount > 0) {\n      const ranges = [];\n      for (let i = 0; i < selection.rangeCount; i++) {\n        ranges.push(selection.getRangeAt(i).cloneRange());\n      }\n      setSavedSelection(ranges);\n      return ranges;\n    }\n    return null;\n  };\n\n  // Función para restaurar la selección guardada\n  const restoreSelection = (ranges = savedSelection) => {\n    if (!ranges) return false;\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    ranges.forEach(range => {\n      selection.addRange(range);\n    });\n    return true;\n  };\n\n  // Función para verificar la selección de texto o si el editor está activo\n  const checkSelection = event => {\n    // Obtener la selección actual\n    const selection = window.getSelection();\n\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n    // independientemente del estado de escritura\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n    // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\n    if (isTyping && !hasTextSelection) return;\n    try {\n      // Evitar ocultar la barra si estamos interactuando con elementos de la barra\n      if (toolbarRef.current && (toolbarRef.current.contains(document.activeElement) || event && toolbarRef.current.contains(event.target))) {\n        return;\n      }\n\n      // Prevent hiding the toolbar if interacting with the font size menu\n      if (fontSizeMenuRef.current && (fontSizeMenuRef.current.contains(document.activeElement) || selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode))) {\n        return;\n      }\n\n      // Verificar si el editor está activo\n      const isEditorActive = editorRef.current === document.activeElement;\n\n      // Verificar si tenemos una selección válida\n      const hasSelection = selection && !selection.isCollapsed && editorRef.current;\n\n      // Si ni el editor está activo ni hay selección, ocultar la barra\n      if (!isEditorActive && !hasSelection) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Verificar si la selección o el cursor está dentro del editor\n      let isInEditor = false;\n      if (isEditorActive) {\n        isInEditor = true;\n      } else if (hasSelection) {\n        const range = selection.getRangeAt(0);\n        let container = range.commonAncestorContainer;\n\n        // Si el contenedor es un nodo de texto, obtener su elemento padre\n        if (container.nodeType === 3) {\n          container = container.parentNode;\n        }\n\n        // Verificar si el contenedor o algún antecesor es el editor\n        let current = container;\n        while (current && !isInEditor) {\n          if (current === editorRef.current) {\n            isInEditor = true;\n          }\n          current = current.parentNode;\n        }\n      }\n      if (!isInEditor) {\n        setVisible(false);\n        setShowFontSizeMenu(false);\n        return;\n      }\n\n      // Calcular la posición de la barra\n      const editorRect = editorRef.current.getBoundingClientRect();\n\n      // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\n      const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\n      // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\n      const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\n      let newPosition;\n\n      // Determinar la línea en la que está el cursor (primera línea o no)\n      const range = selection.getRangeAt(0);\n      const rect = range.getBoundingClientRect();\n      const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\n\n      // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\n      const lineHeight = 20; // Altura estimada de la línea de texto\n\n      if (hasSelection) {\n        // Si hay selección, posicionar debajo de la selección\n        if (rect.width === 0) {\n          setVisible(false);\n          setShowFontSizeMenu(false);\n          return;\n        }\n        newPosition = {\n          // Posicionamos la barra debajo de la línea de texto\n          top: rect.bottom - editorRect.top + 8,\n          // Alineamos con el inicio de la selección\n          left: rect.left - editorRect.left\n        };\n      } else {\n        // Si solo está activo el editor sin selección\n        const isNearLeftEdge = rect.left < editorRect.left + 50;\n\n        // Siempre colocar la barra debajo del cursor\n        newPosition = {\n          top: rect.bottom - editorRect.top + 8,\n          // Debajo del cursor\n          left: rect.left - editorRect.left // Alineado con el cursor\n        };\n\n        // Si no tenemos dimensiones válidas, usar posición por defecto\n        if (rect.width === 0 && rect.height === 0) {\n          newPosition = {\n            top: 30 + lineHeight,\n            // Debajo de la primera línea\n            left: 50 // Desde el borde izquierdo\n          };\n        }\n      }\n\n      // Ajustar para que no se salga del editor\n      if (toolbarRef.current) {\n        // Comprobar si la barra saldría por la derecha y ajustar\n        const rightEdge = newPosition.left + toolbarWidth;\n        if (rightEdge > editorRect.width - 10) {\n          newPosition.left = editorRect.width - toolbarWidth - 10;\n        }\n\n        // Comprobar si la barra saldría por la izquierda y ajustar\n        if (newPosition.left < 10) {\n          newPosition.left = 10;\n        }\n      }\n      setPosition(newPosition);\n      setVisible(true);\n\n      // Guardar la selección actual para poder restaurarla más tarde\n      saveSelection();\n    } catch (error) {\n      console.error('Error al verificar selección:', error);\n      setVisible(false);\n      setShowFontSizeMenu(false);\n    }\n  };\n\n  // Aplicar un tamaño de fuente específico\n  const applyFontSize = size => {\n    // Restaurar la selección antes de aplicar el formato\n    if (restoreSelection()) {\n      setFontSize(size); // Usar la función proporcionada por el componente padre\n    }\n    setShowFontSizeMenu(false);\n    setIsEditingFontSize(false);\n  };\n\n  // Maneja la entrada de texto para tamaño personalizado\n  const handleCustomFontSizeChange = e => {\n    // Solo permitir números y un punto decimal\n    const value = e.target.value.replace(/[^0-9.]/g, '');\n    // Evitar múltiples puntos decimales\n    if (value.split('.').length > 2) return;\n    setCustomFontSize(value);\n  };\n\n  // Maneja cuando el usuario confirma un tamaño personalizado\n  const handleCustomFontSizeSubmit = e => {\n    e.preventDefault();\n    if (customFontSize) {\n      const size = parseFloat(customFontSize);\n      // Validar que sea un número y esté en un rango razonable\n      if (!isNaN(size) && size >= 1 && size <= 500) {\n        applyFontSize(size);\n      }\n    }\n    setIsEditingFontSize(false);\n  };\n\n  // Incrementar/decrementar tamaño de fuente\n  const changeFontSize = increment => {\n    // Restaurar la selección antes de cambiar el tamaño\n    if (restoreSelection()) {\n      const currentIndex = FONT_SIZES.indexOf(fontSize);\n      if (increment && currentIndex < FONT_SIZES.length - 1) {\n        applyFontSize(FONT_SIZES[currentIndex + 1]);\n      } else if (!increment && currentIndex > 0) {\n        applyFontSize(FONT_SIZES[currentIndex - 1]);\n      }\n    }\n  };\n\n  // Activar el modo de edición de tamaño personalizado\n  const enableFontSizeEditing = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setIsEditingFontSize(true);\n    setCustomFontSize(fontSize.toString());\n    setShowFontSizeMenu(false);\n\n    // Enfocar el input después de que se haya renderizado\n    setTimeout(() => {\n      if (customFontInputRef.current) {\n        customFontInputRef.current.focus();\n        customFontInputRef.current.select();\n      }\n    }, 50);\n  };\n\n  // Toggle del menú de tamaños\n  const toggleFontSizeMenu = e => {\n    e.stopPropagation(); // Evitar la propagación del evento\n\n    // Guardar la selección actual si aún no se ha guardado\n    if (!savedSelection) {\n      saveSelection();\n    }\n    setShowFontSizeMenu(!showFontSizeMenu);\n  };\n\n  // Actualizar el estado local cuando cambia el tamaño de fuente recibido\n  useEffect(() => {\n    if (isEditingFontSize) {\n      setCustomFontSize(fontSize.toString());\n    }\n  }, [fontSize, isEditingFontSize]);\n\n  // Mostrar la barra al hacer clic en el editor\n  useEffect(() => {\n    const handleEditorClick = () => {\n      if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\n        checkSelection();\n      }\n    };\n    if (editorRef.current) {\n      editorRef.current.addEventListener('click', handleEditorClick);\n    }\n    return () => {\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('click', handleEditorClick);\n      }\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Detectar cambios en la selección y en el foco del editor\n  useEffect(() => {\n    // No agregar event listeners si no hay editorRef\n    if (!editorRef || !editorRef.current) return;\n\n    // Temporizador para controlar la visualización de la barra\n    let typingTimer;\n    const handleKeyDown = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Ocultar la barra inmediatamente al empezar a escribir\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleInput = e => {\n      // Marcar que estamos escribiendo\n      setIsTyping(true);\n      // Asegurarse de que la barra está oculta mientras se escribe\n      setVisible(false);\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n    };\n    const handleKeyUp = () => {\n      // Limpiar el temporizador anterior\n      clearTimeout(typingTimer);\n      // Configurar un nuevo temporizador\n      typingTimer = setTimeout(() => {\n        // Ya no estamos escribiendo\n        setIsTyping(false);\n        // Forzar la visualización de la barra después del tiempo de espera\n        const selection = window.getSelection();\n        if (selection && editorRef.current) {\n          // Asegurarse de que el editor sigue teniendo el foco\n          if (editorRef.current === document.activeElement) {\n            // Forzar la visualización de la barra, incluso si no hay cambios en la selección\n            calculateBarPosition(selection);\n            setVisible(true);\n          }\n        }\n      }, 1500); // Esperar 1.5 segundos después de dejar de escribir\n    };\n\n    // Deshabilitar temporalmente los eventos que podrían causar parpadeo\n    const handleSelectionChange = () => {\n      // Obtener la selección actual\n      const selection = window.getSelection();\n\n      // Si hay una selección de texto (no colapsada), siempre mostrar la barra\n      const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\n\n      // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\n      if (hasTextSelection || !isTyping) {\n        checkSelection();\n      }\n    };\n    document.addEventListener('selectionchange', handleSelectionChange);\n    editorRef.current.addEventListener('mouseup', handleSelectionChange);\n    editorRef.current.addEventListener('keydown', handleKeyDown);\n    editorRef.current.addEventListener('input', handleInput);\n    editorRef.current.addEventListener('keyup', handleKeyUp);\n    editorRef.current.addEventListener('focus', handleSelectionChange);\n\n    // Limpiar event listeners\n    return () => {\n      document.removeEventListener('selectionchange', handleSelectionChange);\n      if (editorRef.current) {\n        editorRef.current.removeEventListener('mouseup', handleSelectionChange);\n        editorRef.current.removeEventListener('keydown', handleKeyDown);\n        editorRef.current.removeEventListener('input', handleInput);\n        editorRef.current.removeEventListener('keyup', handleKeyUp);\n        editorRef.current.removeEventListener('focus', handleSelectionChange);\n      }\n      clearTimeout(typingTimer);\n    };\n  }, [editorRef === null || editorRef === void 0 ? void 0 : editorRef.current, isTyping]);\n\n  // Cerrar el menú cuando se hace clic fuera\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\n        setShowFontSizeMenu(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: toolbarRef,\n    style: {\n      ...styles.floatingBar,\n      top: `${position.top}px`,\n      left: `${position.left}px`\n      // Ya no transformamos con translateX(-50%) para evitar centrado\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.bold),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('bold');\n      },\n      onMouseEnter: () => showTooltip('bold'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'bold',\n        text: \"Negrita\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.italic),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('italic');\n      },\n      onMouseEnter: () => showTooltip('italic'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"\\uFF29\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'italic',\n        text: \"Cursiva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.underline),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('underline');\n      },\n      onMouseEnter: () => showTooltip('underline'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"U\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'underline',\n        text: \"Subrayado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.separator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.sizeControls,\n      children: [isEditingFontSize ?\n      /*#__PURE__*/\n      /* Campo de entrada para tamaño personalizado */\n      _jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          handleCustomFontSizeSubmit(e);\n        },\n        style: {\n          display: 'flex',\n          margin: '0 2px'\n        },\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: customFontInputRef,\n          type: \"text\",\n          value: customFontSize,\n          onChange: handleCustomFontSizeChange,\n          onBlur: e => {\n            // Permitir un poco de tiempo para que se procese el clic antes de cerrar\n            setTimeout(() => {\n              handleCustomFontSizeSubmit(e);\n            }, 100);\n          },\n          style: styles.fontSizeInput,\n          onClick: e => e.stopPropagation()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      /* Botón de tamaño actual con desplegable */\n      _jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.fontSizeButton,\n          onClick: enableFontSizeEditing // Al hacer clic directo, abre el editor de tamaño personalizado\n          ,\n          onDoubleClick: toggleFontSizeMenu // Doble clic muestra el menú\n          ,\n          onMouseEnter: () => showTooltip('fontSize'),\n          onMouseLeave: hideTooltip,\n          children: [fontSize, /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'fontSize',\n            text: \"Tama\\xF1o de fuente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: fontSizeMenuRef,\n          style: styles.fontSizeMenu,\n          onClick: e => e.stopPropagation(),\n          children: [FONT_SIZES.map(size => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.fontSizeItem,\n              backgroundColor: fontSize === size ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\n              fontWeight: fontSize === size ? 'bold' : 'normal'\n            },\n            onClick: e => {\n              e.stopPropagation();\n              applyFontSize(size);\n            },\n            onMouseEnter: e => {\n              e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n            },\n            onMouseLeave: e => {\n              if (fontSize !== size) {\n                e.currentTarget.style.backgroundColor = 'transparent';\n              }\n            },\n            children: size\n          }, size, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.customOption,\n            onClick: e => {\n              e.stopPropagation();\n              enableFontSizeEditing(e);\n            },\n            onMouseEnter: e => {\n              e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\n            },\n            onMouseLeave: e => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            },\n            children: \"Personalizado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.incrementButton,\n          onClick: e => {\n            e.stopPropagation();\n            changeFontSize(true);\n          },\n          onMouseEnter: () => showTooltip('increaseFontSize'),\n          onMouseLeave: hideTooltip,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#0b4444'\n            },\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'increaseFontSize',\n            text: \"Aumentar tama\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: styles.incrementButton,\n          onClick: e => {\n            e.stopPropagation();\n            changeFontSize(false);\n          },\n          onMouseEnter: () => showTooltip('decreaseFontSize'),\n          onMouseLeave: hideTooltip,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#0b4444'\n            },\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            isVisible: activeTooltip === 'decreaseFontSize',\n            text: \"Reducir tama\\xF1o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.separator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(false),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('textColor');\n      },\n      onMouseEnter: () => showTooltip('textColor'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#0b4444'\n        },\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'textColor',\n        text: \"Color de texto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.unorderedList),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('unorderedList');\n      },\n      onMouseEnter: () => showTooltip('unorderedList'),\n      onMouseLeave: hideTooltip,\n      children: [\"\\u2022\", /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'unorderedList',\n        text: \"Lista con vi\\xF1etas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(activeFormats.link),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('link');\n      },\n      onMouseEnter: () => showTooltip('link'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/icons/LINK_icon.png\",\n        style: styles.iconImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'link',\n        text: \"Insertar enlace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      style: styles.button(false),\n      onClick: () => {\n        restoreSelection();\n        onFormatText('image');\n      },\n      onMouseEnter: () => showTooltip('image'),\n      onMouseLeave: hideTooltip,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/assets/images/icons/IMG_icon.png\",\n        style: styles.iconImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        isVisible: activeTooltip === 'image',\n        text: \"Insertar imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 611,\n    columnNumber: 3\n  }, this);\n};\n_s(FloatingToolbar, \"Ja19opFrOZ38FK156Qr9trs6Sig=\");\n_c = FloatingToolbar;\nexport default FloatingToolbar;\nvar _c;\n$RefreshReg$(_c, \"FloatingToolbar\");","map":{"version":3,"names":["calculateBarPosition","selection","editorRef","current","editorRect","getBoundingClientRect","toolbarHeight","toolbarRef","offsetHeight","toolbarWidth","offsetWidth","newPosition","range","getRangeAt","rect","isFirstLine","top","lineHeight","hasSelection","isCollapsed","width","bottom","left","isNearLeftEdge","height","rightEdge","setPosition","React","useState","useEffect","useRef","Tooltip","jsxDEV","_jsxDEV","FONT_SIZES","FloatingToolbar","onFormatText","activeFormats","fontSize","setFontSize","_s","visible","setVisible","position","showFontSizeMenu","setShowFontSizeMenu","customFontSize","setCustomFontSize","isEditingFontSize","setIsEditingFontSize","savedSelection","setSavedSelection","activeTooltip","setActiveTooltip","isTyping","setIsTyping","fontSizeMenuRef","customFontInputRef","showTooltip","id","hideTooltip","styles","floatingBar","zIndex","display","alignItems","backgroundColor","borderRadius","padding","boxShadow","transition","opacity","transform","gap","border","button","isActive","background","margin","cursor","color","justifyContent","fontSizeButton","fontWeight","fontSizeInput","textAlign","outline","fontSizeMenu","maxHeight","overflow","marginTop","fontSizeItem","userSelect","customOption","borderTop","fontStyle","separator","sizeControls","incrementButton","saveSelection","window","getSelection","rangeCount","ranges","i","push","cloneRange","restoreSelection","removeAllRanges","forEach","addRange","checkSelection","event","hasTextSelection","toString","trim","contains","document","activeElement","target","anchorNode","isEditorActive","isInEditor","container","commonAncestorContainer","nodeType","parentNode","error","console","applyFontSize","size","handleCustomFontSizeChange","e","value","replace","split","length","handleCustomFontSizeSubmit","preventDefault","parseFloat","isNaN","changeFontSize","increment","currentIndex","indexOf","enableFontSizeEditing","stopPropagation","setTimeout","focus","select","toggleFontSizeMenu","handleEditorClick","addEventListener","removeEventListener","typingTimer","handleKeyDown","clearTimeout","handleInput","handleKeyUp","handleSelectionChange","handleClickOutside","ref","style","children","type","bold","onClick","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","isVisible","text","italic","underline","onSubmit","onChange","onBlur","onDoubleClick","map","currentTarget","unorderedList","link","src","iconImage","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/FloatingToolbar.jsx"],"sourcesContent":["// Función para calcular la posición de la barra\r\nconst calculateBarPosition = (selection) => {\r\n  if (!editorRef.current) return;\r\n  \r\n  // Calcular la posición de la barra\r\n  const editorRect = editorRef.current.getBoundingClientRect();\r\n  \r\n  // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\r\n  const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\r\n  // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\r\n  const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\r\n  \r\n  let newPosition;\r\n  \r\n  // Determinar la línea en la que está el cursor (primera línea o no)\r\n  const range = selection.getRangeAt(0);\r\n  const rect = range.getBoundingClientRect();\r\n  const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\r\n  \r\n  // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\r\n  const lineHeight = 20; // Altura estimada de la línea de texto\r\n  \r\n  const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n  \r\n  if (hasSelection) {\r\n    // Si hay selección, posicionar debajo de la selección\r\n    if (rect.width === 0) {\r\n      return;\r\n    }\r\n    \r\n    newPosition = {\r\n      // Posicionamos la barra debajo de la línea de texto\r\n      top: rect.bottom - editorRect.top + 8,\r\n      // Alineamos con el inicio de la selección\r\n      left: rect.left - editorRect.left\r\n    };\r\n  } else {\r\n    // Si solo está activo el editor sin selección\r\n    const isNearLeftEdge = rect.left < editorRect.left + 50;\r\n    \r\n    // Siempre colocar la barra debajo del cursor\r\n    newPosition = {\r\n      top: rect.bottom - editorRect.top + 8, // Debajo del cursor\r\n      left: rect.left - editorRect.left // Alineado con el cursor\r\n    };\r\n    \r\n    // Si no tenemos dimensiones válidas, usar posición por defecto\r\n    if (rect.width === 0 && rect.height === 0) {\r\n      newPosition = {\r\n        top: 30 + lineHeight, // Debajo de la primera línea\r\n        left: 50 // Desde el borde izquierdo\r\n      };\r\n    }\r\n  }\r\n  \r\n  // Ajustar para que no se salga del editor\r\n  if (toolbarRef.current) {\r\n    // Comprobar si la barra saldría por la derecha y ajustar\r\n    const rightEdge = newPosition.left + toolbarWidth;\r\n    if (rightEdge > editorRect.width - 10) {\r\n      newPosition.left = editorRect.width - toolbarWidth - 10;\r\n    }\r\n    \r\n    // Comprobar si la barra saldría por la izquierda y ajustar\r\n    if (newPosition.left < 10) {\r\n      newPosition.left = 10;\r\n    }\r\n  }\r\n  \r\n  setPosition(newPosition);\r\n};import React, { useState, useEffect, useRef } from 'react';\r\nimport Tooltip from '../ui/Tooltip'; // Importamos el componente Tooltip\r\n\r\n// Tamaños de fuente predeterminados como en Word\r\nconst FONT_SIZES = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72,120];\r\n\r\n// FloatingToolbar - Barra de herramientas flotante para edición de texto\r\n// Aparece cuando se hace clic en el editor o se selecciona texto\r\nconst FloatingToolbar = ({ onFormatText, activeFormats, editorRef, fontSize, setFontSize }) => {\r\n// Estados del componente\r\nconst [visible, setVisible] = useState(false);\r\nconst [position, setPosition] = useState({ top: 0, left: 0 });\r\nconst [showFontSizeMenu, setShowFontSizeMenu] = useState(false);\r\nconst [customFontSize, setCustomFontSize] = useState('');\r\nconst [isEditingFontSize, setIsEditingFontSize] = useState(false);\r\nconst [savedSelection, setSavedSelection] = useState(null);\r\nconst [activeTooltip, setActiveTooltip] = useState(null);\r\nconst [isTyping, setIsTyping] = useState(false);\r\n\r\n// Referencias\r\nconst toolbarRef = useRef(null);\r\nconst fontSizeMenuRef = useRef(null);\r\nconst customFontInputRef = useRef(null);\r\n\r\n// Mostrar tooltip\r\nconst showTooltip = (id) => {\r\n  setActiveTooltip(id);\r\n};\r\n\r\n// Ocultar tooltip\r\nconst hideTooltip = () => {\r\n  setActiveTooltip(null);\r\n};\r\n\r\n// Estilos para la barra de herramientas\r\nconst styles = {\r\n        floatingBar: {\r\n    position: 'absolute',\r\n    zIndex: 1000,\r\n    display: visible ? 'flex' : 'none',\r\n    alignItems: 'center',\r\n    backgroundColor:  'rgb(209, 224, 217)',\r\n    borderRadius: '9px',\r\n    padding: '6px',\r\n    boxShadow: '0 3px 12px rgba(61, 42, 42, 0.2)',\r\n    transition: 'opacity 2s ease, transform 2s ease', // Transición más lenta (2 segundos)\r\n    opacity: visible ? 1 : 0,\r\n    transform: visible ? 'translateY(0)' : 'translateY(10px)', // Quitar translateX para evitar centrado\r\n    gap: '2px',\r\n    border: 'rgb(0, 0, 0)' // Añadir un borde sutil para mejorar la visibilidad\r\n  },\r\n  button: (isActive) => ({\r\n    background: 'none',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    padding: '6px',\r\n    margin: '0 2px',\r\n    fontSize: '14px',\r\n    cursor: 'pointer',\r\n    color: isActive ? '#1b4fd9' : '#0b4444',\r\n    backgroundColor: isActive ? 'rgba(43, 87, 154, 0.1)' : 'transparent',\r\n    transition: 'all 0.2s ease',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '28px',\r\n    height: '28px',\r\n    position: 'relative'\r\n  }),\r\n  fontSizeButton: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    background: 'none',\r\n    border: '1px solid #e1e7e6',\r\n    borderRadius: '4px',\r\n    padding: '4px 8px',\r\n    margin: '0 2px',\r\n    fontSize: '13px',\r\n    cursor: 'pointer',\r\n    color: '#333333', // Color más oscuro para mejor legibilidad\r\n    fontWeight: 'normal',\r\n    transition: 'all 0.2s ease',\r\n    position: 'relative'\r\n  },\r\n  fontSizeInput: {\r\n    width: '40px',\r\n    border: '1px solid #2B579A',\r\n    borderRadius: '4px',\r\n    padding: '4px',\r\n    fontSize: '13px',\r\n    color: '#333333',\r\n    textAlign: 'center',\r\n    outline: 'none',\r\n    backgroundColor: 'white'\r\n  },\r\n  fontSizeMenu: {\r\n    position: 'absolute',\r\n    top: '100%',\r\n    left: '0',\r\n    backgroundColor: 'white',\r\n    border: '1px solid #cccccc',\r\n    borderRadius: '4px',\r\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n    zIndex: 1001,\r\n    display: showFontSizeMenu ? 'block' : 'none',\r\n    marginTop: '2px',\r\n    width: '50px'\r\n  },\r\n  fontSizeItem: {\r\n    padding: '6px 12px',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    transition: 'background-color 0.2s',\r\n    textAlign: 'center',\r\n    color: '#0b4444'\r\n  },\r\n  customOption: {\r\n    borderTop: '1px solid #e1e7e6', \r\n    fontStyle: 'italic',\r\n    padding: '6px 12px',\r\n    cursor: 'pointer',\r\n    userSelect: 'none',\r\n    textAlign: 'center',\r\n    color: '#2B579A'\r\n  },\r\n  separator: {\r\n    width: '1px',\r\n    height: '20px',\r\n    margin: '0 4px',\r\n    backgroundColor: '#e1e7e6'\r\n  },\r\n  sizeControls: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative'\r\n  },\r\n  incrementButton: {\r\n    background: 'none',\r\n    border: 'none',\r\n    padding: '3px 5px',\r\n    cursor: 'pointer',\r\n    color: '#2B579A', \r\n    fontSize: '14px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '3px',\r\n    position: 'relative'\r\n  }\r\n};\r\n\r\n// Función para guardar la selección actual\r\nconst saveSelection = () => {\r\n  const selection = window.getSelection();\r\n  if (selection.rangeCount > 0) {\r\n    const ranges = [];\r\n    for (let i = 0; i < selection.rangeCount; i++) {\r\n      ranges.push(selection.getRangeAt(i).cloneRange());\r\n    }\r\n    setSavedSelection(ranges);\r\n    return ranges;\r\n  }\r\n  return null;\r\n};\r\n\r\n// Función para restaurar la selección guardada\r\nconst restoreSelection = (ranges = savedSelection) => {\r\n  if (!ranges) return false;\r\n  \r\n  const selection = window.getSelection();\r\n  selection.removeAllRanges();\r\n  \r\n  ranges.forEach(range => {\r\n    selection.addRange(range);\r\n  });\r\n  \r\n  return true;\r\n};\r\n\r\n// Función para verificar la selección de texto o si el editor está activo\r\nconst checkSelection = (event) => {\r\n  // Obtener la selección actual\r\n  const selection = window.getSelection();\r\n  \r\n  // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n  // independientemente del estado de escritura\r\n  const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n  \r\n  // Si estamos escribiendo y no hay selección de texto, no mostrar la barra\r\n  if (isTyping && !hasTextSelection) return;\r\n  \r\n  try {\r\n\r\n    // Evitar ocultar la barra si estamos interactuando con elementos de la barra\r\n    if (\r\n      toolbarRef.current &&\r\n      (toolbarRef.current.contains(document.activeElement) ||\r\n       (event && toolbarRef.current.contains(event.target)))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // Prevent hiding the toolbar if interacting with the font size menu\r\n    if (\r\n      fontSizeMenuRef.current &&\r\n      (fontSizeMenuRef.current.contains(document.activeElement) ||\r\n       (selection.anchorNode && fontSizeMenuRef.current.contains(selection.anchorNode)))\r\n    ) {\r\n      return;\r\n    }\r\n    \r\n    // Verificar si el editor está activo\r\n    const isEditorActive = editorRef.current === document.activeElement;\r\n    \r\n    // Verificar si tenemos una selección válida\r\n    const hasSelection = selection && !selection.isCollapsed && editorRef.current;\r\n    \r\n    // Si ni el editor está activo ni hay selección, ocultar la barra\r\n    if (!isEditorActive && !hasSelection) {\r\n      setVisible(false);\r\n      setShowFontSizeMenu(false);\r\n      return;\r\n    }\r\n    \r\n    // Verificar si la selección o el cursor está dentro del editor\r\n    let isInEditor = false;\r\n    \r\n    if (isEditorActive) {\r\n      isInEditor = true;\r\n    } else if (hasSelection) {\r\n      const range = selection.getRangeAt(0);\r\n      let container = range.commonAncestorContainer;\r\n      \r\n      // Si el contenedor es un nodo de texto, obtener su elemento padre\r\n      if (container.nodeType === 3) {\r\n        container = container.parentNode;\r\n      }\r\n      \r\n      // Verificar si el contenedor o algún antecesor es el editor\r\n      let current = container;\r\n      \r\n      while (current && !isInEditor) {\r\n        if (current === editorRef.current) {\r\n          isInEditor = true;\r\n        }\r\n        current = current.parentNode;\r\n      }\r\n    }\r\n    \r\n    if (!isInEditor) {\r\n      setVisible(false);\r\n      setShowFontSizeMenu(false);\r\n      return;\r\n    }\r\n    \r\n    // Calcular la posición de la barra\r\n    const editorRect = editorRef.current.getBoundingClientRect();\r\n    \r\n    // Calculamos la altura de la barra (se estima en 40px si aún no está renderizada)\r\n    const toolbarHeight = toolbarRef.current ? toolbarRef.current.offsetHeight : 40;\r\n    // Calculamos el ancho de la barra (se estima en 300px si aún no está renderizada)\r\n    const toolbarWidth = toolbarRef.current ? toolbarRef.current.offsetWidth : 300;\r\n    \r\n    let newPosition;\r\n    \r\n    // Determinar la línea en la que está el cursor (primera línea o no)\r\n    const range = selection.getRangeAt(0);\r\n    const rect = range.getBoundingClientRect();\r\n    const isFirstLine = rect.top < editorRect.top + 30; // Aproximadamente primera línea\r\n    \r\n    // Calcular la altura de línea aproximada (puede ajustarse según el tipo de fuente)\r\n    const lineHeight = 20; // Altura estimada de la línea de texto\r\n    \r\n    if (hasSelection) {\r\n      // Si hay selección, posicionar debajo de la selección\r\n      if (rect.width === 0) {\r\n        setVisible(false);\r\n        setShowFontSizeMenu(false);\r\n        return;\r\n      }\r\n      \r\n      newPosition = {\r\n        // Posicionamos la barra debajo de la línea de texto\r\n        top: rect.bottom - editorRect.top + 8,\r\n        // Alineamos con el inicio de la selección\r\n        left: rect.left - editorRect.left\r\n      };\r\n    } else {\r\n      // Si solo está activo el editor sin selección\r\n      const isNearLeftEdge = rect.left < editorRect.left + 50;\r\n      \r\n      // Siempre colocar la barra debajo del cursor\r\n      newPosition = {\r\n        top: rect.bottom - editorRect.top + 8, // Debajo del cursor\r\n        left: rect.left - editorRect.left // Alineado con el cursor\r\n      };\r\n      \r\n      // Si no tenemos dimensiones válidas, usar posición por defecto\r\n      if (rect.width === 0 && rect.height === 0) {\r\n        newPosition = {\r\n          top: 30 + lineHeight, // Debajo de la primera línea\r\n          left: 50 // Desde el borde izquierdo\r\n        };\r\n      }\r\n    }\r\n    \r\n    // Ajustar para que no se salga del editor\r\n    if (toolbarRef.current) {\r\n      // Comprobar si la barra saldría por la derecha y ajustar\r\n      const rightEdge = newPosition.left + toolbarWidth;\r\n      if (rightEdge > editorRect.width - 10) {\r\n        newPosition.left = editorRect.width - toolbarWidth - 10;\r\n      }\r\n      \r\n      // Comprobar si la barra saldría por la izquierda y ajustar\r\n      if (newPosition.left < 10) {\r\n        newPosition.left = 10;\r\n      }\r\n    }\r\n    \r\n    setPosition(newPosition);\r\n    setVisible(true);\r\n    \r\n    // Guardar la selección actual para poder restaurarla más tarde\r\n    saveSelection();\r\n  } catch (error) {\r\n    console.error('Error al verificar selección:', error);\r\n    setVisible(false);\r\n    setShowFontSizeMenu(false);\r\n  }\r\n};\r\n\r\n// Aplicar un tamaño de fuente específico\r\nconst applyFontSize = (size) => {\r\n  // Restaurar la selección antes de aplicar el formato\r\n  if (restoreSelection()) {\r\n    setFontSize(size); // Usar la función proporcionada por el componente padre\r\n  }\r\n  setShowFontSizeMenu(false);\r\n  setIsEditingFontSize(false);\r\n};\r\n\r\n// Maneja la entrada de texto para tamaño personalizado\r\nconst handleCustomFontSizeChange = (e) => {\r\n  // Solo permitir números y un punto decimal\r\n  const value = e.target.value.replace(/[^0-9.]/g, '');\r\n  // Evitar múltiples puntos decimales\r\n  if (value.split('.').length > 2) return;\r\n  \r\n  setCustomFontSize(value);\r\n};\r\n\r\n// Maneja cuando el usuario confirma un tamaño personalizado\r\nconst handleCustomFontSizeSubmit = (e) => {\r\n  e.preventDefault();\r\n  \r\n  if (customFontSize) {\r\n    const size = parseFloat(customFontSize);\r\n    // Validar que sea un número y esté en un rango razonable\r\n    if (!isNaN(size) && size >= 1 && size <= 500) {\r\n      applyFontSize(size);\r\n    }\r\n  }\r\n  \r\n  setIsEditingFontSize(false);\r\n};\r\n\r\n// Incrementar/decrementar tamaño de fuente\r\nconst changeFontSize = (increment) => {\r\n  // Restaurar la selección antes de cambiar el tamaño\r\n  if (restoreSelection()) {\r\n    const currentIndex = FONT_SIZES.indexOf(fontSize);\r\n    \r\n    if (increment && currentIndex < FONT_SIZES.length - 1) {\r\n      applyFontSize(FONT_SIZES[currentIndex + 1]);\r\n    } else if (!increment && currentIndex > 0) {\r\n      applyFontSize(FONT_SIZES[currentIndex - 1]);\r\n    }\r\n  }\r\n};\r\n\r\n// Activar el modo de edición de tamaño personalizado\r\nconst enableFontSizeEditing = (e) => {\r\n  e.stopPropagation(); // Evitar la propagación del evento\r\n  \r\n  // Guardar la selección actual si aún no se ha guardado\r\n  if (!savedSelection) {\r\n    saveSelection();\r\n  }\r\n  \r\n  setIsEditingFontSize(true);\r\n  setCustomFontSize(fontSize.toString());\r\n  setShowFontSizeMenu(false);\r\n  \r\n  // Enfocar el input después de que se haya renderizado\r\n  setTimeout(() => {\r\n    if (customFontInputRef.current) {\r\n      customFontInputRef.current.focus();\r\n      customFontInputRef.current.select();\r\n    }\r\n  }, 50);\r\n};\r\n\r\n// Toggle del menú de tamaños\r\nconst toggleFontSizeMenu = (e) => {\r\n  e.stopPropagation(); // Evitar la propagación del evento\r\n  \r\n  // Guardar la selección actual si aún no se ha guardado\r\n  if (!savedSelection) {\r\n    saveSelection();\r\n  }\r\n  \r\n  setShowFontSizeMenu(!showFontSizeMenu);\r\n};\r\n\r\n// Actualizar el estado local cuando cambia el tamaño de fuente recibido\r\nuseEffect(() => {\r\n  if (isEditingFontSize) {\r\n    setCustomFontSize(fontSize.toString());\r\n  }\r\n}, [fontSize, isEditingFontSize]);\r\n\r\n// Mostrar la barra al hacer clic en el editor\r\nuseEffect(() => {\r\n  const handleEditorClick = () => {\r\n    if (editorRef.current && editorRef.current === document.activeElement && !isTyping) {\r\n      checkSelection();\r\n    }\r\n  };\r\n  \r\n  if (editorRef.current) {\r\n    editorRef.current.addEventListener('click', handleEditorClick);\r\n  }\r\n  \r\n  return () => {\r\n    if (editorRef.current) {\r\n      editorRef.current.removeEventListener('click', handleEditorClick);\r\n    }\r\n  };\r\n}, [editorRef?.current, isTyping]);\r\n\r\n// Detectar cambios en la selección y en el foco del editor\r\nuseEffect(() => {\r\n  // No agregar event listeners si no hay editorRef\r\n  if (!editorRef || !editorRef.current) return;\r\n  \r\n  // Temporizador para controlar la visualización de la barra\r\n  let typingTimer;\r\n  \r\n  const handleKeyDown = (e) => {\r\n    // Marcar que estamos escribiendo\r\n    setIsTyping(true);\r\n    // Ocultar la barra inmediatamente al empezar a escribir\r\n    setVisible(false);\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n  };\r\n  \r\n  const handleInput = (e) => {\r\n    // Marcar que estamos escribiendo\r\n    setIsTyping(true);\r\n    // Asegurarse de que la barra está oculta mientras se escribe\r\n    setVisible(false);\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n  };\r\n  \r\n  const handleKeyUp = () => {\r\n    // Limpiar el temporizador anterior\r\n    clearTimeout(typingTimer);\r\n    // Configurar un nuevo temporizador\r\n    typingTimer = setTimeout(() => {\r\n      // Ya no estamos escribiendo\r\n      setIsTyping(false);\r\n      // Forzar la visualización de la barra después del tiempo de espera\r\n      const selection = window.getSelection();\r\n      \r\n      if (selection && editorRef.current) {\r\n        // Asegurarse de que el editor sigue teniendo el foco\r\n        if (editorRef.current === document.activeElement) {\r\n          // Forzar la visualización de la barra, incluso si no hay cambios en la selección\r\n          calculateBarPosition(selection);\r\n          setVisible(true);\r\n        }\r\n      }\r\n    }, 1500); // Esperar 1.5 segundos después de dejar de escribir\r\n  };\r\n  \r\n  // Deshabilitar temporalmente los eventos que podrían causar parpadeo\r\n  const handleSelectionChange = () => {\r\n    // Obtener la selección actual\r\n    const selection = window.getSelection();\r\n    \r\n    // Si hay una selección de texto (no colapsada), siempre mostrar la barra\r\n    const hasTextSelection = selection && !selection.isCollapsed && selection.toString().trim() !== '';\r\n    \r\n    // Si hay texto seleccionado o no estamos escribiendo, verificar la selección\r\n    if (hasTextSelection || !isTyping) {\r\n      checkSelection();\r\n    }\r\n  };\r\n  \r\n  document.addEventListener('selectionchange', handleSelectionChange);\r\n  editorRef.current.addEventListener('mouseup', handleSelectionChange);\r\n  editorRef.current.addEventListener('keydown', handleKeyDown);\r\n  editorRef.current.addEventListener('input', handleInput);\r\n  editorRef.current.addEventListener('keyup', handleKeyUp);\r\n  editorRef.current.addEventListener('focus', handleSelectionChange);\r\n  \r\n  // Limpiar event listeners\r\n  return () => {\r\n    document.removeEventListener('selectionchange', handleSelectionChange);\r\n    if (editorRef.current) {\r\n      editorRef.current.removeEventListener('mouseup', handleSelectionChange);\r\n      editorRef.current.removeEventListener('keydown', handleKeyDown);\r\n      editorRef.current.removeEventListener('input', handleInput);\r\n      editorRef.current.removeEventListener('keyup', handleKeyUp);\r\n      editorRef.current.removeEventListener('focus', handleSelectionChange);\r\n    }\r\n    clearTimeout(typingTimer);\r\n  };\r\n}, [editorRef?.current, isTyping]);\r\n\r\n// Cerrar el menú cuando se hace clic fuera\r\nuseEffect(() => {\r\n  const handleClickOutside = (event) => {\r\n    if (fontSizeMenuRef.current && !fontSizeMenuRef.current.contains(event.target)) {\r\n      setShowFontSizeMenu(false);\r\n    }\r\n  };\r\n  \r\n  document.addEventListener('mousedown', handleClickOutside);\r\n  return () => {\r\n    document.removeEventListener('mousedown', handleClickOutside);\r\n  };\r\n}, []);\r\n\r\nreturn (\r\n  <div \r\n    ref={toolbarRef}\r\n    style={{\r\n      ...styles.floatingBar,\r\n      top: `${position.top}px`,\r\n      left: `${position.left}px`,\r\n      // Ya no transformamos con translateX(-50%) para evitar centrado\r\n    }}\r\n  >\r\n    {/* Formato de texto básico */}\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.bold)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('bold');\r\n      }}\r\n      onMouseEnter={() => showTooltip('bold')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <strong>B</strong>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'bold'}\r\n        text=\"Negrita\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n\r\n      style={styles.button(activeFormats.italic)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('italic');\r\n      }}\r\n      onMouseEnter={() => showTooltip('italic')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <em>Ｉ</em>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'italic'}\r\n        text=\"Cursiva\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.underline)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('underline');\r\n      }}\r\n      onMouseEnter={() => showTooltip('underline')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <u>U</u>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'underline'}\r\n        text=\"Subrayado\"\r\n      />\r\n    </button>\r\n    \r\n    <div style={styles.separator} />\r\n    \r\n    {/* Selector de tamaño de fuente tipo Word con opción personalizada */}\r\n    <div style={styles.sizeControls}>\r\n      {isEditingFontSize ? (\r\n        /* Campo de entrada para tamaño personalizado */\r\n        <form \r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            handleCustomFontSizeSubmit(e);\r\n          }} \r\n          style={{ display: 'flex', margin: '0 2px' }}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <input\r\n            ref={customFontInputRef}\r\n            type=\"text\"\r\n            value={customFontSize}\r\n            onChange={handleCustomFontSizeChange}\r\n            onBlur={(e) => {\r\n              // Permitir un poco de tiempo para que se procese el clic antes de cerrar\r\n              setTimeout(() => {\r\n                handleCustomFontSizeSubmit(e);\r\n              }, 100);\r\n            }}\r\n            style={styles.fontSizeInput}\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n        </form>\r\n      ) : (\r\n        /* Botón de tamaño actual con desplegable */\r\n        <div style={{ position: 'relative' }}>\r\n          <button\r\n            type=\"button\"\r\n            style={styles.fontSizeButton}\r\n            onClick={enableFontSizeEditing} // Al hacer clic directo, abre el editor de tamaño personalizado\r\n            onDoubleClick={toggleFontSizeMenu} // Doble clic muestra el menú\r\n            onMouseEnter={() => showTooltip('fontSize')}\r\n            onMouseLeave={hideTooltip}\r\n          >\r\n            {fontSize}\r\n            <Tooltip\r\n              isVisible={activeTooltip === 'fontSize'}\r\n              text=\"Tamaño de fuente\"\r\n            />\r\n          </button>\r\n          \r\n          {/* Menú desplegable con tamaños predefinidos */}\r\n          <div \r\n            ref={fontSizeMenuRef}\r\n            style={styles.fontSizeMenu}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {FONT_SIZES.map(size => (\r\n              <div\r\n                key={size}\r\n                style={{\r\n                  ...styles.fontSizeItem,\r\n                  backgroundColor: fontSize === size \r\n                    ? 'rgba(43, 87, 154, 0.1)' \r\n                    : 'transparent',\r\n                  fontWeight: fontSize === size ? 'bold' : 'normal'\r\n                }}\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  applyFontSize(size);\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  if (fontSize !== size) {\r\n                    e.currentTarget.style.backgroundColor = 'transparent';\r\n                  }\r\n                }}\r\n              >\r\n                {size}\r\n              </div>\r\n            ))}\r\n            {/* Opción de tamaño personalizado */}\r\n            <div\r\n              style={styles.customOption}\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                enableFontSizeEditing(e);\r\n              }}\r\n              onMouseEnter={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'rgba(43, 87, 154, 0.1)';\r\n              }}\r\n              onMouseLeave={(e) => {\r\n                e.currentTarget.style.backgroundColor = 'transparent';\r\n              }}\r\n            >\r\n              Personalizado\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Controles de incremento/decremento */}\r\n      <div>\r\n        <button\r\n          type=\"button\"\r\n          style={styles.incrementButton}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            changeFontSize(true);\r\n          }}\r\n          onMouseEnter={() => showTooltip('increaseFontSize')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ color: '#0b4444' }}>▲</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'increaseFontSize'}\r\n            text=\"Aumentar tamaño\"\r\n          />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          style={styles.incrementButton}\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            changeFontSize(false);\r\n          }}\r\n          onMouseEnter={() => showTooltip('decreaseFontSize')}\r\n          onMouseLeave={hideTooltip}\r\n        >\r\n          <span style={{ color: '#0b4444' }}>▼</span>\r\n          <Tooltip\r\n            isVisible={activeTooltip === 'decreaseFontSize'}\r\n            text=\"Reducir tamaño\"\r\n          />\r\n        </button>\r\n      </div>\r\n    </div>\r\n    \r\n    <div style={styles.separator} />\r\n    \r\n    {/* Opciones de formato avanzadas */}\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(false)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('textColor');\r\n      }}\r\n      onMouseEnter={() => showTooltip('textColor')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <span style={{ color: '#0b4444' }}>A\r\n        \r\n      </span>\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'textColor'}\r\n        text=\"Color de texto\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.unorderedList)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('unorderedList');\r\n      }}\r\n      onMouseEnter={() => showTooltip('unorderedList')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      •\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'unorderedList'}\r\n        text=\"Lista con viñetas\"\r\n      />\r\n    </button>\r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(activeFormats.link)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('link');\r\n      }}\r\n      onMouseEnter={() => showTooltip('link')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <img src=\"/assets/images/icons/LINK_icon.png\" style={styles.iconImage} />\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'link'}\r\n        text=\"Insertar enlace\"\r\n      />\r\n    </button>\r\n    \r\n    <button \r\n      type=\"button\"\r\n      style={styles.button(false)}\r\n      onClick={() => {\r\n        restoreSelection();\r\n        onFormatText('image');\r\n      }}\r\n      onMouseEnter={() => showTooltip('image')}\r\n      onMouseLeave={hideTooltip}\r\n    >\r\n      <img src=\"/assets/images/icons/IMG_icon.png\"  style={styles.iconImage} />\r\n      <Tooltip\r\n        isVisible={activeTooltip === 'image'}\r\n        text=\"Insertar imagen\"\r\n      />\r\n    </button>\r\n    \r\n\r\n  </div>\r\n);\r\n};\r\n\r\nexport default FloatingToolbar;"],"mappings":";;AAAA;AACA,MAAMA,oBAAoB,GAAIC,SAAS,IAAK;EAC1C,IAAI,CAACC,SAAS,CAACC,OAAO,EAAE;;EAExB;EACA,MAAMC,UAAU,GAAGF,SAAS,CAACC,OAAO,CAACE,qBAAqB,CAAC,CAAC;;EAE5D;EACA,MAAMC,aAAa,GAAGC,UAAU,CAACJ,OAAO,GAAGI,UAAU,CAACJ,OAAO,CAACK,YAAY,GAAG,EAAE;EAC/E;EACA,MAAMC,YAAY,GAAGF,UAAU,CAACJ,OAAO,GAAGI,UAAU,CAACJ,OAAO,CAACO,WAAW,GAAG,GAAG;EAE9E,IAAIC,WAAW;;EAEf;EACA,MAAMC,KAAK,GAAGX,SAAS,CAACY,UAAU,CAAC,CAAC,CAAC;EACrC,MAAMC,IAAI,GAAGF,KAAK,CAACP,qBAAqB,CAAC,CAAC;EAC1C,MAAMU,WAAW,GAAGD,IAAI,CAACE,GAAG,GAAGZ,UAAU,CAACY,GAAG,GAAG,EAAE,CAAC,CAAC;;EAEpD;EACA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;EAEvB,MAAMC,YAAY,GAAGjB,SAAS,IAAI,CAACA,SAAS,CAACkB,WAAW,IAAIjB,SAAS,CAACC,OAAO;EAE7E,IAAIe,YAAY,EAAE;IAChB;IACA,IAAIJ,IAAI,CAACM,KAAK,KAAK,CAAC,EAAE;MACpB;IACF;IAEAT,WAAW,GAAG;MACZ;MACAK,GAAG,EAAEF,IAAI,CAACO,MAAM,GAAGjB,UAAU,CAACY,GAAG,GAAG,CAAC;MACrC;MACAM,IAAI,EAAER,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB;IAC/B,CAAC;EACH,CAAC,MAAM;IACL;IACA,MAAMC,cAAc,GAAGT,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB,IAAI,GAAG,EAAE;;IAEvD;IACAX,WAAW,GAAG;MACZK,GAAG,EAAEF,IAAI,CAACO,MAAM,GAAGjB,UAAU,CAACY,GAAG,GAAG,CAAC;MAAE;MACvCM,IAAI,EAAER,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB,IAAI,CAAC;IACpC,CAAC;;IAED;IACA,IAAIR,IAAI,CAACM,KAAK,KAAK,CAAC,IAAIN,IAAI,CAACU,MAAM,KAAK,CAAC,EAAE;MACzCb,WAAW,GAAG;QACZK,GAAG,EAAE,EAAE,GAAGC,UAAU;QAAE;QACtBK,IAAI,EAAE,EAAE,CAAC;MACX,CAAC;IACH;EACF;;EAEA;EACA,IAAIf,UAAU,CAACJ,OAAO,EAAE;IACtB;IACA,MAAMsB,SAAS,GAAGd,WAAW,CAACW,IAAI,GAAGb,YAAY;IACjD,IAAIgB,SAAS,GAAGrB,UAAU,CAACgB,KAAK,GAAG,EAAE,EAAE;MACrCT,WAAW,CAACW,IAAI,GAAGlB,UAAU,CAACgB,KAAK,GAAGX,YAAY,GAAG,EAAE;IACzD;;IAEA;IACA,IAAIE,WAAW,CAACW,IAAI,GAAG,EAAE,EAAE;MACzBX,WAAW,CAACW,IAAI,GAAG,EAAE;IACvB;EACF;EAEAI,WAAW,CAACf,WAAW,CAAC;AAC1B,CAAC;AAAC,OAAOgB,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC5D,OAAOC,OAAO,MAAM,eAAe,CAAC,CAAC;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAC,GAAG,CAAC;;AAErF;AACA;AACA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,YAAY;EAAEC,aAAa;EAAEnC,SAAS;EAAEoC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC/F;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,QAAQ,EAAEjB,WAAW,CAAC,GAAGE,QAAQ,CAAC;IAAEZ,GAAG,EAAE,CAAC;IAAEM,IAAI,EAAE;EAAE,CAAC,CAAC;EAC7D,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMrB,UAAU,GAAGuB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM0B,eAAe,GAAG1B,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM2B,kBAAkB,GAAG3B,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAM4B,WAAW,GAAIC,EAAE,IAAK;IAC1BN,gBAAgB,CAACM,EAAE,CAAC;EACtB,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBP,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMQ,MAAM,GAAG;IACPC,WAAW,EAAE;MACjBnB,QAAQ,EAAE,UAAU;MACpBoB,MAAM,EAAE,IAAI;MACZC,OAAO,EAAEvB,OAAO,GAAG,MAAM,GAAG,MAAM;MAClCwB,UAAU,EAAE,QAAQ;MACpBC,eAAe,EAAG,oBAAoB;MACtCC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,kCAAkC;MAC7CC,UAAU,EAAE,oCAAoC;MAAE;MAClDC,OAAO,EAAE9B,OAAO,GAAG,CAAC,GAAG,CAAC;MACxB+B,SAAS,EAAE/B,OAAO,GAAG,eAAe,GAAG,kBAAkB;MAAE;MAC3DgC,GAAG,EAAE,KAAK;MACVC,MAAM,EAAE,cAAc,CAAC;IACzB,CAAC;IACDC,MAAM,EAAGC,QAAQ,KAAM;MACrBC,UAAU,EAAE,MAAM;MAClBH,MAAM,EAAE,MAAM;MACdP,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,KAAK;MACdU,MAAM,EAAE,OAAO;MACfxC,QAAQ,EAAE,MAAM;MAChByC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAEJ,QAAQ,GAAG,SAAS,GAAG,SAAS;MACvCV,eAAe,EAAEU,QAAQ,GAAG,wBAAwB,GAAG,aAAa;MACpEN,UAAU,EAAE,eAAe;MAC3BN,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBgB,cAAc,EAAE,QAAQ;MACxB7D,KAAK,EAAE,MAAM;MACbI,MAAM,EAAE,MAAM;MACdmB,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFuC,cAAc,EAAE;MACdlB,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBY,UAAU,EAAE,MAAM;MAClBH,MAAM,EAAE,mBAAmB;MAC3BP,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,SAAS;MAClBU,MAAM,EAAE,OAAO;MACfxC,QAAQ,EAAE,MAAM;MAChByC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAAE;MAClBG,UAAU,EAAE,QAAQ;MACpBb,UAAU,EAAE,eAAe;MAC3B3B,QAAQ,EAAE;IACZ,CAAC;IACDyC,aAAa,EAAE;MACbhE,KAAK,EAAE,MAAM;MACbsD,MAAM,EAAE,mBAAmB;MAC3BP,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,KAAK;MACd9B,QAAQ,EAAE,MAAM;MAChB0C,KAAK,EAAE,SAAS;MAChBK,SAAS,EAAE,QAAQ;MACnBC,OAAO,EAAE,MAAM;MACfpB,eAAe,EAAE;IACnB,CAAC;IACDqB,YAAY,EAAE;MACZ5C,QAAQ,EAAE,UAAU;MACpB3B,GAAG,EAAE,MAAM;MACXM,IAAI,EAAE,GAAG;MACT4C,eAAe,EAAE,OAAO;MACxBQ,MAAM,EAAE,mBAAmB;MAC3BP,YAAY,EAAE,KAAK;MACnBE,SAAS,EAAE,gCAAgC;MAC3CmB,SAAS,EAAE,OAAO;MAClBC,QAAQ,EAAE,MAAM;MAChB1B,MAAM,EAAE,IAAI;MACZC,OAAO,EAAEpB,gBAAgB,GAAG,OAAO,GAAG,MAAM;MAC5C8C,SAAS,EAAE,KAAK;MAChBtE,KAAK,EAAE;IACT,CAAC;IACDuE,YAAY,EAAE;MACZvB,OAAO,EAAE,UAAU;MACnBW,MAAM,EAAE,SAAS;MACjBa,UAAU,EAAE,MAAM;MAClBtB,UAAU,EAAE,uBAAuB;MACnCe,SAAS,EAAE,QAAQ;MACnBL,KAAK,EAAE;IACT,CAAC;IACDa,YAAY,EAAE;MACZC,SAAS,EAAE,mBAAmB;MAC9BC,SAAS,EAAE,QAAQ;MACnB3B,OAAO,EAAE,UAAU;MACnBW,MAAM,EAAE,SAAS;MACjBa,UAAU,EAAE,MAAM;MAClBP,SAAS,EAAE,QAAQ;MACnBL,KAAK,EAAE;IACT,CAAC;IACDgB,SAAS,EAAE;MACT5E,KAAK,EAAE,KAAK;MACZI,MAAM,EAAE,MAAM;MACdsD,MAAM,EAAE,OAAO;MACfZ,eAAe,EAAE;IACnB,CAAC;IACD+B,YAAY,EAAE;MACZjC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBtB,QAAQ,EAAE;IACZ,CAAC;IACDuD,eAAe,EAAE;MACfrB,UAAU,EAAE,MAAM;MAClBH,MAAM,EAAE,MAAM;MACdN,OAAO,EAAE,SAAS;MAClBW,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,SAAS;MAChB1C,QAAQ,EAAE,MAAM;MAChB0B,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBgB,cAAc,EAAE,QAAQ;MACxBd,YAAY,EAAE,KAAK;MACnBxB,QAAQ,EAAE;IACZ;EACF,CAAC;;EAED;EACA,MAAMwD,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMlG,SAAS,GAAGmG,MAAM,CAACC,YAAY,CAAC,CAAC;IACvC,IAAIpG,SAAS,CAACqG,UAAU,GAAG,CAAC,EAAE;MAC5B,MAAMC,MAAM,GAAG,EAAE;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvG,SAAS,CAACqG,UAAU,EAAEE,CAAC,EAAE,EAAE;QAC7CD,MAAM,CAACE,IAAI,CAACxG,SAAS,CAACY,UAAU,CAAC2F,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC;MACnD;MACAvD,iBAAiB,CAACoD,MAAM,CAAC;MACzB,OAAOA,MAAM;IACf;IACA,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAGA,CAACJ,MAAM,GAAGrD,cAAc,KAAK;IACpD,IAAI,CAACqD,MAAM,EAAE,OAAO,KAAK;IAEzB,MAAMtG,SAAS,GAAGmG,MAAM,CAACC,YAAY,CAAC,CAAC;IACvCpG,SAAS,CAAC2G,eAAe,CAAC,CAAC;IAE3BL,MAAM,CAACM,OAAO,CAACjG,KAAK,IAAI;MACtBX,SAAS,CAAC6G,QAAQ,CAAClG,KAAK,CAAC;IAC3B,CAAC,CAAC;IAEF,OAAO,IAAI;EACb,CAAC;;EAED;EACA,MAAMmG,cAAc,GAAIC,KAAK,IAAK;IAChC;IACA,MAAM/G,SAAS,GAAGmG,MAAM,CAACC,YAAY,CAAC,CAAC;;IAEvC;IACA;IACA,MAAMY,gBAAgB,GAAGhH,SAAS,IAAI,CAACA,SAAS,CAACkB,WAAW,IAAIlB,SAAS,CAACiH,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;;IAElG;IACA,IAAI7D,QAAQ,IAAI,CAAC2D,gBAAgB,EAAE;IAEnC,IAAI;MAEF;MACA,IACE1G,UAAU,CAACJ,OAAO,KACjBI,UAAU,CAACJ,OAAO,CAACiH,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC,IAClDN,KAAK,IAAIzG,UAAU,CAACJ,OAAO,CAACiH,QAAQ,CAACJ,KAAK,CAACO,MAAM,CAAE,CAAC,EACtD;QACA;MACF;;MAEA;MACA,IACE/D,eAAe,CAACrD,OAAO,KACtBqD,eAAe,CAACrD,OAAO,CAACiH,QAAQ,CAACC,QAAQ,CAACC,aAAa,CAAC,IACvDrH,SAAS,CAACuH,UAAU,IAAIhE,eAAe,CAACrD,OAAO,CAACiH,QAAQ,CAACnH,SAAS,CAACuH,UAAU,CAAE,CAAC,EAClF;QACA;MACF;;MAEA;MACA,MAAMC,cAAc,GAAGvH,SAAS,CAACC,OAAO,KAAKkH,QAAQ,CAACC,aAAa;;MAEnE;MACA,MAAMpG,YAAY,GAAGjB,SAAS,IAAI,CAACA,SAAS,CAACkB,WAAW,IAAIjB,SAAS,CAACC,OAAO;;MAE7E;MACA,IAAI,CAACsH,cAAc,IAAI,CAACvG,YAAY,EAAE;QACpCwB,UAAU,CAAC,KAAK,CAAC;QACjBG,mBAAmB,CAAC,KAAK,CAAC;QAC1B;MACF;;MAEA;MACA,IAAI6E,UAAU,GAAG,KAAK;MAEtB,IAAID,cAAc,EAAE;QAClBC,UAAU,GAAG,IAAI;MACnB,CAAC,MAAM,IAAIxG,YAAY,EAAE;QACvB,MAAMN,KAAK,GAAGX,SAAS,CAACY,UAAU,CAAC,CAAC,CAAC;QACrC,IAAI8G,SAAS,GAAG/G,KAAK,CAACgH,uBAAuB;;QAE7C;QACA,IAAID,SAAS,CAACE,QAAQ,KAAK,CAAC,EAAE;UAC5BF,SAAS,GAAGA,SAAS,CAACG,UAAU;QAClC;;QAEA;QACA,IAAI3H,OAAO,GAAGwH,SAAS;QAEvB,OAAOxH,OAAO,IAAI,CAACuH,UAAU,EAAE;UAC7B,IAAIvH,OAAO,KAAKD,SAAS,CAACC,OAAO,EAAE;YACjCuH,UAAU,GAAG,IAAI;UACnB;UACAvH,OAAO,GAAGA,OAAO,CAAC2H,UAAU;QAC9B;MACF;MAEA,IAAI,CAACJ,UAAU,EAAE;QACfhF,UAAU,CAAC,KAAK,CAAC;QACjBG,mBAAmB,CAAC,KAAK,CAAC;QAC1B;MACF;;MAEA;MACA,MAAMzC,UAAU,GAAGF,SAAS,CAACC,OAAO,CAACE,qBAAqB,CAAC,CAAC;;MAE5D;MACA,MAAMC,aAAa,GAAGC,UAAU,CAACJ,OAAO,GAAGI,UAAU,CAACJ,OAAO,CAACK,YAAY,GAAG,EAAE;MAC/E;MACA,MAAMC,YAAY,GAAGF,UAAU,CAACJ,OAAO,GAAGI,UAAU,CAACJ,OAAO,CAACO,WAAW,GAAG,GAAG;MAE9E,IAAIC,WAAW;;MAEf;MACA,MAAMC,KAAK,GAAGX,SAAS,CAACY,UAAU,CAAC,CAAC,CAAC;MACrC,MAAMC,IAAI,GAAGF,KAAK,CAACP,qBAAqB,CAAC,CAAC;MAC1C,MAAMU,WAAW,GAAGD,IAAI,CAACE,GAAG,GAAGZ,UAAU,CAACY,GAAG,GAAG,EAAE,CAAC,CAAC;;MAEpD;MACA,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;MAEvB,IAAIC,YAAY,EAAE;QAChB;QACA,IAAIJ,IAAI,CAACM,KAAK,KAAK,CAAC,EAAE;UACpBsB,UAAU,CAAC,KAAK,CAAC;UACjBG,mBAAmB,CAAC,KAAK,CAAC;UAC1B;QACF;QAEAlC,WAAW,GAAG;UACZ;UACAK,GAAG,EAAEF,IAAI,CAACO,MAAM,GAAGjB,UAAU,CAACY,GAAG,GAAG,CAAC;UACrC;UACAM,IAAI,EAAER,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB;QAC/B,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMC,cAAc,GAAGT,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB,IAAI,GAAG,EAAE;;QAEvD;QACAX,WAAW,GAAG;UACZK,GAAG,EAAEF,IAAI,CAACO,MAAM,GAAGjB,UAAU,CAACY,GAAG,GAAG,CAAC;UAAE;UACvCM,IAAI,EAAER,IAAI,CAACQ,IAAI,GAAGlB,UAAU,CAACkB,IAAI,CAAC;QACpC,CAAC;;QAED;QACA,IAAIR,IAAI,CAACM,KAAK,KAAK,CAAC,IAAIN,IAAI,CAACU,MAAM,KAAK,CAAC,EAAE;UACzCb,WAAW,GAAG;YACZK,GAAG,EAAE,EAAE,GAAGC,UAAU;YAAE;YACtBK,IAAI,EAAE,EAAE,CAAC;UACX,CAAC;QACH;MACF;;MAEA;MACA,IAAIf,UAAU,CAACJ,OAAO,EAAE;QACtB;QACA,MAAMsB,SAAS,GAAGd,WAAW,CAACW,IAAI,GAAGb,YAAY;QACjD,IAAIgB,SAAS,GAAGrB,UAAU,CAACgB,KAAK,GAAG,EAAE,EAAE;UACrCT,WAAW,CAACW,IAAI,GAAGlB,UAAU,CAACgB,KAAK,GAAGX,YAAY,GAAG,EAAE;QACzD;;QAEA;QACA,IAAIE,WAAW,CAACW,IAAI,GAAG,EAAE,EAAE;UACzBX,WAAW,CAACW,IAAI,GAAG,EAAE;QACvB;MACF;MAEAI,WAAW,CAACf,WAAW,CAAC;MACxB+B,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACAyD,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAO4B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDrF,UAAU,CAAC,KAAK,CAAC;MACjBG,mBAAmB,CAAC,KAAK,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMoF,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACA,IAAIvB,gBAAgB,CAAC,CAAC,EAAE;MACtBpE,WAAW,CAAC2F,IAAI,CAAC,CAAC,CAAC;IACrB;IACArF,mBAAmB,CAAC,KAAK,CAAC;IAC1BI,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMkF,0BAA0B,GAAIC,CAAC,IAAK;IACxC;IACA,MAAMC,KAAK,GAAGD,CAAC,CAACb,MAAM,CAACc,KAAK,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IACpD;IACA,IAAID,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IAEjCzF,iBAAiB,CAACsF,KAAK,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMI,0BAA0B,GAAIL,CAAC,IAAK;IACxCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAI5F,cAAc,EAAE;MAClB,MAAMoF,IAAI,GAAGS,UAAU,CAAC7F,cAAc,CAAC;MACvC;MACA,IAAI,CAAC8F,KAAK,CAACV,IAAI,CAAC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI,GAAG,EAAE;QAC5CD,aAAa,CAACC,IAAI,CAAC;MACrB;IACF;IAEAjF,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;;EAED;EACA,MAAM4F,cAAc,GAAIC,SAAS,IAAK;IACpC;IACA,IAAInC,gBAAgB,CAAC,CAAC,EAAE;MACtB,MAAMoC,YAAY,GAAG7G,UAAU,CAAC8G,OAAO,CAAC1G,QAAQ,CAAC;MAEjD,IAAIwG,SAAS,IAAIC,YAAY,GAAG7G,UAAU,CAACsG,MAAM,GAAG,CAAC,EAAE;QACrDP,aAAa,CAAC/F,UAAU,CAAC6G,YAAY,GAAG,CAAC,CAAC,CAAC;MAC7C,CAAC,MAAM,IAAI,CAACD,SAAS,IAAIC,YAAY,GAAG,CAAC,EAAE;QACzCd,aAAa,CAAC/F,UAAU,CAAC6G,YAAY,GAAG,CAAC,CAAC,CAAC;MAC7C;IACF;EACF,CAAC;;EAED;EACA,MAAME,qBAAqB,GAAIb,CAAC,IAAK;IACnCA,CAAC,CAACc,eAAe,CAAC,CAAC,CAAC,CAAC;;IAErB;IACA,IAAI,CAAChG,cAAc,EAAE;MACnBiD,aAAa,CAAC,CAAC;IACjB;IAEAlD,oBAAoB,CAAC,IAAI,CAAC;IAC1BF,iBAAiB,CAACT,QAAQ,CAAC4E,QAAQ,CAAC,CAAC,CAAC;IACtCrE,mBAAmB,CAAC,KAAK,CAAC;;IAE1B;IACAsG,UAAU,CAAC,MAAM;MACf,IAAI1F,kBAAkB,CAACtD,OAAO,EAAE;QAC9BsD,kBAAkB,CAACtD,OAAO,CAACiJ,KAAK,CAAC,CAAC;QAClC3F,kBAAkB,CAACtD,OAAO,CAACkJ,MAAM,CAAC,CAAC;MACrC;IACF,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAIlB,CAAC,IAAK;IAChCA,CAAC,CAACc,eAAe,CAAC,CAAC,CAAC,CAAC;;IAErB;IACA,IAAI,CAAChG,cAAc,EAAE;MACnBiD,aAAa,CAAC,CAAC;IACjB;IAEAtD,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAImB,iBAAiB,EAAE;MACrBD,iBAAiB,CAACT,QAAQ,CAAC4E,QAAQ,CAAC,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAAC5E,QAAQ,EAAEU,iBAAiB,CAAC,CAAC;;EAEjC;EACAnB,SAAS,CAAC,MAAM;IACd,MAAM0H,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIrJ,SAAS,CAACC,OAAO,IAAID,SAAS,CAACC,OAAO,KAAKkH,QAAQ,CAACC,aAAa,IAAI,CAAChE,QAAQ,EAAE;QAClFyD,cAAc,CAAC,CAAC;MAClB;IACF,CAAC;IAED,IAAI7G,SAAS,CAACC,OAAO,EAAE;MACrBD,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,OAAO,EAAED,iBAAiB,CAAC;IAChE;IAEA,OAAO,MAAM;MACX,IAAIrJ,SAAS,CAACC,OAAO,EAAE;QACrBD,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,OAAO,EAAEF,iBAAiB,CAAC;MACnE;IACF,CAAC;EACH,CAAC,EAAE,CAACrJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,OAAO,EAAEmD,QAAQ,CAAC,CAAC;;EAElC;EACAzB,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAAC3B,SAAS,IAAI,CAACA,SAAS,CAACC,OAAO,EAAE;;IAEtC;IACA,IAAIuJ,WAAW;IAEf,MAAMC,aAAa,GAAIvB,CAAC,IAAK;MAC3B;MACA7E,WAAW,CAAC,IAAI,CAAC;MACjB;MACAb,UAAU,CAAC,KAAK,CAAC;MACjB;MACAkH,YAAY,CAACF,WAAW,CAAC;IAC3B,CAAC;IAED,MAAMG,WAAW,GAAIzB,CAAC,IAAK;MACzB;MACA7E,WAAW,CAAC,IAAI,CAAC;MACjB;MACAb,UAAU,CAAC,KAAK,CAAC;MACjB;MACAkH,YAAY,CAACF,WAAW,CAAC;IAC3B,CAAC;IAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;MACxB;MACAF,YAAY,CAACF,WAAW,CAAC;MACzB;MACAA,WAAW,GAAGP,UAAU,CAAC,MAAM;QAC7B;QACA5F,WAAW,CAAC,KAAK,CAAC;QAClB;QACA,MAAMtD,SAAS,GAAGmG,MAAM,CAACC,YAAY,CAAC,CAAC;QAEvC,IAAIpG,SAAS,IAAIC,SAAS,CAACC,OAAO,EAAE;UAClC;UACA,IAAID,SAAS,CAACC,OAAO,KAAKkH,QAAQ,CAACC,aAAa,EAAE;YAChD;YACAtH,oBAAoB,CAACC,SAAS,CAAC;YAC/ByC,UAAU,CAAC,IAAI,CAAC;UAClB;QACF;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ,CAAC;;IAED;IACA,MAAMqH,qBAAqB,GAAGA,CAAA,KAAM;MAClC;MACA,MAAM9J,SAAS,GAAGmG,MAAM,CAACC,YAAY,CAAC,CAAC;;MAEvC;MACA,MAAMY,gBAAgB,GAAGhH,SAAS,IAAI,CAACA,SAAS,CAACkB,WAAW,IAAIlB,SAAS,CAACiH,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;;MAElG;MACA,IAAIF,gBAAgB,IAAI,CAAC3D,QAAQ,EAAE;QACjCyD,cAAc,CAAC,CAAC;MAClB;IACF,CAAC;IAEDM,QAAQ,CAACmC,gBAAgB,CAAC,iBAAiB,EAAEO,qBAAqB,CAAC;IACnE7J,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,SAAS,EAAEO,qBAAqB,CAAC;IACpE7J,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,SAAS,EAAEG,aAAa,CAAC;IAC5DzJ,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,OAAO,EAAEK,WAAW,CAAC;IACxD3J,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,OAAO,EAAEM,WAAW,CAAC;IACxD5J,SAAS,CAACC,OAAO,CAACqJ,gBAAgB,CAAC,OAAO,EAAEO,qBAAqB,CAAC;;IAElE;IACA,OAAO,MAAM;MACX1C,QAAQ,CAACoC,mBAAmB,CAAC,iBAAiB,EAAEM,qBAAqB,CAAC;MACtE,IAAI7J,SAAS,CAACC,OAAO,EAAE;QACrBD,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,SAAS,EAAEM,qBAAqB,CAAC;QACvE7J,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,SAAS,EAAEE,aAAa,CAAC;QAC/DzJ,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,OAAO,EAAEI,WAAW,CAAC;QAC3D3J,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,OAAO,EAAEK,WAAW,CAAC;QAC3D5J,SAAS,CAACC,OAAO,CAACsJ,mBAAmB,CAAC,OAAO,EAAEM,qBAAqB,CAAC;MACvE;MACAH,YAAY,CAACF,WAAW,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACxJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,OAAO,EAAEmD,QAAQ,CAAC,CAAC;;EAElC;EACAzB,SAAS,CAAC,MAAM;IACd,MAAMmI,kBAAkB,GAAIhD,KAAK,IAAK;MACpC,IAAIxD,eAAe,CAACrD,OAAO,IAAI,CAACqD,eAAe,CAACrD,OAAO,CAACiH,QAAQ,CAACJ,KAAK,CAACO,MAAM,CAAC,EAAE;QAC9E1E,mBAAmB,CAAC,KAAK,CAAC;MAC5B;IACF,CAAC;IAEDwE,QAAQ,CAACmC,gBAAgB,CAAC,WAAW,EAAEQ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACX3C,QAAQ,CAACoC,mBAAmB,CAAC,WAAW,EAAEO,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/H,OAAA;IACEgI,GAAG,EAAE1J,UAAW;IAChB2J,KAAK,EAAE;MACL,GAAGrG,MAAM,CAACC,WAAW;MACrB9C,GAAG,EAAE,GAAG2B,QAAQ,CAAC3B,GAAG,IAAI;MACxBM,IAAI,EAAE,GAAGqB,QAAQ,CAACrB,IAAI;MACtB;IACF,CAAE;IAAA6I,QAAA,gBAGFlI,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAACtC,aAAa,CAACgI,IAAI,CAAE;MACzCC,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,MAAM,CAAC;MACtB,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,MAAM,CAAE;MACxC8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAAkI,QAAA,EAAQ;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClB3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,MAAO;QACpC0H,IAAI,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MAEbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAACtC,aAAa,CAAC0I,MAAM,CAAE;MAC3CT,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,QAAQ,CAAC;MACxB,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,QAAQ,CAAE;MAC1C8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAAkI,QAAA,EAAI;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACV3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,QAAS;QACtC0H,IAAI,EAAC;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAACtC,aAAa,CAAC2I,SAAS,CAAE;MAC9CV,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,WAAW,CAAC;MAC3B,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,WAAW,CAAE;MAC7C8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAAkI,QAAA,EAAG;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACR3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,WAAY;QACzC0H,IAAI,EAAC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET3I,OAAA;MAAKiI,KAAK,EAAErG,MAAM,CAACmC;IAAU;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGhC3I,OAAA;MAAKiI,KAAK,EAAErG,MAAM,CAACoC,YAAa;MAAAkE,QAAA,GAC7BnH,iBAAiB;MAAA;MAChB;MACAf,OAAA;QACEgJ,QAAQ,EAAG7C,CAAC,IAAK;UACfA,CAAC,CAACM,cAAc,CAAC,CAAC;UAClBD,0BAA0B,CAACL,CAAC,CAAC;QAC/B,CAAE;QACF8B,KAAK,EAAE;UAAElG,OAAO,EAAE,MAAM;UAAEc,MAAM,EAAE;QAAQ,CAAE;QAC5CwF,OAAO,EAAGlC,CAAC,IAAKA,CAAC,CAACc,eAAe,CAAC,CAAE;QAAAiB,QAAA,eAEpClI,OAAA;UACEgI,GAAG,EAAExG,kBAAmB;UACxB2G,IAAI,EAAC,MAAM;UACX/B,KAAK,EAAEvF,cAAe;UACtBoI,QAAQ,EAAE/C,0BAA2B;UACrCgD,MAAM,EAAG/C,CAAC,IAAK;YACb;YACAe,UAAU,CAAC,MAAM;cACfV,0BAA0B,CAACL,CAAC,CAAC;YAC/B,CAAC,EAAE,GAAG,CAAC;UACT,CAAE;UACF8B,KAAK,EAAErG,MAAM,CAACuB,aAAc;UAC5BkF,OAAO,EAAGlC,CAAC,IAAKA,CAAC,CAACc,eAAe,CAAC;QAAE;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;MAAA;MAEP;MACA3I,OAAA;QAAKiI,KAAK,EAAE;UAAEvH,QAAQ,EAAE;QAAW,CAAE;QAAAwH,QAAA,gBACnClI,OAAA;UACEmI,IAAI,EAAC,QAAQ;UACbF,KAAK,EAAErG,MAAM,CAACqB,cAAe;UAC7BoF,OAAO,EAAErB,qBAAsB,CAAC;UAAA;UAChCmC,aAAa,EAAE9B,kBAAmB,CAAC;UAAA;UACnCiB,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,UAAU,CAAE;UAC5C8G,YAAY,EAAE5G,WAAY;UAAAuG,QAAA,GAEzB7H,QAAQ,eACTL,OAAA,CAACF,OAAO;YACN8I,SAAS,EAAEzH,aAAa,KAAK,UAAW;YACxC0H,IAAI,EAAC;UAAkB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eAGT3I,OAAA;UACEgI,GAAG,EAAEzG,eAAgB;UACrB0G,KAAK,EAAErG,MAAM,CAAC0B,YAAa;UAC3B+E,OAAO,EAAGlC,CAAC,IAAKA,CAAC,CAACc,eAAe,CAAC,CAAE;UAAAiB,QAAA,GAEnCjI,UAAU,CAACmJ,GAAG,CAACnD,IAAI,iBAClBjG,OAAA;YAEEiI,KAAK,EAAE;cACL,GAAGrG,MAAM,CAAC8B,YAAY;cACtBzB,eAAe,EAAE5B,QAAQ,KAAK4F,IAAI,GAC9B,wBAAwB,GACxB,aAAa;cACjB/C,UAAU,EAAE7C,QAAQ,KAAK4F,IAAI,GAAG,MAAM,GAAG;YAC3C,CAAE;YACFoC,OAAO,EAAGlC,CAAC,IAAK;cACdA,CAAC,CAACc,eAAe,CAAC,CAAC;cACnBjB,aAAa,CAACC,IAAI,CAAC;YACrB,CAAE;YACFqC,YAAY,EAAGnC,CAAC,IAAK;cACnBA,CAAC,CAACkD,aAAa,CAACpB,KAAK,CAAChG,eAAe,GAAG,wBAAwB;YAClE,CAAE;YACFsG,YAAY,EAAGpC,CAAC,IAAK;cACnB,IAAI9F,QAAQ,KAAK4F,IAAI,EAAE;gBACrBE,CAAC,CAACkD,aAAa,CAACpB,KAAK,CAAChG,eAAe,GAAG,aAAa;cACvD;YACF,CAAE;YAAAiG,QAAA,EAEDjC;UAAI,GArBAA,IAAI;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBN,CACN,CAAC,eAEF3I,OAAA;YACEiI,KAAK,EAAErG,MAAM,CAACgC,YAAa;YAC3ByE,OAAO,EAAGlC,CAAC,IAAK;cACdA,CAAC,CAACc,eAAe,CAAC,CAAC;cACnBD,qBAAqB,CAACb,CAAC,CAAC;YAC1B,CAAE;YACFmC,YAAY,EAAGnC,CAAC,IAAK;cACnBA,CAAC,CAACkD,aAAa,CAACpB,KAAK,CAAChG,eAAe,GAAG,wBAAwB;YAClE,CAAE;YACFsG,YAAY,EAAGpC,CAAC,IAAK;cACnBA,CAAC,CAACkD,aAAa,CAACpB,KAAK,CAAChG,eAAe,GAAG,aAAa;YACvD,CAAE;YAAAiG,QAAA,EACH;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAGD3I,OAAA;QAAAkI,QAAA,gBACElI,OAAA;UACEmI,IAAI,EAAC,QAAQ;UACbF,KAAK,EAAErG,MAAM,CAACqC,eAAgB;UAC9BoE,OAAO,EAAGlC,CAAC,IAAK;YACdA,CAAC,CAACc,eAAe,CAAC,CAAC;YACnBL,cAAc,CAAC,IAAI,CAAC;UACtB,CAAE;UACF0B,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,kBAAkB,CAAE;UACpD8G,YAAY,EAAE5G,WAAY;UAAAuG,QAAA,gBAE1BlI,OAAA;YAAMiI,KAAK,EAAE;cAAElF,KAAK,EAAE;YAAU,CAAE;YAAAmF,QAAA,EAAC;UAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3C3I,OAAA,CAACF,OAAO;YACN8I,SAAS,EAAEzH,aAAa,KAAK,kBAAmB;YAChD0H,IAAI,EAAC;UAAiB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT3I,OAAA;UACEmI,IAAI,EAAC,QAAQ;UACbF,KAAK,EAAErG,MAAM,CAACqC,eAAgB;UAC9BoE,OAAO,EAAGlC,CAAC,IAAK;YACdA,CAAC,CAACc,eAAe,CAAC,CAAC;YACnBL,cAAc,CAAC,KAAK,CAAC;UACvB,CAAE;UACF0B,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,kBAAkB,CAAE;UACpD8G,YAAY,EAAE5G,WAAY;UAAAuG,QAAA,gBAE1BlI,OAAA;YAAMiI,KAAK,EAAE;cAAElF,KAAK,EAAE;YAAU,CAAE;YAAAmF,QAAA,EAAC;UAAC;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3C3I,OAAA,CAACF,OAAO;YACN8I,SAAS,EAAEzH,aAAa,KAAK,kBAAmB;YAChD0H,IAAI,EAAC;UAAgB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN3I,OAAA;MAAKiI,KAAK,EAAErG,MAAM,CAACmC;IAAU;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGhC3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAAC,KAAK,CAAE;MAC5B2F,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,WAAW,CAAC;MAC3B,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,WAAW,CAAE;MAC7C8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAMiI,KAAK,EAAE;UAAElF,KAAK,EAAE;QAAU,CAAE;QAAAmF,QAAA,EAAC;MAEnC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACP3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,WAAY;QACzC0H,IAAI,EAAC;MAAgB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAACtC,aAAa,CAACkJ,aAAa,CAAE;MAClDjB,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,eAAe,CAAC;MAC/B,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,eAAe,CAAE;MACjD8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,GAC3B,QAEC,eAAAlI,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,eAAgB;QAC7C0H,IAAI,EAAC;MAAmB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAACtC,aAAa,CAACmJ,IAAI,CAAE;MACzClB,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,MAAM,CAAC;MACtB,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,MAAM,CAAE;MACxC8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAKwJ,GAAG,EAAC,oCAAoC;QAACvB,KAAK,EAAErG,MAAM,CAAC6H;MAAU;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzE3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,MAAO;QACpC0H,IAAI,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAET3I,OAAA;MACEmI,IAAI,EAAC,QAAQ;MACbF,KAAK,EAAErG,MAAM,CAACc,MAAM,CAAC,KAAK,CAAE;MAC5B2F,OAAO,EAAEA,CAAA,KAAM;QACb3D,gBAAgB,CAAC,CAAC;QAClBvE,YAAY,CAAC,OAAO,CAAC;MACvB,CAAE;MACFmI,YAAY,EAAEA,CAAA,KAAM7G,WAAW,CAAC,OAAO,CAAE;MACzC8G,YAAY,EAAE5G,WAAY;MAAAuG,QAAA,gBAE1BlI,OAAA;QAAKwJ,GAAG,EAAC,mCAAmC;QAAEvB,KAAK,EAAErG,MAAM,CAAC6H;MAAU;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzE3I,OAAA,CAACF,OAAO;QACN8I,SAAS,EAAEzH,aAAa,KAAK,OAAQ;QACrC0H,IAAI,EAAC;MAAiB;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGN,CAAC;AAER,CAAC;AAACpI,EAAA,CAlyBIL,eAAe;AAAAwJ,EAAA,GAAfxJ,eAAe;AAoyBrB,eAAeA,eAAe;AAAC,IAAAwJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}