{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\DualModeEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\nimport EditorToolbar from './EditorToolbar';\nimport { insertHTML } from './utils/editorUtils';\nimport HTMLPreview from './HTMLPreview';\nimport SyntaxHighlighter from './SyntaxHighlighter';\nimport SimpleEditor from './SimpleEditor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DualModeEditor = ({\n  content,\n  onChange,\n  initialMode = 'simple'\n}) => {\n  _s();\n  const textAreaRef = useRef(null);\n  const [mode, setMode] = useState(initialMode || 'simple'); // Usar initialMode o 'simple' por defecto\n  const [activeTab, setActiveTab] = useState('code'); // Solo usado en modo desarrollador\n  const [internalContent, setInternalContent] = useState(content || '');\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\n  const [simpleContent, setSimpleContent] = useState(content || '');\n\n  // Define los estilos aquí - común omitir esto y causar errores\n  const styles = {\n    editorContainer: {\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.lg,\n      overflow: \"hidden\",\n      backgroundColor: colors.white,\n      boxShadow: shadows.sm\n    },\n    editorHeader: {\n      backgroundColor: colors.gray100,\n      padding: spacing.md,\n      borderBottom: `1px solid ${colors.gray200}`,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      flexWrap: \"wrap\",\n      gap: spacing.md\n    },\n    modeToggle: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: spacing.sm\n    },\n    modeButton: (isActive, mode) => ({\n      backgroundColor: isActive ? mode === 'simple' ? colors.primary : colors.primary : \"transparent\",\n      color: isActive ? colors.white : colors.textPrimary,\n      border: `1px solid ${isActive ? 'transparent' : colors.gray200}`,\n      borderRadius: borderRadius.sm,\n      padding: `${spacing.xs} ${spacing.md}`,\n      fontSize: typography.fontSize.sm,\n      cursor: \"pointer\",\n      transition: \"all 0.3s ease\"\n    }),\n    modeBadge: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: mode === 'simple' ? colors.primary : colors.primary,\n      color: colors.white,\n      fontSize: typography.fontSize.xs,\n      padding: `2px ${spacing.xs}`,\n      borderRadius: borderRadius.round,\n      marginLeft: spacing.md\n    },\n    tabsContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: spacing.sm\n    },\n    tab: {\n      backgroundColor: \"transparent\",\n      border: \"none\",\n      padding: `${spacing.xs} ${spacing.md}`,\n      borderRadius: borderRadius.sm,\n      fontSize: typography.fontSize.sm,\n      cursor: \"pointer\",\n      transition: \"all 0.2s ease\",\n      color: colors.textSecondary\n    },\n    activeTab: {\n      backgroundColor: colors.primary + '15',\n      color: colors.primary,\n      fontWeight: typography.fontWeight.medium\n    },\n    editorContent: {\n      height: \"580px\",\n      position: \"relative\"\n    },\n    plainTextarea: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: spacing.lg,\n      fontSize: \"14px\",\n      fontFamily: \"monospace\",\n      lineHeight: 1.5,\n      border: \"none\",\n      resize: \"none\",\n      outline: \"none\",\n      boxSizing: \"border-box\",\n      backgroundColor: \"#1e1e1e\",\n      color: \"#d4d4d4\"\n    },\n    previewContainer: {\n      height: \"100%\",\n      padding: spacing.md,\n      overflow: \"auto\"\n    },\n    simpleEditorContainer: {\n      height: \"100%\"\n    },\n    highlighterOptions: {\n      marginLeft: \"auto\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    switchContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: spacing.sm,\n      cursor: \"pointer\"\n    },\n    switchLabel: {\n      fontSize: typography.fontSize.sm,\n      color: colors.textSecondary\n    },\n    switch: {\n      position: \"relative\",\n      display: \"inline-block\",\n      width: \"40px\",\n      height: \"20px\"\n    },\n    switchInput: {\n      opacity: 0,\n      width: 0,\n      height: 0\n    },\n    switchSlider: {\n      position: \"absolute\",\n      cursor: \"pointer\",\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: colors.gray200,\n      borderRadius: \"10px\",\n      transition: \"all 0.4s ease\"\n    },\n    switchThumb: isEnabled => ({\n      position: \"absolute\",\n      content: '\"\"',\n      height: \"16px\",\n      width: \"16px\",\n      left: isEnabled ? \"22px\" : \"2px\",\n      bottom: \"2px\",\n      backgroundColor: colors.white,\n      borderRadius: \"50%\",\n      transition: \"all 0.4s ease\"\n    }),\n    autoSaveIndicator: {\n      position: \"absolute\",\n      bottom: \"10px\",\n      right: \"10px\",\n      backgroundColor: \"rgba(11, 68, 68, 0.8)\",\n      color: colors.white,\n      padding: `${spacing.xs} ${spacing.sm}`,\n      borderRadius: borderRadius.sm,\n      fontSize: typography.fontSize.xs,\n      opacity: 0.7\n    }\n  };\n\n  // Detectar si el contenido es HTML y actualizar el modo si es necesario\n  useEffect(() => {\n    // Detectar si el contenido parece ser HTML basado en etiquetas comunes\n    const hasHTMLStructure = content && /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(content);\n\n    // Actualizar el contenido interno cuando cambia el contenido externo\n    setInternalContent(content || '');\n    setSimpleContent(content || '');\n\n    // Si parece ser HTML y estamos en modo simple, cambiar a modo desarrollador\n    if (hasHTMLStructure && mode === 'simple') {\n      setMode('developer');\n    }\n  }, [content, mode]);\n\n  // Manejar acciones de la barra de herramientas para el modo desarrollador\n  const handleToolbarAction = (actionType, placeholder) => {\n    if (mode === 'simple') {\n      // Para el modo simple, manejaremos esto de manera diferente\n      return;\n    }\n    const newContent = insertHTML(internalContent, actionType, placeholder, textAreaRef.current);\n    updateContent(newContent);\n  };\n\n  // Actualizar el contenido según el modo actual\n  const updateContent = newContent => {\n    setInternalContent(newContent);\n\n    // Notificar al componente padre sobre el cambio\n    const event = {\n      target: {\n        name: 'content',\n        value: newContent\n      }\n    };\n    onChange(event);\n  };\n\n  // Manejar cambio de modo entre desarrollador y simple\n  const handleModeToggle = newMode => {\n    setMode(newMode);\n\n    // Restablecer pestañas a vista de código al cambiar al modo desarrollador\n    if (newMode === 'developer') {\n      setActiveTab('code');\n    }\n\n    // Notificar al componente padre sobre el cambio de modo\n    const event = {\n      target: {\n        name: 'editorMode',\n        value: newMode === 'developer' ? 'html' : 'simple'\n      }\n    };\n    onChange(event);\n  };\n\n  // Manejar cambios en el área de texto\n  const handleTextAreaChange = e => {\n    setInternalContent(e.target.value);\n    onChange(e);\n  };\n\n  // Manejar cambios en el contenido del editor simple\n  const handleSimpleContentChange = newContent => {\n    setSimpleContent(newContent);\n\n    // Notificar al componente padre sobre el cambio\n    const event = {\n      target: {\n        name: 'content',\n        value: newContent\n      }\n    };\n    onChange(event);\n  };\n\n  // Alternar resaltado de sintaxis\n  const toggleSyntaxHighlighting = () => {\n    setIsHighlightingEnabled(!isHighlightingEnabled);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.editorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modeToggle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Modo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.modeButton(mode === 'simple', 'simple'),\n          onClick: () => handleModeToggle('simple'),\n          children: \"Simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.modeButton(mode === 'developer', 'developer'),\n          onClick: () => handleModeToggle('developer'),\n          children: \"Desarrollador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.modeBadge,\n          children: mode === 'developer' ? 'HTML' : 'Simple'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), mode === 'developer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tabsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'code' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('code'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'preview' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('preview'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), activeTab === 'code' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.highlighterOptions,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.switchContainer,\n            onClick: toggleSyntaxHighlighting,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.switchLabel,\n              children: \"Resaltado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.switch,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isHighlightingEnabled,\n                style: styles.switchInput,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  ...styles.switchSlider,\n                  backgroundColor: isHighlightingEnabled ? colors.primary : colors.gray200\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.switchThumb(isHighlightingEnabled)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorContent,\n      children: [mode === 'developer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'code' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n            onInsertMarkdown: handleToolbarAction,\n            mode: \"html\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), isHighlightingEnabled ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            content: internalContent,\n            mode: \"html\",\n            onChange: handleTextAreaChange,\n            textAreaRef: textAreaRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textAreaRef,\n            value: internalContent,\n            onChange: handleTextAreaChange,\n            style: styles.plainTextarea,\n            placeholder: \"Escribe c\\xF3digo HTML aqu\\xED...\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), activeTab === 'preview' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.previewContainer,\n          children: /*#__PURE__*/_jsxDEV(HTMLPreview, {\n            htmlContent: internalContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), mode === 'simple' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.simpleEditorContainer,\n        children: /*#__PURE__*/_jsxDEV(SimpleEditor, {\n          content: simpleContent,\n          onChange: handleSimpleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), internalContent.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.autoSaveIndicator,\n        children: \"Guardado autom\\xE1tico...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n};\n_s(DualModeEditor, \"16ZHLtsNU+ztMFO/vA31ITMEy+w=\");\n_c = DualModeEditor;\nexport default DualModeEditor;\nvar _c;\n$RefreshReg$(_c, \"DualModeEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","colors","spacing","typography","shadows","borderRadius","EditorToolbar","insertHTML","HTMLPreview","SyntaxHighlighter","SimpleEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","DualModeEditor","content","onChange","initialMode","_s","textAreaRef","mode","setMode","activeTab","setActiveTab","internalContent","setInternalContent","isHighlightingEnabled","setIsHighlightingEnabled","simpleContent","setSimpleContent","styles","editorContainer","border","gray200","lg","overflow","backgroundColor","white","boxShadow","sm","editorHeader","gray100","padding","md","borderBottom","display","justifyContent","alignItems","flexWrap","gap","modeToggle","modeButton","isActive","primary","color","textPrimary","xs","fontSize","cursor","transition","modeBadge","round","marginLeft","tabsContainer","tab","textSecondary","fontWeight","medium","editorContent","height","position","plainTextarea","width","fontFamily","lineHeight","resize","outline","boxSizing","previewContainer","simpleEditorContainer","highlighterOptions","switchContainer","switchLabel","switch","switchInput","opacity","switchSlider","top","left","right","bottom","switchThumb","isEnabled","autoSaveIndicator","hasHTMLStructure","test","handleToolbarAction","actionType","placeholder","newContent","current","updateContent","event","target","name","value","handleModeToggle","newMode","handleTextAreaChange","e","handleSimpleContentChange","toggleSyntaxHighlighting","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","readOnly","onInsertMarkdown","ref","spellCheck","htmlContent","length","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/DualModeEditor.jsx"],"sourcesContent":["\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\r\nimport EditorToolbar from './EditorToolbar';\r\nimport { insertHTML } from './utils/editorUtils';\r\nimport HTMLPreview from './HTMLPreview';\r\nimport SyntaxHighlighter from './SyntaxHighlighter';\r\nimport SimpleEditor from './SimpleEditor';\r\n\r\nconst DualModeEditor = ({ content, onChange, initialMode = 'simple' }) => {\r\n  const textAreaRef = useRef(null);\r\n  const [mode, setMode] = useState(initialMode || 'simple'); // Usar initialMode o 'simple' por defecto\r\n  const [activeTab, setActiveTab] = useState('code'); // Solo usado en modo desarrollador\r\n  const [internalContent, setInternalContent] = useState(content || '');\r\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\r\n  const [simpleContent, setSimpleContent] = useState(content || '');\r\n\r\n  // Define los estilos aquí - común omitir esto y causar errores\r\n  const styles = {\r\n    editorContainer: {\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.lg,\r\n      overflow: \"hidden\",\r\n      backgroundColor: colors.white,\r\n      boxShadow: shadows.sm\r\n    },\r\n    editorHeader: {\r\n      backgroundColor: colors.gray100,\r\n      padding: spacing.md,\r\n      borderBottom: `1px solid ${colors.gray200}`,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n      flexWrap: \"wrap\",\r\n      gap: spacing.md\r\n    },\r\n    modeToggle: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: spacing.sm\r\n    },\r\n    modeButton: (isActive, mode) => ({\r\n      backgroundColor: isActive ? (\r\n        mode === 'simple' ? colors.primary : colors.primary\r\n      ) : \"transparent\",\r\n      color: isActive ? colors.white : colors.textPrimary,\r\n      border: `1px solid ${isActive ? 'transparent' : colors.gray200}`,\r\n      borderRadius: borderRadius.sm,\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      fontSize: typography.fontSize.sm,\r\n      cursor: \"pointer\",\r\n      transition: \"all 0.3s ease\"\r\n    }),\r\n    modeBadge: {\r\n      display: \"inline-flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      backgroundColor: mode === 'simple' ? colors.primary : colors.primary,\r\n      color: colors.white,\r\n      fontSize: typography.fontSize.xs,\r\n      padding: `2px ${spacing.xs}`,\r\n      borderRadius: borderRadius.round,\r\n      marginLeft: spacing.md\r\n    },\r\n    tabsContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: spacing.sm\r\n    },\r\n    tab: {\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      borderRadius: borderRadius.sm,\r\n      fontSize: typography.fontSize.sm,\r\n      cursor: \"pointer\",\r\n      transition: \"all 0.2s ease\",\r\n      color: colors.textSecondary\r\n    },\r\n    activeTab: {\r\n      backgroundColor: colors.primary + '15',\r\n      color: colors.primary,\r\n      fontWeight: typography.fontWeight.medium\r\n    },\r\n    editorContent: {\r\n      height: \"580px\",\r\n      position: \"relative\"\r\n    },\r\n    plainTextarea: {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      padding: spacing.lg,\r\n      fontSize: \"14px\",\r\n      fontFamily: \"monospace\",\r\n      lineHeight: 1.5,\r\n      border: \"none\",\r\n      resize: \"none\",\r\n      outline: \"none\",\r\n      boxSizing: \"border-box\",\r\n      backgroundColor: \"#1e1e1e\",\r\n      color: \"#d4d4d4\"\r\n    },\r\n    previewContainer: {\r\n      height: \"100%\",\r\n      padding: spacing.md,\r\n      overflow: \"auto\"\r\n    },\r\n    simpleEditorContainer: {\r\n      height: \"100%\"\r\n    },\r\n    highlighterOptions: {\r\n      marginLeft: \"auto\",\r\n      display: \"flex\",\r\n      alignItems: \"center\"\r\n    },\r\n    switchContainer: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: spacing.sm,\r\n      cursor: \"pointer\"\r\n    },\r\n    switchLabel: {\r\n      fontSize: typography.fontSize.sm,\r\n      color: colors.textSecondary\r\n    },\r\n    switch: {\r\n      position: \"relative\",\r\n      display: \"inline-block\",\r\n      width: \"40px\",\r\n      height: \"20px\"\r\n    },\r\n    switchInput: {\r\n      opacity: 0,\r\n      width: 0,\r\n      height: 0\r\n    },\r\n    switchSlider: {\r\n      position: \"absolute\",\r\n      cursor: \"pointer\",\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: colors.gray200,\r\n      borderRadius: \"10px\",\r\n      transition: \"all 0.4s ease\"\r\n    },\r\n    switchThumb: (isEnabled) => ({\r\n      position: \"absolute\",\r\n      content: '\"\"',\r\n      height: \"16px\",\r\n      width: \"16px\",\r\n      left: isEnabled ? \"22px\" : \"2px\",\r\n      bottom: \"2px\",\r\n      backgroundColor: colors.white,\r\n      borderRadius: \"50%\",\r\n      transition: \"all 0.4s ease\"\r\n    }),\r\n    autoSaveIndicator: {\r\n      position: \"absolute\",\r\n      bottom: \"10px\",\r\n      right: \"10px\",\r\n      backgroundColor: \"rgba(11, 68, 68, 0.8)\",\r\n      color: colors.white,\r\n      padding: `${spacing.xs} ${spacing.sm}`,\r\n      borderRadius: borderRadius.sm,\r\n      fontSize: typography.fontSize.xs,\r\n      opacity: 0.7\r\n    }\r\n  };\r\n\r\n  // Detectar si el contenido es HTML y actualizar el modo si es necesario\r\n  useEffect(() => {\r\n    // Detectar si el contenido parece ser HTML basado en etiquetas comunes\r\n    const hasHTMLStructure = content && /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(content);\r\n    \r\n    // Actualizar el contenido interno cuando cambia el contenido externo\r\n    setInternalContent(content || '');\r\n    setSimpleContent(content || '');\r\n    \r\n    // Si parece ser HTML y estamos en modo simple, cambiar a modo desarrollador\r\n    if (hasHTMLStructure && mode === 'simple') {\r\n      setMode('developer');\r\n    }\r\n  }, [content, mode]);\r\n\r\n  // Manejar acciones de la barra de herramientas para el modo desarrollador\r\n  const handleToolbarAction = (actionType, placeholder) => {\r\n    if (mode === 'simple') {\r\n      // Para el modo simple, manejaremos esto de manera diferente\r\n      return;\r\n    }\r\n    \r\n    const newContent = insertHTML(\r\n      internalContent,\r\n      actionType,\r\n      placeholder,\r\n      textAreaRef.current\r\n    );\r\n    updateContent(newContent);\r\n  };\r\n\r\n  // Actualizar el contenido según el modo actual\r\n  const updateContent = (newContent) => {\r\n    setInternalContent(newContent);\r\n    \r\n    // Notificar al componente padre sobre el cambio\r\n    const event = {\r\n      target: {\r\n        name: 'content',\r\n        value: newContent\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Manejar cambio de modo entre desarrollador y simple\r\n  const handleModeToggle = (newMode) => {\r\n    setMode(newMode);\r\n    \r\n    // Restablecer pestañas a vista de código al cambiar al modo desarrollador\r\n    if (newMode === 'developer') {\r\n      setActiveTab('code');\r\n    }\r\n    \r\n    // Notificar al componente padre sobre el cambio de modo\r\n    const event = {\r\n      target: {\r\n        name: 'editorMode',\r\n        value: newMode === 'developer' ? 'html' : 'simple'\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Manejar cambios en el área de texto\r\n  const handleTextAreaChange = (e) => {\r\n    setInternalContent(e.target.value);\r\n    onChange(e);\r\n  };\r\n\r\n  // Manejar cambios en el contenido del editor simple\r\n  const handleSimpleContentChange = (newContent) => {\r\n    setSimpleContent(newContent);\r\n    \r\n    // Notificar al componente padre sobre el cambio\r\n    const event = {\r\n      target: {\r\n        name: 'content',\r\n        value: newContent\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Alternar resaltado de sintaxis\r\n  const toggleSyntaxHighlighting = () => {\r\n    setIsHighlightingEnabled(!isHighlightingEnabled);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.editorContainer}>\r\n      <div style={styles.editorHeader}>\r\n        {/* Selección de modo */}\r\n        <div style={styles.modeToggle}>\r\n          <span>Modo:</span>\r\n          <button\r\n            style={styles.modeButton(mode === 'simple', 'simple')}\r\n            onClick={() => handleModeToggle('simple')}\r\n          >\r\n            Simple\r\n          </button>\r\n          <button\r\n            style={styles.modeButton(mode === 'developer', 'developer')}\r\n            onClick={() => handleModeToggle('developer')}\r\n          >\r\n            Desarrollador\r\n          </button>\r\n          \r\n          {/* Insignia de modo actual */}\r\n          <span style={styles.modeBadge}>\r\n            {mode === 'developer' ? 'HTML' : 'Simple'}\r\n          </span>\r\n        </div>\r\n        \r\n        {/* Pestañas en modo desarrollador (solo mostrar en modo desarrollador) */}\r\n        {mode === 'developer' && (\r\n          <div style={styles.tabsContainer}>\r\n            <button\r\n              style={{\r\n                ...styles.tab,\r\n                ...(activeTab === 'code' ? styles.activeTab : {})\r\n              }}\r\n              onClick={() => setActiveTab('code')}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                <span>Code</span>\r\n              </div>\r\n            </button>\r\n            <button\r\n              style={{\r\n                ...styles.tab,\r\n                ...(activeTab === 'preview' ? styles.activeTab : {})\r\n              }}\r\n              onClick={() => setActiveTab('preview')}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                <span>Preview</span>\r\n              </div>\r\n            </button>\r\n            \r\n            {/* Alternar resaltado de sintaxis (solo mostrar en pestaña de código) */}\r\n            {activeTab === 'code' && (\r\n              <div style={styles.highlighterOptions}>\r\n                <div \r\n                  style={styles.switchContainer}\r\n                  onClick={toggleSyntaxHighlighting}\r\n                >\r\n                  <span style={styles.switchLabel}>Resaltado:</span>\r\n                  <div style={styles.switch}>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={isHighlightingEnabled}\r\n                      style={styles.switchInput}\r\n                      readOnly\r\n                    />\r\n                    <span \r\n                      style={{\r\n                        ...styles.switchSlider,\r\n                        backgroundColor: isHighlightingEnabled ? colors.primary : colors.gray200\r\n                      }}\r\n                    >\r\n                      <span style={styles.switchThumb(isHighlightingEnabled)} />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={styles.editorContent}>\r\n        {/* Modo desarrollador */}\r\n        {mode === 'developer' && (\r\n          <>\r\n            {activeTab === 'code' && (\r\n              <>\r\n                <EditorToolbar \r\n                  onInsertMarkdown={handleToolbarAction} \r\n                  mode='html'\r\n                />\r\n                \r\n                {isHighlightingEnabled ? (\r\n                  <SyntaxHighlighter\r\n                    content={internalContent}\r\n                    mode='html'\r\n                    onChange={handleTextAreaChange}\r\n                    textAreaRef={textAreaRef}\r\n                  />\r\n                ) : (\r\n                  <textarea\r\n                    ref={textAreaRef}\r\n                    value={internalContent}\r\n                    onChange={handleTextAreaChange}\r\n                    style={styles.plainTextarea}\r\n                    placeholder=\"Escribe código HTML aquí...\"\r\n                    spellCheck=\"false\"\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {activeTab === 'preview' && (\r\n              <div style={styles.previewContainer}>\r\n                <HTMLPreview htmlContent={internalContent} />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Modo simple */}\r\n        {mode === 'simple' && (\r\n          <div style={styles.simpleEditorContainer}>\r\n            <SimpleEditor \r\n              content={simpleContent}\r\n              onChange={handleSimpleContentChange}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Indicador de autoguardado */}\r\n        {internalContent.length > 0 && (\r\n          <div style={styles.autoSaveIndicator}>\r\n            Guardado automático...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DualModeEditor;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}