{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\DualModeEditor.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/DualModeEditor.jsx\nimport React, { useRef, useState, useEffect } from 'react';\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\nimport EditorToolbar from './EditorToolbar';\nimport { insertHTML } from './utils/editorUtils';\nimport HTMLPreview from './HTMLPreview';\nimport SyntaxHighlighter from './SyntaxHighlighter';\nimport SimpleEditor from './SimpleEditor'; // New component we'll create\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DualModeEditor = ({\n  content,\n  onChange,\n  initialMode = 'simple'\n}) => {\n  _s();\n  const textAreaRef = useRef(null);\n  const [mode, setMode] = useState('simple'); // Always start with 'simple' mode, regardless of initialMode\n  const [activeTab, setActiveTab] = useState('code'); // Used in developer mode\n  const [internalContent, setInternalContent] = useState(content || '');\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\n  const [simpleContent, setSimpleContent] = useState(content || '');\n\n  // Set content when it changes externally\n  useEffect(() => {\n    setInternalContent(content || '');\n    setSimpleContent(content || '');\n  }, [content]);\n\n  // Handle toolbar actions for developer mode\n  const handleToolbarAction = (actionType, placeholder) => {\n    if (mode === 'simple') {\n      // For simple mode, we'll handle this differently\n      return;\n    }\n    const newContent = insertHTML(internalContent, actionType, placeholder, textAreaRef.current);\n    updateContent(newContent);\n  };\n\n  // Update content based on current mode\n  const updateContent = newContent => {\n    setInternalContent(newContent);\n\n    // Notify parent component about the change\n    const event = {\n      target: {\n        name: 'content',\n        value: newContent\n      }\n    };\n    onChange(event);\n  };\n\n  // Handle mode toggle between developer and simple\n  const handleModeToggle = newMode => {\n    setMode(newMode);\n\n    // Reset tabs to code view when switching to developer mode\n    if (newMode === 'developer') {\n      setActiveTab('code');\n    }\n\n    // Notify parent component about the mode change\n    const event = {\n      target: {\n        name: 'editorMode',\n        value: newMode === 'developer' ? 'html' : 'simple'\n      }\n    };\n    onChange(event);\n  };\n\n  // Handle text area changes\n  const handleTextAreaChange = e => {\n    setInternalContent(e.target.value);\n    onChange(e);\n  };\n\n  // Handle simple editor content changes\n  const handleSimpleContentChange = newContent => {\n    setSimpleContent(newContent);\n\n    // Notify parent component about the change\n    const event = {\n      target: {\n        name: 'content',\n        value: newContent\n      }\n    };\n    onChange(event);\n  };\n\n  // Toggle syntax highlighting\n  const toggleSyntaxHighlighting = () => {\n    setIsHighlightingEnabled(!isHighlightingEnabled);\n  };\n\n  // Colors for the modes\n  const modeColors = {\n    developer: {\n      background: '#2C3E50',\n      text: '#FFFFFF',\n      hoverBg: '#34495E',\n      activeBg: '#E34C26',\n      // HTML color\n      activeText: '#FFFFFF',\n      badge: {\n        background: '#E34C26',\n        text: '#FFFFFF'\n      }\n    },\n    simple: {\n      background: '#2C3E50',\n      text: '#FFFFFF',\n      hoverBg: '#34495E',\n      activeBg: '#4CAF50',\n      activeText: '#FFFFFF',\n      badge: {\n        background: '#4CAF50',\n        text: '#FFFFFF'\n      }\n    }\n  };\n\n  // Styles for the editor\n  const styles = {\n    editorContainer: {\n      position: 'relative',\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      overflow: 'hidden',\n      boxShadow: shadows.sm,\n      maxWidth: '960px',\n      margin: '0 auto'\n    },\n    editorHeader: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      borderBottom: `1px solid ${colors.gray200}`,\n      backgroundColor: '#F8F9FA'\n    },\n    modeToggle: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: `${spacing.xs} ${spacing.md}`,\n      fontSize: typography.fontSize.sm,\n      gap: spacing.sm,\n      marginLeft: spacing.md\n    },\n    modeButton: (isActive, modeType) => ({\n      padding: `${spacing.xs} ${spacing.md}`,\n      backgroundColor: isActive ? modeColors[modeType].activeBg : modeColors[modeType].background,\n      border: 'none',\n      borderRadius: borderRadius.sm,\n      cursor: 'pointer',\n      fontSize: typography.fontSize.sm,\n      transition: 'all 0.2s ease',\n      color: isActive ? modeColors[modeType].activeText : modeColors[modeType].text,\n      fontWeight: isActive ? typography.fontWeight.medium : typography.fontWeight.regular,\n      boxShadow: isActive ? `0 2px 4px rgba(0,0,0,0.1)` : 'none',\n      transform: isActive ? 'translateY(-2px)' : 'translateY(0)'\n    }),\n    tabsContainer: {\n      display: 'flex'\n    },\n    tab: {\n      padding: `${spacing.sm} ${spacing.xl}`,\n      cursor: 'pointer',\n      border: 'none',\n      background: 'none',\n      fontWeight: typography.fontWeight.medium,\n      fontSize: typography.fontSize.md,\n      color: colors.textSecondary,\n      borderBottom: '2px solid transparent',\n      transition: 'all 0.2s ease'\n    },\n    activeTab: {\n      color: '#E34C26',\n      // HTML color\n      borderBottom: `2px solid #E34C26` // HTML color\n    },\n    editorContent: {\n      backgroundColor: '#f9fafb',\n      borderRadius: `0 0 ${borderRadius.md} ${borderRadius.md}`,\n      padding: spacing.sm,\n      border: 'none'\n    },\n    plainTextarea: {\n      width: '100%',\n      height: '600px',\n      padding: spacing.md,\n      backgroundColor: '#1e1e1e',\n      color: '#d4d4d4',\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\n      fontSize: '14px',\n      lineHeight: 1.5,\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      resize: 'vertical',\n      outline: 'none',\n      overflowWrap: 'normal',\n      whiteSpace: 'pre',\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)'\n    },\n    previewContainer: {\n      width: '100%',\n      height: '600px',\n      padding: spacing.md,\n      backgroundColor: '#f9fafb',\n      border: `1px solid ${colors.gray200}`,\n      borderRadius: borderRadius.md,\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\n      overflow: 'auto'\n    },\n    autoSaveIndicator: {\n      position: 'absolute',\n      bottom: '10px',\n      right: '10px',\n      backgroundColor: mode === 'developer' ? '#E34C26' : '#4CAF50',\n      color: colors.white,\n      padding: `${spacing.xs} ${spacing.sm}`,\n      borderRadius: borderRadius.sm,\n      fontSize: typography.fontSize.xs,\n      opacity: 0.7\n    },\n    modeBadge: {\n      display: 'inline-block',\n      padding: `${spacing.xs} ${spacing.sm}`,\n      borderRadius: borderRadius.round,\n      fontSize: typography.fontSize.xs,\n      backgroundColor: mode === 'developer' ? '#E34C26' : modeColors.simple.badge.background,\n      color: mode === 'developer' ? modeColors.developer.badge.text : modeColors.simple.badge.text,\n      marginLeft: spacing.sm,\n      fontWeight: typography.fontWeight.medium,\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      marginRight: spacing.lg\n    },\n    highlighterOptions: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: spacing.sm,\n      marginLeft: spacing.md\n    },\n    switchContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      cursor: 'pointer'\n    },\n    switchLabel: {\n      fontSize: typography.fontSize.sm,\n      color: colors.textSecondary,\n      marginRight: spacing.xs\n    },\n    switch: {\n      position: 'relative',\n      display: 'inline-block',\n      width: '40px',\n      height: '20px'\n    },\n    switchInput: {\n      opacity: 0,\n      width: 0,\n      height: 0\n    },\n    switchSlider: {\n      position: 'absolute',\n      cursor: 'pointer',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: colors.gray200,\n      transition: '0.4s',\n      borderRadius: '20px'\n    },\n    switchThumb: isActive => ({\n      position: 'absolute',\n      cursor: 'pointer',\n      content: '\"\"',\n      height: '16px',\n      width: '16px',\n      left: isActive ? '22px' : '2px',\n      bottom: '2px',\n      backgroundColor: colors.white,\n      transition: '0.4s',\n      borderRadius: '50%'\n    }),\n    // For simple mode editor\n    simpleEditorContainer: {\n      height: '600px',\n      backgroundColor: colors.white,\n      borderRadius: borderRadius.md,\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\n      padding: 0,\n      overflow: 'auto'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.editorContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.modeToggle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Modo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.modeButton(mode === 'simple', 'simple'),\n          onClick: () => handleModeToggle('simple'),\n          children: \"Simple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.modeButton(mode === 'developer', 'developer'),\n          onClick: () => handleModeToggle('developer'),\n          children: \"Desarrollador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.modeBadge,\n          children: mode === 'developer' ? 'HTML' : 'Simple'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), mode === 'developer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.tabsContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'code' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('code'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            ...styles.tab,\n            ...(activeTab === 'preview' ? styles.activeTab : {})\n          },\n          onClick: () => setActiveTab('preview'),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '6px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), activeTab === 'code' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.highlighterOptions,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.switchContainer,\n            onClick: toggleSyntaxHighlighting,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.switchLabel,\n              children: \"Resaltado:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.switch,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isHighlightingEnabled,\n                style: styles.switchInput,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  ...styles.switchSlider,\n                  backgroundColor: isHighlightingEnabled ? '#E34C26' : colors.gray200\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: styles.switchThumb(isHighlightingEnabled)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.editorContent,\n      children: [mode === 'developer' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'code' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n            onInsertMarkdown: handleToolbarAction,\n            mode: \"html\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), isHighlightingEnabled ? /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            content: internalContent,\n            mode: \"html\",\n            onChange: handleTextAreaChange,\n            textAreaRef: textAreaRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: textAreaRef,\n            value: internalContent,\n            onChange: handleTextAreaChange,\n            style: styles.plainTextarea,\n            placeholder: \"Escribe c\\xF3digo HTML aqu\\xED...\",\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), activeTab === 'preview' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.previewContainer,\n          children: /*#__PURE__*/_jsxDEV(HTMLPreview, {\n            htmlContent: internalContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), mode === 'simple' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.simpleEditorContainer,\n        children: /*#__PURE__*/_jsxDEV(SimpleEditor, {\n          content: simpleContent,\n          onChange: handleSimpleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), internalContent.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.autoSaveIndicator,\n        children: \"Guardado autom\\xE1tico...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n};\n_s(DualModeEditor, \"xk2i4gJ2ud6cWvYRlc0U9pnjJks=\");\n_c = DualModeEditor;\nexport default DualModeEditor;\nvar _c;\n$RefreshReg$(_c, \"DualModeEditor\");","map":{"version":3,"names":["React","useRef","useState","useEffect","colors","spacing","typography","shadows","borderRadius","EditorToolbar","insertHTML","HTMLPreview","SyntaxHighlighter","SimpleEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","DualModeEditor","content","onChange","initialMode","_s","textAreaRef","mode","setMode","activeTab","setActiveTab","internalContent","setInternalContent","isHighlightingEnabled","setIsHighlightingEnabled","simpleContent","setSimpleContent","handleToolbarAction","actionType","placeholder","newContent","current","updateContent","event","target","name","value","handleModeToggle","newMode","handleTextAreaChange","e","handleSimpleContentChange","toggleSyntaxHighlighting","modeColors","developer","background","text","hoverBg","activeBg","activeText","badge","simple","styles","editorContainer","position","border","gray200","md","overflow","boxShadow","sm","maxWidth","margin","editorHeader","display","justifyContent","borderBottom","backgroundColor","modeToggle","alignItems","padding","xs","fontSize","gap","marginLeft","modeButton","isActive","modeType","cursor","transition","color","fontWeight","medium","regular","transform","tabsContainer","tab","xl","textSecondary","editorContent","plainTextarea","width","height","fontFamily","lineHeight","resize","outline","overflowWrap","whiteSpace","previewContainer","autoSaveIndicator","bottom","right","white","opacity","modeBadge","round","marginRight","lg","highlighterOptions","switchContainer","switchLabel","switch","switchInput","switchSlider","top","left","switchThumb","simpleEditorContainer","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","readOnly","onInsertMarkdown","ref","spellCheck","htmlContent","length","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/DualModeEditor.jsx"],"sourcesContent":["// src/components/admin/DualModeEditor.jsx\r\nimport React, { useRef, useState, useEffect } from 'react';\r\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\r\nimport EditorToolbar from './EditorToolbar';\r\nimport { insertHTML } from './utils/editorUtils';\r\nimport HTMLPreview from './HTMLPreview';\r\nimport SyntaxHighlighter from './SyntaxHighlighter';\r\nimport SimpleEditor from './SimpleEditor'; // New component we'll create\r\n\r\nconst DualModeEditor = ({ content, onChange, initialMode = 'simple' }) => {\r\n  const textAreaRef = useRef(null);\r\n  const [mode, setMode] = useState('simple'); // Always start with 'simple' mode, regardless of initialMode\r\n  const [activeTab, setActiveTab] = useState('code'); // Used in developer mode\r\n  const [internalContent, setInternalContent] = useState(content || '');\r\n  const [isHighlightingEnabled, setIsHighlightingEnabled] = useState(true);\r\n  const [simpleContent, setSimpleContent] = useState(content || '');\r\n\r\n  // Set content when it changes externally\r\n  useEffect(() => {\r\n    setInternalContent(content || '');\r\n    setSimpleContent(content || '');\r\n  }, [content]);\r\n\r\n  // Handle toolbar actions for developer mode\r\n  const handleToolbarAction = (actionType, placeholder) => {\r\n    if (mode === 'simple') {\r\n      // For simple mode, we'll handle this differently\r\n      return;\r\n    }\r\n    \r\n    const newContent = insertHTML(\r\n      internalContent,\r\n      actionType,\r\n      placeholder,\r\n      textAreaRef.current\r\n    );\r\n    updateContent(newContent);\r\n  };\r\n\r\n  // Update content based on current mode\r\n  const updateContent = (newContent) => {\r\n    setInternalContent(newContent);\r\n    \r\n    // Notify parent component about the change\r\n    const event = {\r\n      target: {\r\n        name: 'content',\r\n        value: newContent\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Handle mode toggle between developer and simple\r\n  const handleModeToggle = (newMode) => {\r\n    setMode(newMode);\r\n    \r\n    // Reset tabs to code view when switching to developer mode\r\n    if (newMode === 'developer') {\r\n      setActiveTab('code');\r\n    }\r\n    \r\n    // Notify parent component about the mode change\r\n    const event = {\r\n      target: {\r\n        name: 'editorMode',\r\n        value: newMode === 'developer' ? 'html' : 'simple'\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Handle text area changes\r\n  const handleTextAreaChange = (e) => {\r\n    setInternalContent(e.target.value);\r\n    onChange(e);\r\n  };\r\n\r\n  // Handle simple editor content changes\r\n  const handleSimpleContentChange = (newContent) => {\r\n    setSimpleContent(newContent);\r\n    \r\n    // Notify parent component about the change\r\n    const event = {\r\n      target: {\r\n        name: 'content',\r\n        value: newContent\r\n      }\r\n    };\r\n    onChange(event);\r\n  };\r\n\r\n  // Toggle syntax highlighting\r\n  const toggleSyntaxHighlighting = () => {\r\n    setIsHighlightingEnabled(!isHighlightingEnabled);\r\n  };\r\n\r\n  // Colors for the modes\r\n  const modeColors = {\r\n    developer: {\r\n      background: '#2C3E50',\r\n      text: '#FFFFFF',\r\n      hoverBg: '#34495E',\r\n      activeBg: '#E34C26', // HTML color\r\n      activeText: '#FFFFFF',\r\n      badge: {\r\n        background: '#E34C26',\r\n        text: '#FFFFFF'\r\n      }\r\n    },\r\n    simple: {\r\n      background: '#2C3E50',\r\n      text: '#FFFFFF',\r\n      hoverBg: '#34495E',\r\n      activeBg: '#4CAF50',\r\n      activeText: '#FFFFFF',\r\n      badge: {\r\n        background: '#4CAF50',\r\n        text: '#FFFFFF'\r\n      }\r\n    }\r\n  };\r\n\r\n  // Styles for the editor\r\n  const styles = {\r\n    editorContainer: {\r\n      position: 'relative',\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      overflow: 'hidden',\r\n      boxShadow: shadows.sm,\r\n      maxWidth: '960px',\r\n      margin: '0 auto',\r\n    },\r\n    editorHeader: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      borderBottom: `1px solid ${colors.gray200}`,\r\n      backgroundColor: '#F8F9FA'\r\n    },\r\n    modeToggle: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      fontSize: typography.fontSize.sm,\r\n      gap: spacing.sm,\r\n      marginLeft: spacing.md\r\n    },\r\n    modeButton: (isActive, modeType) => ({\r\n      padding: `${spacing.xs} ${spacing.md}`,\r\n      backgroundColor: isActive ? \r\n        modeColors[modeType].activeBg : \r\n        modeColors[modeType].background,\r\n      border: 'none',\r\n      borderRadius: borderRadius.sm,\r\n      cursor: 'pointer',\r\n      fontSize: typography.fontSize.sm,\r\n      transition: 'all 0.2s ease',\r\n      color: isActive ? \r\n        modeColors[modeType].activeText : \r\n        modeColors[modeType].text,\r\n      fontWeight: isActive ? typography.fontWeight.medium : typography.fontWeight.regular,\r\n      boxShadow: isActive ? `0 2px 4px rgba(0,0,0,0.1)` : 'none',\r\n      transform: isActive ? 'translateY(-2px)' : 'translateY(0)'\r\n    }),\r\n    tabsContainer: {\r\n      display: 'flex'\r\n    },\r\n    tab: {\r\n      padding: `${spacing.sm} ${spacing.xl}`,\r\n      cursor: 'pointer',\r\n      border: 'none',\r\n      background: 'none',\r\n      fontWeight: typography.fontWeight.medium,\r\n      fontSize: typography.fontSize.md,\r\n      color: colors.textSecondary,\r\n      borderBottom: '2px solid transparent',\r\n      transition: 'all 0.2s ease'\r\n    },\r\n    activeTab: {\r\n      color: '#E34C26', // HTML color\r\n      borderBottom: `2px solid #E34C26` // HTML color\r\n    },\r\n    editorContent: {\r\n      backgroundColor: '#f9fafb',\r\n      borderRadius: `0 0 ${borderRadius.md} ${borderRadius.md}`,\r\n      padding: spacing.sm,\r\n      border: 'none'\r\n    },\r\n    plainTextarea: {\r\n      width: '100%',\r\n      height: '600px',\r\n      padding: spacing.md,\r\n      backgroundColor: '#1e1e1e',\r\n      color: '#d4d4d4',\r\n      fontFamily: \"'Cascadia Code', 'Consolas', 'Monaco', 'Courier New', monospace\",\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      resize: 'vertical',\r\n      outline: 'none',\r\n      overflowWrap: 'normal',\r\n      whiteSpace: 'pre',\r\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)'\r\n    },\r\n    previewContainer: {\r\n      width: '100%',\r\n      height: '600px',\r\n      padding: spacing.md,\r\n      backgroundColor: '#f9fafb',\r\n      border: `1px solid ${colors.gray200}`,\r\n      borderRadius: borderRadius.md,\r\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\r\n      overflow: 'auto'\r\n    },\r\n    autoSaveIndicator: {\r\n      position: 'absolute',\r\n      bottom: '10px',\r\n      right: '10px',\r\n      backgroundColor: mode === 'developer' ? '#E34C26' : '#4CAF50',\r\n      color: colors.white,\r\n      padding: `${spacing.xs} ${spacing.sm}`,\r\n      borderRadius: borderRadius.sm,\r\n      fontSize: typography.fontSize.xs,\r\n      opacity: 0.7\r\n    },\r\n    modeBadge: {\r\n      display: 'inline-block',\r\n      padding: `${spacing.xs} ${spacing.sm}`,\r\n      borderRadius: borderRadius.round,\r\n      fontSize: typography.fontSize.xs,\r\n      backgroundColor: mode === 'developer' ? '#E34C26' : modeColors.simple.badge.background,\r\n      color: mode === 'developer' ? \r\n        modeColors.developer.badge.text : \r\n        modeColors.simple.badge.text,\r\n      marginLeft: spacing.sm,\r\n      fontWeight: typography.fontWeight.medium,\r\n      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\r\n      marginRight: spacing.lg\r\n    },\r\n    highlighterOptions: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: spacing.sm,\r\n      marginLeft: spacing.md\r\n    },\r\n    switchContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      cursor: 'pointer',\r\n    },\r\n    switchLabel: {\r\n      fontSize: typography.fontSize.sm,\r\n      color: colors.textSecondary,\r\n      marginRight: spacing.xs,\r\n    },\r\n    switch: {\r\n      position: 'relative',\r\n      display: 'inline-block',\r\n      width: '40px',\r\n      height: '20px',\r\n    },\r\n    switchInput: {\r\n      opacity: 0,\r\n      width: 0,\r\n      height: 0,\r\n    },\r\n    switchSlider: {\r\n      position: 'absolute',\r\n      cursor: 'pointer',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      backgroundColor: colors.gray200,\r\n      transition: '0.4s',\r\n      borderRadius: '20px',\r\n    },\r\n    switchThumb: (isActive) => ({\r\n      position: 'absolute',\r\n      cursor: 'pointer',\r\n      content: '\"\"',\r\n      height: '16px',\r\n      width: '16px',\r\n      left: isActive ? '22px' : '2px',\r\n      bottom: '2px',\r\n      backgroundColor: colors.white,\r\n      transition: '0.4s',\r\n      borderRadius: '50%',\r\n    }),\r\n    // For simple mode editor\r\n    simpleEditorContainer: {\r\n      height: '600px',\r\n      backgroundColor: colors.white,\r\n      borderRadius: borderRadius.md,\r\n      boxShadow: 'inset 0 1px 3px rgba(0,0,0,0.05)',\r\n      padding: 0,\r\n      overflow: 'auto'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.editorContainer}>\r\n      <div style={styles.editorHeader}>\r\n        {/* Mode selection toggle */}\r\n        <div style={styles.modeToggle}>\r\n          <span>Modo:</span>\r\n          <button\r\n            style={styles.modeButton(mode === 'simple', 'simple')}\r\n            onClick={() => handleModeToggle('simple')}\r\n          >\r\n            Simple\r\n          </button>\r\n          <button\r\n            style={styles.modeButton(mode === 'developer', 'developer')}\r\n            onClick={() => handleModeToggle('developer')}\r\n          >\r\n            Desarrollador\r\n          </button>\r\n          \r\n          {/* Current mode badge */}\r\n          <span style={styles.modeBadge}>\r\n            {mode === 'developer' ? 'HTML' : 'Simple'}\r\n          </span>\r\n        </div>\r\n        \r\n        {/* Developer mode tabs (only shown in developer mode) */}\r\n        {mode === 'developer' && (\r\n          <div style={styles.tabsContainer}>\r\n            <button\r\n              style={{\r\n                ...styles.tab,\r\n                ...(activeTab === 'code' ? styles.activeTab : {})\r\n              }}\r\n              onClick={() => setActiveTab('code')}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                <span>Code</span>\r\n              </div>\r\n            </button>\r\n            <button\r\n              style={{\r\n                ...styles.tab,\r\n                ...(activeTab === 'preview' ? styles.activeTab : {})\r\n              }}\r\n              onClick={() => setActiveTab('preview')}\r\n            >\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '6px' }}>\r\n                <span>Preview</span>\r\n              </div>\r\n            </button>\r\n            \r\n            {/* Syntax highlighting toggle (only shown in code tab) */}\r\n            {activeTab === 'code' && (\r\n              <div style={styles.highlighterOptions}>\r\n                <div \r\n                  style={styles.switchContainer}\r\n                  onClick={toggleSyntaxHighlighting}\r\n                >\r\n                  <span style={styles.switchLabel}>Resaltado:</span>\r\n                  <div style={styles.switch}>\r\n                    <input \r\n                      type=\"checkbox\" \r\n                      checked={isHighlightingEnabled}\r\n                      style={styles.switchInput}\r\n                      readOnly\r\n                    />\r\n                    <span \r\n                      style={{\r\n                        ...styles.switchSlider,\r\n                        backgroundColor: isHighlightingEnabled ? '#E34C26' : colors.gray200\r\n                      }}\r\n                    >\r\n                      <span style={styles.switchThumb(isHighlightingEnabled)} />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={styles.editorContent}>\r\n        {/* Developer Mode */}\r\n        {mode === 'developer' && (\r\n          <>\r\n            {activeTab === 'code' && (\r\n              <>\r\n                <EditorToolbar \r\n                  onInsertMarkdown={handleToolbarAction} \r\n                  mode=\"html\"\r\n                />\r\n                \r\n                {isHighlightingEnabled ? (\r\n                  <SyntaxHighlighter\r\n                    content={internalContent}\r\n                    mode=\"html\"\r\n                    onChange={handleTextAreaChange}\r\n                    textAreaRef={textAreaRef}\r\n                  />\r\n                ) : (\r\n                  <textarea\r\n                    ref={textAreaRef}\r\n                    value={internalContent}\r\n                    onChange={handleTextAreaChange}\r\n                    style={styles.plainTextarea}\r\n                    placeholder=\"Escribe código HTML aquí...\"\r\n                    spellCheck=\"false\"\r\n                  />\r\n                )}\r\n              </>\r\n            )}\r\n\r\n            {activeTab === 'preview' && (\r\n              <div style={styles.previewContainer}>\r\n                <HTMLPreview htmlContent={internalContent} />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        \r\n        {/* Simple Mode */}\r\n        {mode === 'simple' && (\r\n          <div style={styles.simpleEditorContainer}>\r\n            <SimpleEditor \r\n              content={simpleContent}\r\n              onChange={handleSimpleContentChange}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Auto-save indicator */}\r\n        {internalContent.length > 0 && (\r\n          <div style={styles.autoSaveIndicator}>\r\n            Guardado automático...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DualModeEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}