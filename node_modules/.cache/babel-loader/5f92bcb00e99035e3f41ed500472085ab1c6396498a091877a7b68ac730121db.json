{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\PostEditor.jsx\",\n  _s = $RefreshSig$();\n// src/components/admin/PostEditor.jsx\nimport React, { useState, useEffect } from 'react';\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\n\n// Componentes para el editor\nimport DualModeEditor from './DualModeEditor';\nimport PostMetadata from './PostMetadata';\nimport CoverImageUploader from './CoverImageUploader';\nimport MarkdownGuide from './MarkdownGuide';\nimport StatusMessage from './StatusMessage';\nimport ImportExportActions from './ImportExportActions';\n\n// Funciones para almacenamiento local\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst savePostToLocalStorage = post => {\n  try {\n    const postToSave = {\n      ...post\n    };\n    // No guardamos la imagen como tal, sino solo la URL de vista previa\n    delete postToSave.coverImage;\n    localStorage.setItem('post_draft', JSON.stringify(postToSave));\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n  }\n};\nconst loadPostFromLocalStorage = () => {\n  try {\n    const savedPost = localStorage.getItem('post_draft');\n    return savedPost ? JSON.parse(savedPost) : null;\n  } catch (error) {\n    console.error('Error loading from localStorage:', error);\n    return null;\n  }\n};\nconst PostEditor = () => {\n  _s();\n  const [post, setPost] = useState({\n    title: '',\n    category: '',\n    content: '',\n    // Aseguramos que se inicie con una cadena vac√≠a\n    tags: '',\n    coverImage: null,\n    coverImagePreview: null,\n    status: 'draft',\n    // 'draft', 'published'\n    publishDate: new Date().toISOString().slice(0, 10),\n    editorMode: 'markdown' // Iniciamos expl√≠citamente en modo markdown\n  });\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveMessage, setSaveMessage] = useState(null);\n  const [isPublishing, setIsPublishing] = useState(false);\n\n  // Categor√≠as disponibles\n  const categories = ['Noticias', 'T√©cnicas de Estudio', 'Problem√°ticas', 'Educaci√≥n de Calidad', 'Herramientas', 'Desarrollo Docente', 'Comunidad'];\n\n  // Manejador para cambios en los campos del formulario\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Manejador para cambios en la imagen de portada\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setPost(prev => ({\n        ...prev,\n        coverImage: file,\n        coverImagePreview: URL.createObjectURL(file)\n      }));\n    }\n  };\n\n  // M√©todo para actualizar el modo del editor\n  const updateEditorMode = mode => {\n    setPost(prev => ({\n      ...prev,\n      editorMode: mode\n    }));\n  };\n\n  // Autoguardado cuando el contenido cambia\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (post.content.length > 0 || post.title.length > 0) {\n        console.log('Guardado autom√°tico...');\n        savePostToLocalStorage(post);\n      }\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [post.content, post.title, post.editorMode]);\n\n  // Cargar borrador guardado al iniciar\n  useEffect(() => {\n    const savedPost = loadPostFromLocalStorage();\n    if (savedPost) {\n      // Detectamos si el contenido parece ser HTML para establecer el modo\n      const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(savedPost.content);\n      setPost({\n        ...savedPost,\n        editorMode: hasHTMLStructure ? 'html' : savedPost.editorMode || 'markdown'\n      });\n    }\n  }, []);\n\n  // Simular guardar como borrador\n  const saveDraft = () => {\n    setIsSaving(true);\n\n    // Guardar en localStorage\n    savePostToLocalStorage(post);\n\n    // Simulaci√≥n de guardado\n    setTimeout(() => {\n      setIsSaving(false);\n      setSaveMessage({\n        type: 'success',\n        text: 'Borrador guardado correctamente',\n        icon: '‚úì'\n      });\n\n      // Limpiar mensaje despu√©s de unos segundos\n      setTimeout(() => setSaveMessage(null), 3000);\n    }, 1000);\n  };\n\n  // Simular publicaci√≥n del post\n  const publishPost = () => {\n    // Validaci√≥n b√°sica\n    if (!post.title.trim() || !post.content.trim() || !post.category) {\n      setSaveMessage({\n        type: 'error',\n        text: 'Por favor completa al menos el t√≠tulo, categor√≠a y contenido del post',\n        icon: '‚úñ'\n      });\n      setTimeout(() => setSaveMessage(null), 3000);\n      return;\n    }\n    setIsPublishing(true);\n\n    // Simulaci√≥n de publicaci√≥n\n    setTimeout(() => {\n      setIsPublishing(false);\n      setPost(prev => ({\n        ...prev,\n        status: 'published'\n      }));\n      setSaveMessage({\n        type: 'success',\n        text: '¬°Post publicado correctamente!',\n        icon: 'üéâ'\n      });\n\n      // Limpiar mensaje despu√©s de unos segundos\n      setTimeout(() => setSaveMessage(null), 3000);\n\n      // Limpieza del borrador en localStorage despu√©s de publicar\n      localStorage.removeItem('post_draft');\n    }, 1500);\n  };\n\n  // Exportar el post a Markdown/HTML para descargar\n  const exportToFile = () => {\n    // Crear un objeto de texto para descargar\n    let content = '';\n    let fileExtension = '';\n    if (post.editorMode === 'markdown') {\n      const frontMatter = `---\ntitle: ${post.title}\ncategory: ${post.category}\ntags: ${post.tags}\ndate: ${post.publishDate}\nstatus: ${post.status}\n---\n\n`;\n      content = frontMatter + post.content;\n      fileExtension = 'md';\n    } else {\n      // HTML mode\n      content = post.content;\n      fileExtension = 'html';\n    }\n    const blob = new Blob([content], {\n      type: post.editorMode === 'markdown' ? 'text/markdown' : 'text/html'\n    });\n    const url = URL.createObjectURL(blob);\n\n    // Crear un enlace de descarga y hacer clic en √©l\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `${post.title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.${fileExtension}`;\n    document.body.appendChild(a);\n    a.click();\n\n    // Limpiar\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n\n    // Mostrar mensaje de √©xito\n    setSaveMessage({\n      type: 'success',\n      text: `Archivo ${post.editorMode === 'markdown' ? 'Markdown' : 'HTML'} descargado correctamente`,\n      icon: 'üì•'\n    });\n    setTimeout(() => setSaveMessage(null), 3000);\n  };\n\n  // Importar un archivo Markdown o HTML\n  const importFile = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      const content = event.target.result;\n      const fileExtension = file.name.split('.').pop().toLowerCase();\n\n      // Detectar si es Markdown o HTML\n      const isMarkdown = fileExtension === 'md' || fileExtension === 'markdown';\n      const isHTML = fileExtension === 'html' || fileExtension === 'htm';\n      if (isMarkdown) {\n        // Parsear el frontmatter si existe\n        let postData = {\n          content,\n          editorMode: 'markdown'\n        };\n        const frontMatterRegex = /^---\\n([\\s\\S]*?)\\n---\\n/;\n        const match = content.match(frontMatterRegex);\n        if (match) {\n          const frontMatter = match[1];\n          const actualContent = content.replace(frontMatterRegex, '');\n\n          // Extraer metadatos del frontmatter\n          const titleMatch = frontMatter.match(/title:\\s*(.*)/);\n          const categoryMatch = frontMatter.match(/category:\\s*(.*)/);\n          const tagsMatch = frontMatter.match(/tags:\\s*(.*)/);\n          const dateMatch = frontMatter.match(/date:\\s*(.*)/);\n          const statusMatch = frontMatter.match(/status:\\s*(.*)/);\n          postData = {\n            title: titleMatch ? titleMatch[1] : '',\n            category: categoryMatch ? categoryMatch[1] : '',\n            tags: tagsMatch ? tagsMatch[1] : '',\n            publishDate: dateMatch ? dateMatch[1] : new Date().toISOString().slice(0, 10),\n            status: statusMatch ? statusMatch[1] : 'draft',\n            content: actualContent.trim(),\n            editorMode: 'markdown'\n          };\n        } else {\n          // Si no hay frontmatter, usar todo como contenido\n          postData.content = content;\n        }\n\n        // Actualizar el estado del post \n        setPost(prevPost => ({\n          ...prevPost,\n          ...postData\n        }));\n      } else if (isHTML) {\n        // Extraer el t√≠tulo del documento HTML si existe\n        const titleMatch = content.match(/<title>(.*?)<\\/title>/i);\n        const title = titleMatch ? titleMatch[1] : '';\n\n        // Actualizar el estado con el contenido HTML\n        setPost(prevPost => ({\n          ...prevPost,\n          title: title || prevPost.title,\n          content: content,\n          editorMode: 'html'\n        }));\n      } else {\n        // Si no es Markdown ni HTML, tratar como texto plano\n        setPost(prevPost => ({\n          ...prevPost,\n          content: content\n        }));\n      }\n\n      // Mostrar mensaje de √©xito\n      setSaveMessage({\n        type: 'success',\n        text: `Archivo ${isMarkdown ? 'Markdown' : isHTML ? 'HTML' : 'de texto'} importado correctamente`,\n        icon: 'üì§'\n      });\n      setTimeout(() => setSaveMessage(null), 3000);\n    };\n    reader.readAsText(file);\n  };\n\n  // Estilos CSS\n  const styles = {\n    container: {\n      maxWidth: \"1200px\",\n      margin: \"0 auto\",\n      padding: `${spacing.xl} ${spacing.md}`,\n      fontFamily: typography.fontFamily\n    },\n    editorContainer: {\n      display: \"grid\",\n      gridTemplateColumns: \"1fr 300px\",\n      gap: spacing.xl,\n      marginBottom: spacing.xxl,\n      '@media (max-width: 768px)': {\n        gridTemplateColumns: \"1fr\"\n      }\n    },\n    mainEditor: {\n      width: \"100%\",\n      maxWidth: \"800px\" // Anchura predefinida para el contenido del post\n    },\n    sidebar: {},\n    formGroup: {\n      marginBottom: spacing.lg\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n          @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n          }\n          @keyframes slideInUp {\n            from { transform: translateY(20px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n          }\n          @keyframes pulse {\n            0% { transform: scale(1); }\n            50% { transform: scale(1.05); }\n            100% { transform: scale(1); }\n          }\n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          @keyframes shake {\n            0%, 100% { transform: translateX(0); }\n            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\n            20%, 40%, 60%, 80% { transform: translateX(5px); }\n          }\n        `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 300px\",\n        gap: spacing.xl,\n        marginBottom: spacing.xxl,\n        '@media (max-width: 768px)': {\n          gridTemplateColumns: \"1fr\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.mainEditor,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: spacing.xs,\n              marginBottom: spacing.xs,\n              fontWeight: typography.fontWeight.medium,\n              color: colors.primary\n            },\n            htmlFor: \"title\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: colors.primary,\n                fontSize: '1.1em'\n              },\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), \" T\\xEDtulo del post\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: post.title,\n            onChange: handleChange,\n            style: {\n              width: \"100%\",\n              padding: spacing.md,\n              borderRadius: borderRadius.md,\n              border: `1px solid ${colors.gray200}`,\n              fontSize: typography.fontSize.lg,\n              transition: \"all 0.3s ease\",\n              marginBottom: spacing.md,\n              fontWeight: typography.fontWeight.semiBold,\n              borderLeft: `4px solid ${colors.primary}`\n            },\n            placeholder: \"Escribe un t\\xEDtulo atractivo\",\n            onFocus: e => {\n              e.target.style.boxShadow = `0 0 0 2px ${colors.primary}30`;\n              e.target.style.borderLeft = `4px solid ${colors.secondary}`;\n            },\n            onBlur: e => {\n              e.target.style.boxShadow = 'none';\n              e.target.style.borderLeft = `4px solid ${colors.primary}`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.formGroup,\n          children: /*#__PURE__*/_jsxDEV(DualModeEditor, {\n            content: post.content,\n            onChange: handleChange,\n            initialMode: post.editorMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), saveMessage && /*#__PURE__*/_jsxDEV(StatusMessage, {\n          type: saveMessage.type,\n          text: saveMessage.text,\n          icon: saveMessage.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.sidebar,\n        children: [/*#__PURE__*/_jsxDEV(CoverImageUploader, {\n          coverImagePreview: post.coverImagePreview,\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostMetadata, {\n          post: post,\n          categories: categories,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarkdownGuide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImportExportActions, {\n          onExport: exportToFile,\n          onImport: importFile,\n          isHTML: post.editorMode === 'html'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n_s(PostEditor, \"RirL7wYIKK+aMftxw002k4UY4WU=\");\n_c = PostEditor;\nexport default PostEditor;\nvar _c;\n$RefreshReg$(_c, \"PostEditor\");","map":{"version":3,"names":["React","useState","useEffect","colors","spacing","typography","shadows","borderRadius","DualModeEditor","PostMetadata","CoverImageUploader","MarkdownGuide","StatusMessage","ImportExportActions","jsxDEV","_jsxDEV","savePostToLocalStorage","post","postToSave","coverImage","localStorage","setItem","JSON","stringify","error","console","loadPostFromLocalStorage","savedPost","getItem","parse","PostEditor","_s","setPost","title","category","content","tags","coverImagePreview","status","publishDate","Date","toISOString","slice","editorMode","isSaving","setIsSaving","saveMessage","setSaveMessage","isPublishing","setIsPublishing","categories","handleChange","e","name","value","target","prev","handleImageChange","file","files","URL","createObjectURL","updateEditorMode","mode","timer","setTimeout","length","log","clearTimeout","hasHTMLStructure","test","saveDraft","type","text","icon","publishPost","trim","removeItem","exportToFile","fileExtension","frontMatter","blob","Blob","url","a","document","createElement","href","download","replace","toLowerCase","body","appendChild","click","removeChild","revokeObjectURL","importFile","reader","FileReader","onload","event","result","split","pop","isMarkdown","isHTML","postData","frontMatterRegex","match","actualContent","titleMatch","categoryMatch","tagsMatch","dateMatch","statusMatch","prevPost","readAsText","styles","container","maxWidth","margin","padding","xl","md","fontFamily","editorContainer","display","gridTemplateColumns","gap","marginBottom","xxl","mainEditor","width","sidebar","formGroup","lg","style","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","xs","fontWeight","medium","color","primary","htmlFor","fontSize","id","onChange","border","gray200","transition","semiBold","borderLeft","placeholder","onFocus","boxShadow","secondary","onBlur","initialMode","onExport","onImport","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/PostEditor.jsx"],"sourcesContent":["// src/components/admin/PostEditor.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { colors, spacing, typography, shadows, borderRadius } from '../../styles/theme';\r\n\r\n// Componentes para el editor\r\nimport DualModeEditor from './DualModeEditor';\r\nimport PostMetadata from './PostMetadata';\r\nimport CoverImageUploader from './CoverImageUploader';\r\nimport MarkdownGuide from './MarkdownGuide';\r\nimport StatusMessage from './StatusMessage';\r\nimport ImportExportActions from './ImportExportActions';\r\n\r\n// Funciones para almacenamiento local\r\nconst savePostToLocalStorage = (post) => {\r\n  try {\r\n    const postToSave = { ...post };\r\n    // No guardamos la imagen como tal, sino solo la URL de vista previa\r\n    delete postToSave.coverImage;\r\n    localStorage.setItem('post_draft', JSON.stringify(postToSave));\r\n  } catch (error) {\r\n    console.error('Error saving to localStorage:', error);\r\n  }\r\n};\r\n\r\nconst loadPostFromLocalStorage = () => {\r\n  try {\r\n    const savedPost = localStorage.getItem('post_draft');\r\n    return savedPost ? JSON.parse(savedPost) : null;\r\n  } catch (error) {\r\n    console.error('Error loading from localStorage:', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst PostEditor = () => {\r\n  const [post, setPost] = useState({\r\n    title: '',\r\n    category: '',\r\n    content: '', // Aseguramos que se inicie con una cadena vac√≠a\r\n    tags: '',\r\n    coverImage: null,\r\n    coverImagePreview: null,\r\n    status: 'draft', // 'draft', 'published'\r\n    publishDate: new Date().toISOString().slice(0, 10),\r\n    editorMode: 'markdown', // Iniciamos expl√≠citamente en modo markdown\r\n  });\r\n\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveMessage, setSaveMessage] = useState(null);\r\n  const [isPublishing, setIsPublishing] = useState(false);\r\n\r\n  // Categor√≠as disponibles\r\n  const categories = [\r\n    'Noticias',\r\n    'T√©cnicas de Estudio',\r\n    'Problem√°ticas',\r\n    'Educaci√≥n de Calidad',\r\n    'Herramientas',\r\n    'Desarrollo Docente',\r\n    'Comunidad'\r\n  ];\r\n\r\n  // Manejador para cambios en los campos del formulario\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPost(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  // Manejador para cambios en la imagen de portada\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setPost(prev => ({\r\n        ...prev,\r\n        coverImage: file,\r\n        coverImagePreview: URL.createObjectURL(file)\r\n      }));\r\n    }\r\n  };\r\n\r\n  // M√©todo para actualizar el modo del editor\r\n  const updateEditorMode = (mode) => {\r\n    setPost(prev => ({\r\n      ...prev,\r\n      editorMode: mode\r\n    }));\r\n  };\r\n\r\n  // Autoguardado cuando el contenido cambia\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (post.content.length > 0 || post.title.length > 0) {\r\n        console.log('Guardado autom√°tico...');\r\n        savePostToLocalStorage(post);\r\n      }\r\n    }, 2000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, [post.content, post.title, post.editorMode]);\r\n  \r\n  // Cargar borrador guardado al iniciar\r\n  useEffect(() => {\r\n    const savedPost = loadPostFromLocalStorage();\r\n    if (savedPost) {\r\n      // Detectamos si el contenido parece ser HTML para establecer el modo\r\n      const hasHTMLStructure = /<(!DOCTYPE|html|head|body|div|p|h[1-6]|ul|ol|script|style)[^>]*>/i.test(savedPost.content);\r\n      \r\n      setPost({\r\n        ...savedPost,\r\n        editorMode: hasHTMLStructure ? 'html' : (savedPost.editorMode || 'markdown')\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  // Simular guardar como borrador\r\n  const saveDraft = () => {\r\n    setIsSaving(true);\r\n    \r\n    // Guardar en localStorage\r\n    savePostToLocalStorage(post);\r\n    \r\n    // Simulaci√≥n de guardado\r\n    setTimeout(() => {\r\n      setIsSaving(false);\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: 'Borrador guardado correctamente',\r\n        icon: '‚úì'\r\n      });\r\n      \r\n      // Limpiar mensaje despu√©s de unos segundos\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    }, 1000);\r\n  };\r\n\r\n  // Simular publicaci√≥n del post\r\n  const publishPost = () => {\r\n    // Validaci√≥n b√°sica\r\n    if (!post.title.trim() || !post.content.trim() || !post.category) {\r\n      setSaveMessage({\r\n        type: 'error',\r\n        text: 'Por favor completa al menos el t√≠tulo, categor√≠a y contenido del post',\r\n        icon: '‚úñ'\r\n      });\r\n      \r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n      return;\r\n    }\r\n    \r\n    setIsPublishing(true);\r\n    \r\n    // Simulaci√≥n de publicaci√≥n\r\n    setTimeout(() => {\r\n      setIsPublishing(false);\r\n      setPost(prev => ({ ...prev, status: 'published' }));\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: '¬°Post publicado correctamente!',\r\n        icon: 'üéâ'\r\n      });\r\n      \r\n      // Limpiar mensaje despu√©s de unos segundos\r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n      \r\n      // Limpieza del borrador en localStorage despu√©s de publicar\r\n      localStorage.removeItem('post_draft');\r\n    }, 1500);\r\n  };\r\n\r\n  // Exportar el post a Markdown/HTML para descargar\r\n  const exportToFile = () => {\r\n    // Crear un objeto de texto para descargar\r\n    let content = '';\r\n    let fileExtension = '';\r\n    \r\n    if (post.editorMode === 'markdown') {\r\n      const frontMatter = `---\r\ntitle: ${post.title}\r\ncategory: ${post.category}\r\ntags: ${post.tags}\r\ndate: ${post.publishDate}\r\nstatus: ${post.status}\r\n---\r\n\r\n`;\r\n      content = frontMatter + post.content;\r\n      fileExtension = 'md';\r\n    } else { // HTML mode\r\n      content = post.content;\r\n      fileExtension = 'html';\r\n    }\r\n    \r\n    const blob = new Blob([content], { \r\n      type: post.editorMode === 'markdown' ? 'text/markdown' : 'text/html' \r\n    });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    // Crear un enlace de descarga y hacer clic en √©l\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${post.title.replace(/[^a-z0-9]/gi, '-').toLowerCase()}.${fileExtension}`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    \r\n    // Limpiar\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    \r\n    // Mostrar mensaje de √©xito\r\n    setSaveMessage({\r\n      type: 'success',\r\n      text: `Archivo ${post.editorMode === 'markdown' ? 'Markdown' : 'HTML'} descargado correctamente`,\r\n      icon: 'üì•'\r\n    });\r\n    \r\n    setTimeout(() => setSaveMessage(null), 3000);\r\n  };\r\n\r\n  // Importar un archivo Markdown o HTML\r\n  const importFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const content = event.target.result;\r\n      const fileExtension = file.name.split('.').pop().toLowerCase();\r\n      \r\n      // Detectar si es Markdown o HTML\r\n      const isMarkdown = fileExtension === 'md' || fileExtension === 'markdown';\r\n      const isHTML = fileExtension === 'html' || fileExtension === 'htm';\r\n      \r\n      if (isMarkdown) {\r\n        // Parsear el frontmatter si existe\r\n        let postData = { content, editorMode: 'markdown' };\r\n        \r\n        const frontMatterRegex = /^---\\n([\\s\\S]*?)\\n---\\n/;\r\n        const match = content.match(frontMatterRegex);\r\n        \r\n        if (match) {\r\n          const frontMatter = match[1];\r\n          const actualContent = content.replace(frontMatterRegex, '');\r\n          \r\n          // Extraer metadatos del frontmatter\r\n          const titleMatch = frontMatter.match(/title:\\s*(.*)/);\r\n          const categoryMatch = frontMatter.match(/category:\\s*(.*)/);\r\n          const tagsMatch = frontMatter.match(/tags:\\s*(.*)/);\r\n          const dateMatch = frontMatter.match(/date:\\s*(.*)/);\r\n          const statusMatch = frontMatter.match(/status:\\s*(.*)/);\r\n          \r\n          postData = {\r\n            title: titleMatch ? titleMatch[1] : '',\r\n            category: categoryMatch ? categoryMatch[1] : '',\r\n            tags: tagsMatch ? tagsMatch[1] : '',\r\n            publishDate: dateMatch ? dateMatch[1] : new Date().toISOString().slice(0, 10),\r\n            status: statusMatch ? statusMatch[1] : 'draft',\r\n            content: actualContent.trim(),\r\n            editorMode: 'markdown'\r\n          };\r\n        } else {\r\n          // Si no hay frontmatter, usar todo como contenido\r\n          postData.content = content;\r\n        }\r\n        \r\n        // Actualizar el estado del post \r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          ...postData\r\n        }));\r\n      } else if (isHTML) {\r\n        // Extraer el t√≠tulo del documento HTML si existe\r\n        const titleMatch = content.match(/<title>(.*?)<\\/title>/i);\r\n        const title = titleMatch ? titleMatch[1] : '';\r\n        \r\n        // Actualizar el estado con el contenido HTML\r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          title: title || prevPost.title,\r\n          content: content,\r\n          editorMode: 'html'\r\n        }));\r\n      } else {\r\n        // Si no es Markdown ni HTML, tratar como texto plano\r\n        setPost(prevPost => ({\r\n          ...prevPost,\r\n          content: content\r\n        }));\r\n      }\r\n      \r\n      // Mostrar mensaje de √©xito\r\n      setSaveMessage({\r\n        type: 'success',\r\n        text: `Archivo ${isMarkdown ? 'Markdown' : (isHTML ? 'HTML' : 'de texto')} importado correctamente`,\r\n        icon: 'üì§'\r\n      });\r\n      \r\n      setTimeout(() => setSaveMessage(null), 3000);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Estilos CSS\r\n  const styles = {\r\n    container: {\r\n      maxWidth: \"1200px\",\r\n      margin: \"0 auto\",\r\n      padding: `${spacing.xl} ${spacing.md}`,\r\n      fontFamily: typography.fontFamily\r\n    },\r\n    editorContainer: {\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"1fr 300px\",\r\n      gap: spacing.xl,\r\n      marginBottom: spacing.xxl,\r\n      '@media (max-width: 768px)': {\r\n        gridTemplateColumns: \"1fr\"\r\n      }\r\n    },\r\n    mainEditor: {\r\n      width: \"100%\",\r\n      maxWidth: \"800px\" // Anchura predefinida para el contenido del post\r\n    },\r\n    sidebar: {},\r\n    formGroup: {\r\n      marginBottom: spacing.lg\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* Estilos CSS en l√≠nea para animaciones */}\r\n      <style dangerouslySetInnerHTML={{\r\n        __html: `\r\n          @keyframes fadeIn {\r\n            from { opacity: 0; }\r\n            to { opacity: 1; }\r\n          }\r\n          @keyframes slideInUp {\r\n            from { transform: translateY(20px); opacity: 0; }\r\n            to { transform: translateY(0); opacity: 1; }\r\n          }\r\n          @keyframes pulse {\r\n            0% { transform: scale(1); }\r\n            50% { transform: scale(1.05); }\r\n            100% { transform: scale(1); }\r\n          }\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n          @keyframes shake {\r\n            0%, 100% { transform: translateX(0); }\r\n            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }\r\n            20%, 40%, 60%, 80% { transform: translateX(5px); }\r\n          }\r\n        `\r\n      }} />\r\n\r\n\r\n      <div style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 300px\",\r\n        gap: spacing.xl,\r\n        marginBottom: spacing.xxl,\r\n        '@media (max-width: 768px)': {\r\n          gridTemplateColumns: \"1fr\"\r\n        }\r\n      }}>\r\n        <div style={styles.mainEditor}>\r\n          <div style={styles.formGroup}>\r\n            <label style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: spacing.xs,\r\n              marginBottom: spacing.xs,\r\n              fontWeight: typography.fontWeight.medium,\r\n              color: colors.primary\r\n            }} htmlFor=\"title\">\r\n              <span style={{color: colors.primary, fontSize: '1.1em'}}>üìù</span> T√≠tulo del post\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={post.title}\r\n              onChange={handleChange}\r\n              style={{\r\n                width: \"100%\",\r\n                padding: spacing.md,\r\n                borderRadius: borderRadius.md,\r\n                border: `1px solid ${colors.gray200}`,\r\n                fontSize: typography.fontSize.lg,\r\n                transition: \"all 0.3s ease\",\r\n                marginBottom: spacing.md,\r\n                fontWeight: typography.fontWeight.semiBold,\r\n                borderLeft: `4px solid ${colors.primary}`\r\n              }}\r\n              placeholder=\"Escribe un t√≠tulo atractivo\"\r\n              onFocus={(e) => {\r\n                e.target.style.boxShadow = `0 0 0 2px ${colors.primary}30`;\r\n                e.target.style.borderLeft = `4px solid ${colors.secondary}`;\r\n              }}\r\n              onBlur={(e) => {\r\n                e.target.style.boxShadow = 'none';\r\n                e.target.style.borderLeft = `4px solid ${colors.primary}`;\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div style={styles.formGroup}>\r\n            <DualModeEditor \r\n              content={post.content}\r\n              onChange={handleChange}\r\n              initialMode={post.editorMode}\r\n            />\r\n          </div>\r\n\r\n          {saveMessage && (\r\n            <StatusMessage \r\n              type={saveMessage.type} \r\n              text={saveMessage.text} \r\n              icon={saveMessage.icon} \r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div style={styles.sidebar}>\r\n          <CoverImageUploader \r\n            coverImagePreview={post.coverImagePreview} \r\n            onChange={handleImageChange} \r\n          />\r\n\r\n          <PostMetadata \r\n            post={post} \r\n            categories={categories} \r\n            onChange={handleChange} \r\n          />\r\n\r\n          <MarkdownGuide />\r\n          \r\n          <ImportExportActions \r\n            onExport={exportToFile} \r\n            onImport={importFile}\r\n            isHTML={post.editorMode === 'html'} \r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}