{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\damva\\\\EducStation\\\\src\\\\components\\\\admin\\\\SyntaxHighlighter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { applySyntaxHighlighting, syntaxHighlightingStyles } from './utils/syntaxHighlighting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SyntaxHighlighter = ({\n  content,\n  onChange,\n  textAreaRef,\n  mode = 'html'\n}) => {\n  _s();\n  const highlighterRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Sincronizar scroll entre el textArea y el resaltador\n  const syncScroll = () => {\n    if (highlighterRef.current && textAreaRef.current) {\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\n    }\n  };\n\n  // Actualizar el contenido resaltado cuando cambia el contenido\n  useEffect(() => {\n    if (highlighterRef.current && textAreaRef.current) {\n      try {\n        // Aplicar el resaltado de sintaxis\n        const highlightedContent = applySyntaxHighlighting(content, mode);\n        highlighterRef.current.innerHTML = highlightedContent;\n\n        // Configurar event listeners\n        textAreaRef.current.addEventListener('scroll', syncScroll);\n      } catch (error) {\n        console.error(\"Error applying syntax highlighting:\", error);\n      }\n\n      // Limpiar event listeners\n      return () => {\n        if (textAreaRef.current) {\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\n        }\n      };\n    }\n  }, [content, mode]);\n\n  // Manejar cambios en el textarea\n  const handleChange = e => {\n    if (onChange) {\n      onChange(e);\n    }\n  };\n\n  // Manejar atajos de teclado (Tab)\n  const handleKeyDown = e => {\n    // Insertar 2 espacios cuando se presiona Tab\n    if (e.key === 'Tab') {\n      e.preventDefault();\n      const target = e.target;\n      const start = target.selectionStart;\n      const end = target.selectionEnd;\n\n      // Insertar espacios donde está el cursor\n      const newText = target.value.substring(0, start) + '  ' + target.value.substring(end);\n\n      // Actualizar el valor\n      target.value = newText;\n\n      // Poner el cursor después de los espacios insertados\n      target.selectionStart = target.selectionEnd = start + 2;\n\n      // Disparar evento de cambio\n      handleChange({\n        target: {\n          name: 'content',\n          value: newText\n        }\n      });\n    }\n  };\n\n  // Estilos CSS\n  const styles = {\n    container: {\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden'\n    },\n    highlighter: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      padding: '16px',\n      margin: 0,\n      overflow: 'auto',\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'break-word',\n      boxSizing: 'border-box',\n      pointerEvents: 'none',\n      zIndex: 1\n    },\n    textarea: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      padding: '16px',\n      margin: 0,\n      overflow: 'auto',\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'break-word',\n      boxSizing: 'border-box',\n      color: 'transparent',\n      caretColor: '#d4d4d4',\n      backgroundColor: '#1e1e1e',\n      border: 'none',\n      resize: 'none',\n      outline: 'none',\n      fontFamily: 'Cascadia Code, Consolas, Monaco, Courier New, monospace',\n      fontSize: '14px',\n      lineHeight: 1.5,\n      zIndex: 2\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: syntaxHighlightingStyles\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      ref: highlighterRef,\n      className: \"syntax-highlight-editor\",\n      style: styles.highlighter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textAreaRef,\n      value: content,\n      onChange: handleChange,\n      onKeyDown: handleKeyDown,\n      onScroll: syncScroll,\n      style: styles.textarea,\n      spellCheck: \"false\",\n      placeholder: \"Escribe c\\xF3digo HTML aqu\\xED...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(SyntaxHighlighter, \"Xd0m4KXWVq9wjYwweA1FMrQUCSI=\");\n_c = SyntaxHighlighter;\nexport default SyntaxHighlighter;\nvar _c;\n$RefreshReg$(_c, \"SyntaxHighlighter\");","map":{"version":3,"names":["React","useEffect","useRef","applySyntaxHighlighting","syntaxHighlightingStyles","jsxDEV","_jsxDEV","SyntaxHighlighter","content","onChange","textAreaRef","mode","_s","highlighterRef","containerRef","syncScroll","current","scrollTop","scrollLeft","highlightedContent","innerHTML","addEventListener","error","console","removeEventListener","handleChange","e","handleKeyDown","key","preventDefault","target","start","selectionStart","end","selectionEnd","newText","value","substring","name","styles","container","position","width","height","overflow","highlighter","top","left","padding","margin","whiteSpace","wordWrap","boxSizing","pointerEvents","zIndex","textarea","color","caretColor","backgroundColor","border","resize","outline","fontFamily","fontSize","lineHeight","ref","style","children","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","className","onKeyDown","onScroll","spellCheck","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/damva/EducStation/src/components/admin/SyntaxHighlighter.jsx"],"sourcesContent":["\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { applySyntaxHighlighting, syntaxHighlightingStyles } from './utils/syntaxHighlighting';\r\n\r\nconst SyntaxHighlighter = ({ content, onChange, textAreaRef, mode = 'html' }) => {\r\n  const highlighterRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // Sincronizar scroll entre el textArea y el resaltador\r\n  const syncScroll = () => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      highlighterRef.current.scrollTop = textAreaRef.current.scrollTop;\r\n      highlighterRef.current.scrollLeft = textAreaRef.current.scrollLeft;\r\n    }\r\n  };\r\n\r\n  // Actualizar el contenido resaltado cuando cambia el contenido\r\n  useEffect(() => {\r\n    if (highlighterRef.current && textAreaRef.current) {\r\n      try {\r\n        // Aplicar el resaltado de sintaxis\r\n        const highlightedContent = applySyntaxHighlighting(content, mode);\r\n        highlighterRef.current.innerHTML = highlightedContent;\r\n        \r\n        // Configurar event listeners\r\n        textAreaRef.current.addEventListener('scroll', syncScroll);\r\n        \r\n      } catch (error) {\r\n        console.error(\"Error applying syntax highlighting:\", error);\r\n      }\r\n      \r\n      // Limpiar event listeners\r\n      return () => {\r\n        if (textAreaRef.current) {\r\n          textAreaRef.current.removeEventListener('scroll', syncScroll);\r\n        }\r\n      };\r\n    }\r\n  }, [content, mode]);\r\n\r\n  // Manejar cambios en el textarea\r\n  const handleChange = (e) => {\r\n    if (onChange) {\r\n      onChange(e);\r\n    }\r\n  };\r\n\r\n  // Manejar atajos de teclado (Tab)\r\n  const handleKeyDown = (e) => {\r\n    // Insertar 2 espacios cuando se presiona Tab\r\n    if (e.key === 'Tab') {\r\n      e.preventDefault();\r\n      \r\n      const target = e.target;\r\n      const start = target.selectionStart;\r\n      const end = target.selectionEnd;\r\n      \r\n      // Insertar espacios donde está el cursor\r\n      const newText = \r\n        target.value.substring(0, start) + \r\n        '  ' + \r\n        target.value.substring(end);\r\n      \r\n      // Actualizar el valor\r\n      target.value = newText;\r\n      \r\n      // Poner el cursor después de los espacios insertados\r\n      target.selectionStart = target.selectionEnd = start + 2;\r\n      \r\n      // Disparar evento de cambio\r\n      handleChange({\r\n        target: {\r\n          name: 'content',\r\n          value: newText\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Estilos CSS\r\n  const styles = {\r\n    container: {\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100%',\r\n      overflow: 'hidden'\r\n    },\r\n    highlighter: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      padding: '16px',\r\n      margin: 0,\r\n      overflow: 'auto',\r\n      whiteSpace: 'pre-wrap',\r\n      wordWrap: 'break-word',\r\n      boxSizing: 'border-box',\r\n      pointerEvents: 'none',\r\n      zIndex: 1\r\n    },\r\n    textarea: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      width: '100%',\r\n      height: '100%',\r\n      padding: '16px',\r\n      margin: 0,\r\n      overflow: 'auto',\r\n      whiteSpace: 'pre-wrap',\r\n      wordWrap: 'break-word',\r\n      boxSizing: 'border-box',\r\n      color: 'transparent',\r\n      caretColor: '#d4d4d4',\r\n      backgroundColor: '#1e1e1e',\r\n      border: 'none',\r\n      resize: 'none',\r\n      outline: 'none',\r\n      fontFamily: 'Cascadia Code, Consolas, Monaco, Courier New, monospace',\r\n      fontSize: '14px',\r\n      lineHeight: 1.5,\r\n      zIndex: 2\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} style={styles.container}>\r\n      {/* Estilos para el resaltado de sintaxis */}\r\n      <style dangerouslySetInnerHTML={{ __html: syntaxHighlightingStyles }} />\r\n      \r\n      {/* Capa de resaltado (solo visual) */}\r\n      <pre \r\n        ref={highlighterRef}\r\n        className=\"syntax-highlight-editor\"\r\n        style={styles.highlighter}\r\n      />\r\n      \r\n      {/* Textarea para edición (visible pero con texto transparente) */}\r\n      <textarea\r\n        ref={textAreaRef}\r\n        value={content}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        onScroll={syncScroll}\r\n        style={styles.textarea}\r\n        spellCheck=\"false\"\r\n        placeholder=\"Escribe código HTML aquí...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SyntaxHighlighter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}